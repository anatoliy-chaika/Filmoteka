{"mappings":"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","sources":["src/JS/helpers.js","src/JS/service.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_private_field_get.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_extract_field_descriptor.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_apply_descriptor_get.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_private_field_init.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_private_field_set.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_apply_descriptor_set.js","node_modules/axios/index.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/core/AxiosError.js","node_modules/axios/lib/helpers/null.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/lib/helpers/HttpStatusCode.js","node_modules/notiflix/dist/notiflix-aio-3.2.6.min.js","src/JS/renderFunctions.js","src/JS/localStorage.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/global.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/uuid.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/util/src/compat.ts","node_modules/process/browser.js","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/index.js","node_modules/idb/build/wrap-idb-value.js","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/OnDisconnect.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/api/ServerValue.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/index.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","src/JS/spiner.js","node_modules/basiclightbox/dist/basicLightbox.min.js"],"sourcesContent":["export const filmBoxRef = document.querySelector('.js-films-list');\nexport const formRef = document.querySelector('.search__form');\nexport const listButton = document.querySelector('.buttons__list');\nexport const queueButton = document.querySelector('.js-queue');\nexport const genreInfo =\n  '{\"genres\":[{\"id\":28,\"name\":\"Action\"},{\"id\":12,\"name\":\"Adventure\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":18,\"name\":\"Drama\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":14,\"name\":\"Fantasy\"},{\"id\":36,\"name\":\"History\"},{\"id\":27,\"name\":\"Horror\"},{\"id\":10402,\"name\":\"Music\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10749,\"name\":\"Romance\"},{\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},{\"id\":53,\"name\":\"Thriller\"},{\"id\":10752,\"name\":\"War\"},{\"id\":37,\"name\":\"Western\"},{\"id\":9999,\"name\":\"Other\"}]}';\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyAjQPJnYi1aRc8VFSsfJnmKhUmbl7irFnM',\n  authDomain: 'filmoteka-377516.firebaseapp.com',\n  databaseURL: 'https://filmoteka-377516-default-rtdb.firebaseio.com',\n  projectId: 'filmoteka-377516',\n  storageBucket: 'filmoteka-377516.appspot.com',\n  messagingSenderId: '794274389144',\n  appId: '1:794274389144:web:7484dd766f3d32da9f44ed',\n  measurementId: 'G-C2FX86EHMV',\n};\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nclass FILMAPI {\n  #API_KEY;\n  #BASE_URL;\n\n  constructor() {\n    this.#API_KEY = '1aec7afb2309fd39902ffda599461df1';\n    this.#BASE_URL = 'https://api.themoviedb.org/3';\n    this.searchQuery = '';\n    this.page = 1;\n    this.max = undefined;\n  }\n\n  async fetchPopularMovies() {\n    try {\n      const resp = await axios.get(\n        `${this.#BASE_URL}/movie/popular?api_key=${\n          this.#API_KEY\n        }&language=en-US&page=${this.page}`\n      );\n      if (!resp.data.total_pages)\n        throw new Error('💔 Sorry but we can`t load films');\n      this.max = resp.data.total_pages;\n      if (this.max > 500) this.max = 500;\n      return resp.data.results;\n    } catch (err) {\n      Notiflix.Notify.failure(err.message);\n      console.log(err.message);\n    }\n  }\n\n  async fetchKeyword() {\n    if (!this.searchQuery) return;\n    try {\n      const resp = await axios.get(\n        `${this.#BASE_URL}/search/movie?api_key=${this.#API_KEY}&query=${\n          this.searchQuery\n        }&page=${this.page}`\n      );\n      if (!resp.data.page) throw new Error('💔 Sorry but we can`t load films');\n      this.max = resp.data.total_pages;\n      if (this.max > 500) this.max = 500;\n      return resp.data.results;\n    } catch (err) {\n      Notiflix.Notify.failure(err.message);\n      console.log(err.message);\n    }\n  }\n\n  async fetchById(id) {\n    try {\n      const resp = await axios.get(\n        `${this.#BASE_URL}/movie/${id}?api_key=${\n          this.#API_KEY\n        }&append_to_response=videos`\n      );\n      if (!resp.data)\n        throw new Error(\n          '💔 Sorry but we can`t load this film, please try again later'\n        );\n      return resp.data;\n    } catch (err) {\n      Notiflix.Notify.failure(err.message);\n      console.log(err.message);\n    }\n  }\n\n  incrementPage() {\n    if (this.page === this.max) {\n      return;\n    }\n    this.page += 1;\n  }\n\n  decrementPage() {\n    if (this.page === 1) {\n      return;\n    }\n    this.page -= 1;\n  }\n\n  setSearchQuery(value) {\n    this.searchQuery = value;\n  }\n\n  setPage(value) {\n    this.page = value;\n  }\n\n  setMax(value) {\n    this.max = value;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  getPage() {\n    return this.page;\n  }\n\n  getMax() {\n    return this.max;\n  }\n\n  getSearchQuery() {\n    return this.searchQuery;\n  }\n}\n\nexport const API = new FILMAPI();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldGet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorGet = _interopRequireDefault(require(\"./_class_apply_descriptor_get\"));\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"get\");\n    return (0, _classApplyDescriptorGet).default(receiver, descriptor);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classExtractFieldDescriptor;\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorGet;\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldSet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorSet = _interopRequireDefault(require(\"./_class_apply_descriptor_set\"));\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"set\");\n    (0, _classApplyDescriptorSet).default(receiver, descriptor, value);\n    return value;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorSet;\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  mergeConfig\n}\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject\n};\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer !== undefined) {\n      validator.assertOptions(paramsSerializer, {\n        encode: validators.function,\n        serialize: validators.function\n      }, true);\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default FormData;\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction isValidHeaderName(str) {\n  return /^[-_a-zA-Z]+$/.test(str.trim());\n}\n\nfunction matchHeaderValue(context, value, header, filter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv)) {\n      requestHeaders.setContentType(false); // Let the browser set it\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","export const VERSION = \"1.3.2\";","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","/* Notiflix AIO (https://notiflix.github.io) - Version: 3.2.6 - Author: Furkan (https://github.com/furcan) - Copyright 2019 - 2023 Notiflix, MIT Licence (https://opensource.org/licenses/MIT) */\n\n(function(t,e){\"function\"==typeof define&&define.amd?define([],function(){return e(t)}):\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e(t):t.Notiflix=e(t)})(\"undefined\"==typeof global?\"undefined\"==typeof window?this:window:global,function(t){'use strict';if(\"undefined\"==typeof t&&\"undefined\"==typeof t.document)return!1;var e,i,a,n,o,r=\"\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation\",s=\"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif\",l={Success:\"Success\",Failure:\"Failure\",Warning:\"Warning\",Info:\"Info\"},m={wrapID:\"NotiflixNotifyWrap\",overlayID:\"NotiflixNotifyOverlay\",width:\"280px\",position:\"right-top\",distance:\"10px\",opacity:1,borderRadius:\"5px\",rtl:!1,timeout:3e3,messageMaxLength:110,backOverlay:!1,backOverlayColor:\"rgba(0,0,0,0.5)\",plainText:!0,showOnlyTheLastOne:!1,clickToClose:!1,pauseOnHover:!0,ID:\"NotiflixNotify\",className:\"notiflix-notify\",zindex:4001,fontFamily:\"Quicksand\",fontSize:\"13px\",cssAnimation:!0,cssAnimationDuration:400,cssAnimationStyle:\"fade\",closeButton:!1,useIcon:!0,useFontAwesome:!1,fontAwesomeIconStyle:\"basic\",fontAwesomeIconSize:\"34px\",success:{background:\"#32c682\",textColor:\"#fff\",childClassName:\"notiflix-notify-success\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-check-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(50,198,130,0.2)\"},failure:{background:\"#ff5549\",textColor:\"#fff\",childClassName:\"notiflix-notify-failure\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-times-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(255,85,73,0.2)\"},warning:{background:\"#eebf31\",textColor:\"#fff\",childClassName:\"notiflix-notify-warning\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-exclamation-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(238,191,49,0.2)\"},info:{background:\"#26c0d3\",textColor:\"#fff\",childClassName:\"notiflix-notify-info\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-info-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(38,192,211,0.2)\"}},c={Success:\"Success\",Failure:\"Failure\",Warning:\"Warning\",Info:\"Info\"},p={ID:\"NotiflixReportWrap\",className:\"notiflix-report\",width:\"320px\",backgroundColor:\"#f8f8f8\",borderRadius:\"25px\",rtl:!1,zindex:4002,backOverlay:!0,backOverlayColor:\"rgba(0,0,0,0.5)\",backOverlayClickToClose:!1,fontFamily:\"Quicksand\",svgSize:\"110px\",plainText:!0,titleFontSize:\"16px\",titleMaxLength:34,messageFontSize:\"13px\",messageMaxLength:400,buttonFontSize:\"14px\",buttonMaxLength:34,cssAnimation:!0,cssAnimationDuration:360,cssAnimationStyle:\"fade\",success:{svgColor:\"#32c682\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#32c682\",buttonColor:\"#fff\",backOverlayColor:\"rgba(50,198,130,0.2)\"},failure:{svgColor:\"#ff5549\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#ff5549\",buttonColor:\"#fff\",backOverlayColor:\"rgba(255,85,73,0.2)\"},warning:{svgColor:\"#eebf31\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#eebf31\",buttonColor:\"#fff\",backOverlayColor:\"rgba(238,191,49,0.2)\"},info:{svgColor:\"#26c0d3\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#26c0d3\",buttonColor:\"#fff\",backOverlayColor:\"rgba(38,192,211,0.2)\"}},f={Show:\"Show\",Ask:\"Ask\",Prompt:\"Prompt\"},d={ID:\"NotiflixConfirmWrap\",className:\"notiflix-confirm\",width:\"300px\",zindex:4003,position:\"center\",distance:\"10px\",backgroundColor:\"#f8f8f8\",borderRadius:\"25px\",backOverlay:!0,backOverlayColor:\"rgba(0,0,0,0.5)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:300,cssAnimationStyle:\"fade\",plainText:!0,titleColor:\"#32c682\",titleFontSize:\"16px\",titleMaxLength:34,messageColor:\"#1e1e1e\",messageFontSize:\"14px\",messageMaxLength:110,buttonsFontSize:\"15px\",buttonsMaxLength:34,okButtonColor:\"#f8f8f8\",okButtonBackground:\"#32c682\",cancelButtonColor:\"#f8f8f8\",cancelButtonBackground:\"#a9a9a9\"},x={Standard:\"Standard\",Hourglass:\"Hourglass\",Circle:\"Circle\",Arrows:\"Arrows\",Dots:\"Dots\",Pulse:\"Pulse\",Custom:\"Custom\",Notiflix:\"Notiflix\"},g={ID:\"NotiflixLoadingWrap\",className:\"notiflix-loading\",zindex:4e3,backgroundColor:\"rgba(0,0,0,0.8)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:400,clickToClose:!1,customSvgUrl:null,customSvgCode:null,svgSize:\"80px\",svgColor:\"#32c682\",messageID:\"NotiflixLoadingMessage\",messageFontSize:\"15px\",messageMaxLength:34,messageColor:\"#dcdcdc\"},b={Standard:\"Standard\",Hourglass:\"Hourglass\",Circle:\"Circle\",Arrows:\"Arrows\",Dots:\"Dots\",Pulse:\"Pulse\"},u={ID:\"NotiflixBlockWrap\",querySelectorLimit:200,className:\"notiflix-block\",position:\"absolute\",zindex:1e3,backgroundColor:\"rgba(255,255,255,0.9)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:300,svgSize:\"45px\",svgColor:\"#383838\",messageFontSize:\"14px\",messageMaxLength:34,messageColor:\"#383838\"},y=function(t){return console.error(\"%c Notiflix Error \",\"padding:2px;border-radius:20px;color:#fff;background:#ff5549\",\"\\n\"+t+r)},k=function(t){return console.log(\"%c Notiflix Info \",\"padding:2px;border-radius:20px;color:#fff;background:#26c0d3\",\"\\n\"+t+r)},w=function(e){return e||(e=\"head\"),null!==t.document[e]||(y(\"\\nNotiflix needs to be appended to the \\\"<\"+e+\">\\\" element, but you called it before the \\\"<\"+e+\">\\\" element has been created.\"),!1)},h=function(e,i){if(!w(\"head\"))return!1;if(null!==e()&&!t.document.getElementById(i)){var a=t.document.createElement(\"style\");a.id=i,a.innerHTML=e(),t.document.head.appendChild(a)}},v=function(){var t={},e=!1,a=0;\"[object Boolean]\"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],a++);for(var n=function(i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(t[a]=e&&\"[object Object]\"===Object.prototype.toString.call(i[a])?v(t[a],i[a]):i[a])};a<arguments.length;a++)n(arguments[a]);return t},N=function(e){var i=t.document.createElement(\"div\");return i.innerHTML=e,i.textContent||i.innerText||\"\"},C=function(t,e){t||(t=\"110px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportSuccess\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\"><path d=\\\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\\\" style=\\\"-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\"><path d=\\\"M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z\\\" style=\\\"-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},z=function(t,e){t||(t=\"110px\"),e||(e=\"#ff5549\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportFailure\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z\\\" style=\\\"-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z\\\" style=\\\"-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},S=function(t,e){t||(t=\"110px\"),e||(e=\"#eebf31\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportWarning\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z\\\" style=\\\"-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)\\\"><path d=\\\"M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z\\\" style=\\\"-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},L=function(t,e){t||(t=\"110px\"),e||(e=\"#26c0d3\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportInfo\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\\\" style=\\\"-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z\\\" style=\\\"-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},W=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" transform=\\\"scale(.8)\\\" viewBox=\\\"0 0 38 38\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\" transform=\\\"translate(1 1)\\\"><circle cx=\\\"18\\\" cy=\\\"18\\\" r=\\\"18\\\" stroke-opacity=\\\".25\\\"/><path d=\\\"M36 18c0-9.94-8.06-18-18-18\\\"><animateTransform attributeName=\\\"transform\\\" dur=\\\"1s\\\" from=\\\"0 18 18\\\" repeatCount=\\\"indefinite\\\" to=\\\"360 18 18\\\" type=\\\"rotate\\\"/></path></g></svg>\";return i},I=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXLoadingHourglass\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 200 200\\\"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group=\\\"true\\\" data-animator-type=\\\"1\\\" style=\\\"-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box\\\"><g id=\\\"NXhourglass2\\\" fill=\\\"inherit\\\"><g data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\" style=\\\"-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\\\" opacity=\\\".4\\\"><path id=\\\"NXhourglass4\\\" d=\\\"M100 100l-34.38 32.08v31.14h68.76v-31.14z\\\"/></g><g data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\" style=\\\"-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\\\" opacity=\\\".4\\\"><path id=\\\"NXhourglass6\\\" d=\\\"M100 100L65.62 67.92V36.78h68.76v31.14z\\\"/></g><path d=\\\"M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z\\\"/></g></g></svg>\";return i},R=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"25 25 50 50\\\" style=\\\"-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:\"+t+\";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:\"+t+\";position:absolute;top:0;left:0;margin:auto\\\"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke=\\\"\"+e+\"\\\" stroke-width=\\\"2\\\" style=\\\"-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite\\\" stroke-dasharray=\\\"150 200\\\" stroke-dashoffset=\\\"-10\\\" stroke-linecap=\\\"round\\\"/></svg>\";return i},A=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 128 128\\\"><g><path fill=\\\"inherit\\\" d=\\\"M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z\\\"/><animateTransform attributeName=\\\"transform\\\" dur=\\\"1.5s\\\" from=\\\"0 64 64\\\" repeatCount=\\\"indefinite\\\" to=\\\"360 64 64\\\" type=\\\"rotate\\\"/></g></svg>\";return i},M=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 100 100\\\"><g transform=\\\"translate(25 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.239)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"-0.266s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g><g transform=\\\"translate(50 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.00152)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"-0.133s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g><g transform=\\\"translate(75 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.299)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g></svg>\";return i},B=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 44 44\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\"><circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\"><animate attributeName=\\\"r\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 20\\\"/><animate attributeName=\\\"stroke-opacity\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.3, 0.61, 0.355, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 0\\\"/></circle><circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\"><animate attributeName=\\\"r\\\" begin=\\\"-0.9s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 20\\\"/><animate attributeName=\\\"stroke-opacity\\\" begin=\\\"-0.9s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.3, 0.61, 0.355, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 0\\\"/></circle></g></svg>\";return i},X=function(t,e,i){t||(t=\"60px\"),e||(e=\"#f8f8f8\"),i||(i=\"#32c682\");var a=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXLoadingNotiflixLib\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 200 200\\\"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:\"+e+\";stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d=\\\"M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z\\\" style=\\\"animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal\\\" fill=\\\"\"+i+\"\\\" stroke=\\\"\"+i+\"\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"22\\\" stroke-width=\\\"12\\\"/><path class=\\\"nx-icon-line\\\" d=\\\"M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21\\\" style=\\\"animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal\\\" stroke-dasharray=\\\"500\\\"/><path class=\\\"nx-icon-line\\\" d=\\\"M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75\\\" style=\\\"animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal\\\" stroke-dasharray=\\\"500\\\"/></svg>\";return a},D=function(){return\"[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}\"},T=0,F=function(a,n,o,r){if(!w(\"body\"))return!1;e||G.Notify.init({});var c=v(!0,e,{});if(\"object\"==typeof o&&!Array.isArray(o)||\"object\"==typeof r&&!Array.isArray(r)){var p={};\"object\"==typeof o?p=o:\"object\"==typeof r&&(p=r),e=v(!0,e,p)}var f=e[a.toLocaleLowerCase(\"en\")];T++,\"string\"!=typeof n&&(n=\"Notiflix \"+a),e.plainText&&(n=N(n)),!e.plainText&&n.length>e.messageMaxLength&&(e=v(!0,e,{closeButton:!0,messageMaxLength:150}),n=\"Possible HTML Tags Error: The \\\"plainText\\\" option is \\\"false\\\" and the notification content length is more than the \\\"messageMaxLength\\\" option.\"),n.length>e.messageMaxLength&&(n=n.substring(0,e.messageMaxLength)+\"...\"),\"shadow\"===e.fontAwesomeIconStyle&&(f.fontAwesomeIconColor=f.background),e.cssAnimation||(e.cssAnimationDuration=0);var d=t.document.getElementById(m.wrapID)||t.document.createElement(\"div\");if(d.id=m.wrapID,d.style.width=e.width,d.style.zIndex=e.zindex,d.style.opacity=e.opacity,\"center-center\"===e.position?(d.style.left=e.distance,d.style.top=e.distance,d.style.right=e.distance,d.style.bottom=e.distance,d.style.margin=\"auto\",d.classList.add(\"nx-flex-center-center\"),d.style.maxHeight=\"calc((100vh - \"+e.distance+\") - \"+e.distance+\")\",d.style.display=\"flex\",d.style.flexWrap=\"wrap\",d.style.flexDirection=\"column\",d.style.justifyContent=\"center\",d.style.alignItems=\"center\",d.style.pointerEvents=\"none\"):\"center-top\"===e.position?(d.style.left=e.distance,d.style.right=e.distance,d.style.top=e.distance,d.style.bottom=\"auto\",d.style.margin=\"auto\"):\"center-bottom\"===e.position?(d.style.left=e.distance,d.style.right=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.margin=\"auto\"):\"right-bottom\"===e.position?(d.style.right=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.left=\"auto\"):\"left-top\"===e.position?(d.style.left=e.distance,d.style.top=e.distance,d.style.right=\"auto\",d.style.bottom=\"auto\"):\"left-bottom\"===e.position?(d.style.left=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.right=\"auto\"):(d.style.right=e.distance,d.style.top=e.distance,d.style.left=\"auto\",d.style.bottom=\"auto\"),e.backOverlay){var x=t.document.getElementById(m.overlayID)||t.document.createElement(\"div\");x.id=m.overlayID,x.style.width=\"100%\",x.style.height=\"100%\",x.style.position=\"fixed\",x.style.zIndex=e.zindex-1,x.style.left=0,x.style.top=0,x.style.right=0,x.style.bottom=0,x.style.background=f.backOverlayColor||e.backOverlayColor,x.className=e.cssAnimation?\"nx-with-animation\":\"\",x.style.animationDuration=e.cssAnimation?e.cssAnimationDuration+\"ms\":\"\",t.document.getElementById(m.overlayID)||t.document.body.appendChild(x)}t.document.getElementById(m.wrapID)||t.document.body.appendChild(d);var g=t.document.createElement(\"div\");g.id=e.ID+\"-\"+T,g.className=e.className+\" \"+f.childClassName+\" \"+(e.cssAnimation?\"nx-with-animation\":\"\")+\" \"+(e.useIcon?\"nx-with-icon\":\"\")+\" nx-\"+e.cssAnimationStyle+\" \"+(e.closeButton&&\"function\"!=typeof o?\"nx-with-close-button\":\"\")+\" \"+(\"function\"==typeof o?\"nx-with-callback\":\"\")+\" \"+(e.clickToClose?\"nx-notify-click-to-close\":\"\"),g.style.fontSize=e.fontSize,g.style.color=f.textColor,g.style.background=f.background,g.style.borderRadius=e.borderRadius,g.style.pointerEvents=\"all\",e.rtl&&(g.setAttribute(\"dir\",\"rtl\"),g.classList.add(\"nx-rtl-on\")),g.style.fontFamily=\"\\\"\"+e.fontFamily+\"\\\", \"+s,e.cssAnimation&&(g.style.animationDuration=e.cssAnimationDuration+\"ms\");var b=\"\";if(e.closeButton&&\"function\"!=typeof o&&(b=\"<span class=\\\"nx-close-button\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\\\"/></g></svg></span>\"),!e.useIcon)g.innerHTML=\"<span class=\\\"nx-message\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\");else if(e.useFontAwesome)g.innerHTML=\"<i style=\\\"color:\"+f.fontAwesomeIconColor+\"; font-size:\"+e.fontAwesomeIconSize+\";\\\" class=\\\"nx-message-icon nx-message-icon-fa \"+f.fontAwesomeClassName+\" \"+(\"shadow\"===e.fontAwesomeIconStyle?\"nx-message-icon-fa-shadow\":\"nx-message-icon-fa-basic\")+\"\\\"></i><span class=\\\"nx-message nx-with-icon\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\");else{var u=\"\";a===l.Success?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\\\"/></g></svg>\":a===l.Failure?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\\\"/></g></svg>\":a===l.Warning?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\\\"/></g></svg>\":a===l.Info&&(u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\\\"/></g></svg>\"),g.innerHTML=u+\"<span class=\\\"nx-message nx-with-icon\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\")}if(\"left-bottom\"===e.position||\"right-bottom\"===e.position){var y=t.document.getElementById(m.wrapID);y.insertBefore(g,y.firstChild)}else t.document.getElementById(m.wrapID).appendChild(g);var k=t.document.getElementById(g.id);if(k){var h,C,z=function(){k.classList.add(\"nx-remove\");var e=t.document.getElementById(m.overlayID);e&&0>=d.childElementCount&&e.classList.add(\"nx-remove\"),clearTimeout(h)},S=function(){if(k&&null!==k.parentNode&&k.parentNode.removeChild(k),0>=d.childElementCount&&null!==d.parentNode){d.parentNode.removeChild(d);var e=t.document.getElementById(m.overlayID);e&&null!==e.parentNode&&e.parentNode.removeChild(e)}clearTimeout(C)};if(e.closeButton&&\"function\"!=typeof o){var L=t.document.getElementById(g.id).querySelector(\"span.nx-close-button\");L.addEventListener(\"click\",function(){z();var t=setTimeout(function(){S(),clearTimeout(t)},e.cssAnimationDuration)})}if((\"function\"==typeof o||e.clickToClose)&&k.addEventListener(\"click\",function(){\"function\"==typeof o&&o(),z();var t=setTimeout(function(){S(),clearTimeout(t)},e.cssAnimationDuration)}),!e.closeButton&&\"function\"!=typeof o){var W=function(){h=setTimeout(function(){z()},e.timeout),C=setTimeout(function(){S()},e.timeout+e.cssAnimationDuration)};W(),e.pauseOnHover&&(k.addEventListener(\"mouseenter\",function(){k.classList.add(\"nx-paused\"),clearTimeout(h),clearTimeout(C)}),k.addEventListener(\"mouseleave\",function(){k.classList.remove(\"nx-paused\"),W()}))}}if(e.showOnlyTheLastOne&&0<T)for(var I,R=t.document.querySelectorAll(\"[id^=\"+e.ID+\"-]:not([id=\"+e.ID+\"-\"+T+\"])\"),A=0;A<R.length;A++)I=R[A],null!==I.parentNode&&I.parentNode.removeChild(I);e=v(!0,e,c)},E=function(){return\"[id^=NotiflixReportWrap]{position:fixed;z-index:4002;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;left:0;top:0;padding:10px;color:#1e1e1e;border-radius:25px;background:transparent;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixReportWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixReportWrap]>div[class*=\\\"-overlay\\\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixReportWrap]>div.nx-report-click-to-close{cursor:pointer}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]{width:320px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:inherit;padding:10px;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));border:1px solid rgba(0,0,0,.03);background:#f8f8f8;position:relative;z-index:1}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]>div[class$=\\\"-icon\\\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:110px;height:110px;display:block;margin:6px auto 12px}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]>div[class$=\\\"-icon\\\"] svg{min-width:100%;max-width:100%;height:auto}[id^=NotiflixReportWrap]>*>h5{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:16px;font-weight:500;line-height:1.4;margin:0 0 10px;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);float:left;width:100%;text-align:center}[id^=NotiflixReportWrap]>*>p{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:13px;line-height:1.4;font-weight:normal;float:left;width:100%;padding:0 10px;margin:0 0 10px}[id^=NotiflixReportWrap] a#NXReportButton{word-break:break-all;word-break:break-word;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;cursor:pointer;float:right;padding:7px 17px;background:#32c682;font-size:14px;line-height:1.4;font-weight:500;border-radius:inherit!important;color:#fff}[id^=NotiflixReportWrap] a#NXReportButton:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixReportWrap].nx-rtl-on a#NXReportButton{float:left}[id^=NotiflixReportWrap]>div[class*=\\\"-overlay\\\"].nx-with-animation{-webkit-animation:report-overlay-animation .3s ease-in-out 0s normal;animation:report-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"].nx-with-animation.nx-fade{-webkit-animation:report-animation-fade .3s ease-in-out 0s normal;animation:report-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"].nx-with-animation.nx-zoom{-webkit-animation:report-animation-zoom .3s ease-in-out 0s normal;animation:report-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-overlay\\\"].nx-with-animation{opacity:0;-webkit-animation:report-overlay-animation-remove .3s ease-in-out 0s normal;animation:report-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-content\\\"].nx-with-animation.nx-fade{opacity:0;-webkit-animation:report-animation-fade-remove .3s ease-in-out 0s normal;animation:report-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-content\\\"].nx-with-animation.nx-zoom{opacity:0;-webkit-animation:report-animation-zoom-remove .3s ease-in-out 0s normal;animation:report-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}\"},j=function(e,a,n,o,r,l){if(!w(\"body\"))return!1;i||G.Report.init({});var m={};if(\"object\"==typeof r&&!Array.isArray(r)||\"object\"==typeof l&&!Array.isArray(l)){var f={};\"object\"==typeof r?f=r:\"object\"==typeof l&&(f=l),m=v(!0,i,{}),i=v(!0,i,f)}var d=i[e.toLocaleLowerCase(\"en\")];\"string\"!=typeof a&&(a=\"Notiflix \"+e),\"string\"!=typeof n&&(e===c.Success?n=\"\\\"Do not try to become a person of success but try to become a person of value.\\\" <br><br>- Albert Einstein\":e===c.Failure?n=\"\\\"Failure is simply the opportunity to begin again, this time more intelligently.\\\" <br><br>- Henry Ford\":e===c.Warning?n=\"\\\"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny.\\\" <br><br>- Mustafa Kemal Ataturk\":e===c.Info&&(n=\"\\\"Knowledge rests not upon truth alone, but upon error also.\\\" <br><br>- Carl Gustav Jung\")),\"string\"!=typeof o&&(o=\"Okay\"),i.plainText&&(a=N(a),n=N(n),o=N(o)),i.plainText||(a.length>i.titleMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the title content length is more than the \\\"titleMaxLength\\\" option.\",o=\"Okay\"),n.length>i.messageMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the message content length is more than the \\\"messageMaxLength\\\" option.\",o=\"Okay\"),o.length>i.buttonMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the button content length is more than the \\\"buttonMaxLength\\\" option.\",o=\"Okay\")),a.length>i.titleMaxLength&&(a=a.substring(0,i.titleMaxLength)+\"...\"),n.length>i.messageMaxLength&&(n=n.substring(0,i.messageMaxLength)+\"...\"),o.length>i.buttonMaxLength&&(o=o.substring(0,i.buttonMaxLength)+\"...\"),i.cssAnimation||(i.cssAnimationDuration=0);var x=t.document.createElement(\"div\");x.id=p.ID,x.className=i.className,x.style.zIndex=i.zindex,x.style.borderRadius=i.borderRadius,x.style.fontFamily=\"\\\"\"+i.fontFamily+\"\\\", \"+s,i.rtl&&(x.setAttribute(\"dir\",\"rtl\"),x.classList.add(\"nx-rtl-on\")),x.style.display=\"flex\",x.style.flexWrap=\"wrap\",x.style.flexDirection=\"column\",x.style.alignItems=\"center\",x.style.justifyContent=\"center\";var g=\"\",b=!0===i.backOverlayClickToClose;i.backOverlay&&(g=\"<div class=\\\"\"+i.className+\"-overlay\"+(i.cssAnimation?\" nx-with-animation\":\"\")+(b?\" nx-report-click-to-close\":\"\")+\"\\\" style=\\\"background:\"+(d.backOverlayColor||i.backOverlayColor)+\";animation-duration:\"+i.cssAnimationDuration+\"ms;\\\"></div>\");var u=\"\";if(e===c.Success?u=C(i.svgSize,d.svgColor):e===c.Failure?u=z(i.svgSize,d.svgColor):e===c.Warning?u=S(i.svgSize,d.svgColor):e===c.Info&&(u=L(i.svgSize,d.svgColor)),x.innerHTML=g+\"<div class=\\\"\"+i.className+\"-content\"+(i.cssAnimation?\" nx-with-animation \":\"\")+\" nx-\"+i.cssAnimationStyle+\"\\\" style=\\\"width:\"+i.width+\"; background:\"+i.backgroundColor+\"; animation-duration:\"+i.cssAnimationDuration+\"ms;\\\"><div style=\\\"width:\"+i.svgSize+\"; height:\"+i.svgSize+\";\\\" class=\\\"\"+i.className+\"-icon\\\">\"+u+\"</div><h5 class=\\\"\"+i.className+\"-title\\\" style=\\\"font-weight:500; font-size:\"+i.titleFontSize+\"; color:\"+d.titleColor+\";\\\">\"+a+\"</h5><p class=\\\"\"+i.className+\"-message\\\" style=\\\"font-size:\"+i.messageFontSize+\"; color:\"+d.messageColor+\";\\\">\"+n+\"</p><a id=\\\"NXReportButton\\\" class=\\\"\"+i.className+\"-button\\\" style=\\\"font-weight:500; font-size:\"+i.buttonFontSize+\"; background:\"+d.buttonBackground+\"; color:\"+d.buttonColor+\";\\\">\"+o+\"</a></div>\",!t.document.getElementById(x.id)){t.document.body.appendChild(x);var y=function(){var e=t.document.getElementById(x.id);e.classList.add(\"nx-remove\");var a=setTimeout(function(){null!==e.parentNode&&e.parentNode.removeChild(e),clearTimeout(a)},i.cssAnimationDuration)},k=t.document.getElementById(\"NXReportButton\");if(k.addEventListener(\"click\",function(){\"function\"==typeof r&&r(),y()}),g&&b){var h=t.document.querySelector(\".nx-report-click-to-close\");h.addEventListener(\"click\",function(){y()})}}i=v(!0,i,m)},O=function(){return\"[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\\\"-overlay\\\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-overlay\\\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\\\"-overlay\\\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\\\"-content\\\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\\\"-content\\\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\\\"-content\\\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\\\"-content\\\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}\"},H=function(e,i,n,o,r,l,m,c,p){if(!w(\"body\"))return!1;a||G.Confirm.init({});var x=v(!0,a,{});\"object\"!=typeof p||Array.isArray(p)||(a=v(!0,a,p)),\"string\"!=typeof i&&(i=\"Notiflix Confirm\"),\"string\"!=typeof n&&(n=\"Do you agree with me?\"),\"string\"!=typeof r&&(r=\"Yes\"),\"string\"!=typeof l&&(l=\"No\"),\"function\"!=typeof m&&(m=void 0),\"function\"!=typeof c&&(c=void 0),a.plainText&&(i=N(i),n=N(n),r=N(r),l=N(l)),a.plainText||(i.length>a.titleMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the title content length is more than \\\"titleMaxLength\\\" option.\",r=\"Okay\",l=\"...\"),n.length>a.messageMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the message content length is more than \\\"messageMaxLength\\\" option.\",r=\"Okay\",l=\"...\"),(r.length||l.length)>a.buttonsMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the buttons content length is more than \\\"buttonsMaxLength\\\" option.\",r=\"Okay\",l=\"...\")),i.length>a.titleMaxLength&&(i=i.substring(0,a.titleMaxLength)+\"...\"),n.length>a.messageMaxLength&&(n=n.substring(0,a.messageMaxLength)+\"...\"),r.length>a.buttonsMaxLength&&(r=r.substring(0,a.buttonsMaxLength)+\"...\"),l.length>a.buttonsMaxLength&&(l=l.substring(0,a.buttonsMaxLength)+\"...\"),a.cssAnimation||(a.cssAnimationDuration=0);var g=t.document.createElement(\"div\");g.id=d.ID,g.className=a.className+(a.cssAnimation?\" nx-with-animation nx-\"+a.cssAnimationStyle:\"\"),g.style.zIndex=a.zindex,g.style.padding=a.distance,a.rtl&&(g.setAttribute(\"dir\",\"rtl\"),g.classList.add(\"nx-rtl-on\"));var b=\"string\"==typeof a.position?a.position.trim():\"center\";g.classList.add(\"nx-position-\"+b),g.style.fontFamily=\"\\\"\"+a.fontFamily+\"\\\", \"+s;var u=\"\";a.backOverlay&&(u=\"<div class=\\\"\"+a.className+\"-overlay\"+(a.cssAnimation?\" nx-with-animation\":\"\")+\"\\\" style=\\\"background:\"+a.backOverlayColor+\";animation-duration:\"+a.cssAnimationDuration+\"ms;\\\"></div>\");var y=\"\";\"function\"==typeof m&&(y=\"<a id=\\\"NXConfirmButtonCancel\\\" class=\\\"nx-confirm-button-cancel\\\" style=\\\"color:\"+a.cancelButtonColor+\";background:\"+a.cancelButtonBackground+\";font-size:\"+a.buttonsFontSize+\";\\\">\"+l+\"</a>\");var k=\"\",h=null,C=void 0;if(e===f.Ask||e===f.Prompt){h=o||\"\";var z=e===f.Ask?Math.ceil(1.5*h.length):200<h.length?Math.ceil(1.5*h.length):250,S=e===f.Prompt?\"value=\\\"\"+h+\"\\\"\":\"\";k=\"<div><input id=\\\"NXConfirmValidationInput\\\" type=\\\"text\\\" \"+S+\" maxlength=\\\"\"+z+\"\\\" style=\\\"font-size:\"+a.messageFontSize+\";border-radius: \"+a.borderRadius+\";\\\" autocomplete=\\\"off\\\" spellcheck=\\\"false\\\" autocapitalize=\\\"none\\\" /></div>\"}if(g.innerHTML=u+\"<div class=\\\"\"+a.className+\"-content\\\" style=\\\"width:\"+a.width+\"; background:\"+a.backgroundColor+\"; animation-duration:\"+a.cssAnimationDuration+\"ms; border-radius: \"+a.borderRadius+\";\\\"><div class=\\\"\"+a.className+\"-head\\\"><h5 style=\\\"color:\"+a.titleColor+\";font-size:\"+a.titleFontSize+\";\\\">\"+i+\"</h5><div style=\\\"color:\"+a.messageColor+\";font-size:\"+a.messageFontSize+\";\\\">\"+n+k+\"</div></div><div class=\\\"\"+a.className+\"-buttons\\\"><a id=\\\"NXConfirmButtonOk\\\" class=\\\"nx-confirm-button-ok\"+(\"function\"==typeof m?\"\":\" nx-full\")+\"\\\" style=\\\"color:\"+a.okButtonColor+\";background:\"+a.okButtonBackground+\";font-size:\"+a.buttonsFontSize+\";\\\">\"+r+\"</a>\"+y+\"</div></div>\",!t.document.getElementById(g.id)){t.document.body.appendChild(g);var L=t.document.getElementById(g.id),W=t.document.getElementById(\"NXConfirmButtonOk\"),I=t.document.getElementById(\"NXConfirmValidationInput\");if(I&&(I.focus(),I.setSelectionRange(0,(I.value||\"\").length),I.addEventListener(\"keyup\",function(t){var i=t.target.value;if(e===f.Ask&&i!==h)t.preventDefault(),I.classList.add(\"nx-validation-failure\"),I.classList.remove(\"nx-validation-success\");else{e===f.Ask&&(I.classList.remove(\"nx-validation-failure\"),I.classList.add(\"nx-validation-success\"));var a=\"enter\"===(t.key||\"\").toLocaleLowerCase(\"en\")||13===t.keyCode;a&&W.dispatchEvent(new Event(\"click\"))}})),W.addEventListener(\"click\",function(t){if(e===f.Ask&&h&&I){var i=(I.value||\"\").toString();if(i!==h)return I.focus(),I.classList.add(\"nx-validation-failure\"),t.stopPropagation(),t.preventDefault(),t.returnValue=!1,t.cancelBubble=!0,!1;I.classList.remove(\"nx-validation-failure\")}\"function\"==typeof m&&(e===f.Prompt&&I&&(C=I.value||\"\"),m(C)),L.classList.add(\"nx-remove\");var n=setTimeout(function(){null!==L.parentNode&&(L.parentNode.removeChild(L),clearTimeout(n))},a.cssAnimationDuration)}),\"function\"==typeof m){var R=t.document.getElementById(\"NXConfirmButtonCancel\");R.addEventListener(\"click\",function(){\"function\"==typeof c&&(e===f.Prompt&&I&&(C=I.value||\"\"),c(C)),L.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==L.parentNode&&(L.parentNode.removeChild(L),clearTimeout(t))},a.cssAnimationDuration)})}}a=v(!0,a,x)},P=function(){return\"[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"] img,[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}\"},U=function(e,i,a,o,r){if(!w(\"body\"))return!1;n||G.Loading.init({});var l=v(!0,n,{});if(\"object\"==typeof i&&!Array.isArray(i)||\"object\"==typeof a&&!Array.isArray(a)){var m={};\"object\"==typeof i?m=i:\"object\"==typeof a&&(m=a),n=v(!0,n,m)}var c=\"\";if(\"string\"==typeof i&&0<i.length&&(c=i),o){c=c.length>n.messageMaxLength?N(c).toString().substring(0,n.messageMaxLength)+\"...\":N(c).toString();var p=\"\";0<c.length&&(p=\"<p id=\\\"\"+n.messageID+\"\\\" class=\\\"nx-loading-message\\\" style=\\\"color:\"+n.messageColor+\";font-size:\"+n.messageFontSize+\";\\\">\"+c+\"</p>\"),n.cssAnimation||(n.cssAnimationDuration=0);var f=\"\";if(e===x.Standard)f=W(n.svgSize,n.svgColor);else if(e===x.Hourglass)f=I(n.svgSize,n.svgColor);else if(e===x.Circle)f=R(n.svgSize,n.svgColor);else if(e===x.Arrows)f=A(n.svgSize,n.svgColor);else if(e===x.Dots)f=M(n.svgSize,n.svgColor);else if(e===x.Pulse)f=B(n.svgSize,n.svgColor);else if(e===x.Custom&&null!==n.customSvgCode&&null===n.customSvgUrl)f=n.customSvgCode||\"\";else if(e===x.Custom&&null!==n.customSvgUrl&&null===n.customSvgCode)f=\"<img class=\\\"nx-custom-loading-icon\\\" width=\\\"\"+n.svgSize+\"\\\" height=\\\"\"+n.svgSize+\"\\\" src=\\\"\"+n.customSvgUrl+\"\\\" alt=\\\"Notiflix\\\">\";else{if(e===x.Custom&&(null===n.customSvgUrl||null===n.customSvgCode))return y(\"You have to set a static SVG url to \\\"customSvgUrl\\\" option to use Loading Custom.\"),!1;f=X(n.svgSize,\"#f8f8f8\",\"#32c682\")}var d=parseInt((n.svgSize||\"\").replace(/[^0-9]/g,\"\")),b=t.innerWidth,u=d>=b?b-40+\"px\":d+\"px\",k=\"<div style=\\\"width:\"+u+\"; height:\"+u+\";\\\" class=\\\"\"+n.className+\"-icon\"+(0<c.length?\" nx-with-message\":\"\")+\"\\\">\"+f+\"</div>\",h=t.document.createElement(\"div\");if(h.id=g.ID,h.className=n.className+(n.cssAnimation?\" nx-with-animation\":\"\")+(n.clickToClose?\" nx-loading-click-to-close\":\"\"),h.style.zIndex=n.zindex,h.style.background=n.backgroundColor,h.style.animationDuration=n.cssAnimationDuration+\"ms\",h.style.fontFamily=\"\\\"\"+n.fontFamily+\"\\\", \"+s,h.style.display=\"flex\",h.style.flexWrap=\"wrap\",h.style.flexDirection=\"column\",h.style.alignItems=\"center\",h.style.justifyContent=\"center\",n.rtl&&(h.setAttribute(\"dir\",\"rtl\"),h.classList.add(\"nx-rtl-on\")),h.innerHTML=k+p,!t.document.getElementById(h.id)&&(t.document.body.appendChild(h),n.clickToClose)){var C=t.document.getElementById(h.id);C.addEventListener(\"click\",function(){h.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==h.parentNode&&(h.parentNode.removeChild(h),clearTimeout(t))},n.cssAnimationDuration)})}}else if(t.document.getElementById(g.ID))var z=t.document.getElementById(g.ID),S=setTimeout(function(){z.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==z.parentNode&&(z.parentNode.removeChild(z),clearTimeout(t))},n.cssAnimationDuration);clearTimeout(S)},r);n=v(!0,n,l)},V=function(e){\"string\"!=typeof e&&(e=\"\");var i=t.document.getElementById(g.ID);if(i)if(0<e.length){e=e.length>n.messageMaxLength?N(e).substring(0,n.messageMaxLength)+\"...\":N(e);var a=i.getElementsByTagName(\"p\")[0];if(a)a.innerHTML=e;else{var o=t.document.createElement(\"p\");o.id=n.messageID,o.className=\"nx-loading-message nx-loading-message-new\",o.style.color=n.messageColor,o.style.fontSize=n.messageFontSize,o.innerHTML=e,i.appendChild(o)}}else y(\"Where is the new message?\")},q=function(){return\"[id^=NotiflixBlockWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;z-index:1000;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;background:rgba(255,255,255,.9);text-align:center;animation-duration:.4s;width:100%;height:100%;left:0;top:0;border-radius:inherit;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixBlockWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixBlockWrap]>span[class*=\\\"-icon\\\"]{display:block;width:45px;height:45px;position:relative;margin:0 auto}[id^=NotiflixBlockWrap]>span[class*=\\\"-icon\\\"] svg{width:inherit;height:inherit}[id^=NotiflixBlockWrap]>span[class*=\\\"-message\\\"]{position:relative;display:block;width:100%;margin:10px auto 0;padding:0 10px;font-family:inherit!important;font-weight:normal;font-size:14px;line-height:1.4}[id^=NotiflixBlockWrap].nx-with-animation{-webkit-animation:block-animation-fade .3s ease-in-out 0s normal;animation:block-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixBlockWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:block-animation-fade-remove .3s ease-in-out 0s normal;animation:block-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}\"},Q=0,Y=function(e,i,a,n,r,l){var m;if(Array.isArray(a)){if(1>a.length)return y(\"Array of HTMLElements should contains at least one HTMLElement.\"),!1;m=a}else if(Object.prototype.isPrototypeOf.call(NodeList.prototype,a)){if(1>a.length)return y(\"NodeListOf<HTMLElement> should contains at least one HTMLElement.\"),!1;m=Array.prototype.slice.call(a)}else{var c=\"string\"!=typeof a||1>(a||\"\").length||1===(a||\"\").length&&(\"#\"===(a||\"\")[0]||\".\"===(a||\"\")[0]);if(c)return y(\"The selector parameter must be a string and matches a specified CSS selector(s).\"),!1;var p=t.document.querySelectorAll(a);if(1>p.length)return y(\"You called the \\\"Notiflix.Block...\\\" function with \\\"\"+a+\"\\\" selector, but there is no such element(s) in the document.\"),!1;m=p}o||G.Block.init({});var f=v(!0,o,{});if(\"object\"==typeof n&&!Array.isArray(n)||\"object\"==typeof r&&!Array.isArray(r)){var d={};\"object\"==typeof n?d=n:\"object\"==typeof r&&(d=r),o=v(!0,o,d)}var x=\"\";\"string\"==typeof n&&0<n.length&&(x=n),o.cssAnimation||(o.cssAnimationDuration=0);var g=u.className;\"string\"==typeof o.className&&(g=o.className.trim());var h=\"number\"==typeof o.querySelectorLimit?o.querySelectorLimit:200,C=(m||[]).length>=h?h:m.length,z=\"nx-block-temporary-position\";if(e){for(var S,L=[\"area\",\"base\",\"br\",\"col\",\"command\",\"embed\",\"hr\",\"img\",\"input\",\"keygen\",\"link\",\"meta\",\"param\",\"source\",\"track\",\"wbr\",\"html\",\"head\",\"title\",\"script\",\"style\",\"iframe\"],X=0;X<C;X++)if(S=m[X],S){if(-1<L.indexOf(S.tagName.toLocaleLowerCase(\"en\")))break;var D=S.querySelectorAll(\"[id^=\"+u.ID+\"]\");if(1>D.length){var T=\"\";i&&(i===b.Hourglass?T=I(o.svgSize,o.svgColor):i===b.Circle?T=R(o.svgSize,o.svgColor):i===b.Arrows?T=A(o.svgSize,o.svgColor):i===b.Dots?T=M(o.svgSize,o.svgColor):i===b.Pulse?T=B(o.svgSize,o.svgColor):T=W(o.svgSize,o.svgColor));var F=\"<span class=\\\"\"+g+\"-icon\\\" style=\\\"width:\"+o.svgSize+\";height:\"+o.svgSize+\";\\\">\"+T+\"</span>\",E=\"\";0<x.length&&(x=x.length>o.messageMaxLength?N(x).substring(0,o.messageMaxLength)+\"...\":N(x),E=\"<span style=\\\"font-size:\"+o.messageFontSize+\";color:\"+o.messageColor+\";\\\" class=\\\"\"+g+\"-message\\\">\"+x+\"</span>\"),Q++;var j=t.document.createElement(\"div\");j.id=u.ID+\"-\"+Q,j.className=g+(o.cssAnimation?\" nx-with-animation\":\"\"),j.style.position=o.position,j.style.zIndex=o.zindex,j.style.background=o.backgroundColor,j.style.animationDuration=o.cssAnimationDuration+\"ms\",j.style.fontFamily=\"\\\"\"+o.fontFamily+\"\\\", \"+s,j.style.display=\"flex\",j.style.flexWrap=\"wrap\",j.style.flexDirection=\"column\",j.style.alignItems=\"center\",j.style.justifyContent=\"center\",o.rtl&&(j.setAttribute(\"dir\",\"rtl\"),j.classList.add(\"nx-rtl-on\")),j.innerHTML=F+E;var O=t.getComputedStyle(S).getPropertyValue(\"position\"),H=\"string\"==typeof O?O.toLocaleLowerCase(\"en\"):\"relative\",P=Math.round(1.25*parseInt(o.svgSize))+40,U=S.offsetHeight||0,V=\"\";P>U&&(V=\"min-height:\"+P+\"px;\");var q=\"\";q=S.getAttribute(\"id\")?\"#\"+S.getAttribute(\"id\"):S.classList[0]?\".\"+S.classList[0]:(S.tagName||\"\").toLocaleLowerCase(\"en\");var Y=\"\",K=-1>=[\"absolute\",\"relative\",\"fixed\",\"sticky\"].indexOf(H);if(K||0<V.length){if(!w(\"head\"))return!1;K&&(Y=\"position:relative!important;\");var $=\"<style id=\\\"Style-\"+u.ID+\"-\"+Q+\"\\\">\"+q+\".\"+z+\"{\"+Y+V+\"}</style>\",J=t.document.createRange();J.selectNode(t.document.head);var Z=J.createContextualFragment($);t.document.head.appendChild(Z),S.classList.add(z)}S.appendChild(j)}}}else var _=function(e){var i=setTimeout(function(){null!==e.parentNode&&e.parentNode.removeChild(e);var a=e.getAttribute(\"id\"),n=t.document.getElementById(\"Style-\"+a);n&&null!==n.parentNode&&n.parentNode.removeChild(n),clearTimeout(i)},o.cssAnimationDuration)},tt=function(t){if(t&&0<t.length)for(var e,n=0;n<t.length;n++)e=t[n],e&&(e.classList.add(\"nx-remove\"),_(e));else\"string\"==typeof a?k(\"\\\"Notiflix.Block.remove();\\\" function called with \\\"\"+a+\"\\\" selector, but this selector does not have a \\\"Block\\\" element to remove.\"):k(\"\\\"Notiflix.Block.remove();\\\" function called with \\\"\"+a+\"\\\", but this \\\"Array<HTMLElement>\\\" or \\\"NodeListOf<HTMLElement>\\\" does not have a \\\"Block\\\" element to remove.\")},et=function(t){var e=setTimeout(function(){t.classList.remove(z),clearTimeout(e)},o.cssAnimationDuration+300)},it=setTimeout(function(){for(var t,e=0;e<C;e++)t=m[e],t&&(et(t),D=t.querySelectorAll(\"[id^=\"+u.ID+\"]\"),tt(D));clearTimeout(it)},l);o=v(!0,o,f)},G={Notify:{init:function(t){e=v(!0,m,t),h(D,\"NotiflixNotifyInternalCSS\")},merge:function(t){return e?void(e=v(!0,e,t)):(y(\"You have to initialize the Notify module before call Merge function.\"),!1)},success:function(t,e,i){F(l.Success,t,e,i)},failure:function(t,e,i){F(l.Failure,t,e,i)},warning:function(t,e,i){F(l.Warning,t,e,i)},info:function(t,e,i){F(l.Info,t,e,i)}},Report:{init:function(t){i=v(!0,p,t),h(E,\"NotiflixReportInternalCSS\")},merge:function(t){return i?void(i=v(!0,i,t)):(y(\"You have to initialize the Report module before call Merge function.\"),!1)},success:function(t,e,i,a,n){j(c.Success,t,e,i,a,n)},failure:function(t,e,i,a,n){j(c.Failure,t,e,i,a,n)},warning:function(t,e,i,a,n){j(c.Warning,t,e,i,a,n)},info:function(t,e,i,a,n){j(c.Info,t,e,i,a,n)}},Confirm:{init:function(t){a=v(!0,d,t),h(O,\"NotiflixConfirmInternalCSS\")},merge:function(t){return a?void(a=v(!0,a,t)):(y(\"You have to initialize the Confirm module before call Merge function.\"),!1)},show:function(t,e,i,a,n,o,r){H(f.Show,t,e,null,i,a,n,o,r)},ask:function(t,e,i,a,n,o,r,s){H(f.Ask,t,e,i,a,n,o,r,s)},prompt:function(t,e,i,a,n,o,r,s){H(f.Prompt,t,e,i,a,n,o,r,s)}},Loading:{init:function(t){n=v(!0,g,t),h(P,\"NotiflixLoadingInternalCSS\")},merge:function(t){return n?void(n=v(!0,n,t)):(y(\"You have to initialize the Loading module before call Merge function.\"),!1)},standard:function(t,e){U(x.Standard,t,e,!0,0)},hourglass:function(t,e){U(x.Hourglass,t,e,!0,0)},circle:function(t,e){U(x.Circle,t,e,!0,0)},arrows:function(t,e){U(x.Arrows,t,e,!0,0)},dots:function(t,e){U(x.Dots,t,e,!0,0)},pulse:function(t,e){U(x.Pulse,t,e,!0,0)},custom:function(t,e){U(x.Custom,t,e,!0,0)},notiflix:function(t,e){U(x.Notiflix,t,e,!0,0)},remove:function(t){\"number\"!=typeof t&&(t=0),U(null,null,null,!1,t)},change:function(t){V(t)}},Block:{init:function(t){o=v(!0,u,t),h(q,\"NotiflixBlockInternalCSS\")},merge:function(t){return o?void(o=v(!0,o,t)):(y(\"You have to initialize the \\\"Notiflix.Block\\\" module before call Merge function.\"),!1)},standard:function(t,e,i){Y(!0,b.Standard,t,e,i)},hourglass:function(t,e,i){Y(!0,b.Hourglass,t,e,i)},circle:function(t,e,i){Y(!0,b.Circle,t,e,i)},arrows:function(t,e,i){Y(!0,b.Arrows,t,e,i)},dots:function(t,e,i){Y(!0,b.Dots,t,e,i)},pulse:function(t,e,i){Y(!0,b.Pulse,t,e,i)},remove:function(t,e){\"number\"!=typeof e&&(e=0),Y(!1,null,t,null,null,e)}}};return\"object\"==typeof t.Notiflix?v(!0,t.Notiflix,{Notify:G.Notify,Report:G.Report,Confirm:G.Confirm,Loading:G.Loading,Block:G.Block}):{Notify:G.Notify,Report:G.Report,Confirm:G.Confirm,Loading:G.Loading,Block:G.Block}});","import { genreInfo } from './helpers';\nimport { filmBoxRef } from './helpers';\nimport { API } from './service';\nimport { storage } from './localStorage';\n\nexport function renderFilms(movies, movieListEl) {\n  movieListEl.innerHTML = movies\n    .map(movie => {\n      let genresList;\n      // Перевірка на існування жанрів\n      if (movie.genre_ids) {\n        if (movie.genre_ids.length > 3) {\n          genresList = parseGenres(movie.genre_ids).slice(0, 2);\n          genresList.push('Other');\n        } else {\n          genresList = parseGenres(movie.genre_ids);\n        }\n      } else if (movie.genres) {\n        if (movie.genres.length > 3) {\n          genresList = movie.genres.slice(0, 2);\n          genresList.push('Other');\n        } else {\n          genresList = movie.genres.map(genre => genre.name);\n        }\n      } else {\n        genresList = ['Another genre'];\n      }\n\n      // створення url постерів\n      const imgUrl = movie.poster_path\n        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        : 'https://myron5.github.io/goit-js-hw-07/кончене_фото.jpg';\n\n      // виділення року із дати\n      const date = movie.release_date\n        ? new Date(movie.release_date).getFullYear()\n        : '-';\n\n      // розмітка картки\n      return `\n                <li class=\"movie_card\" js-id=${movie.id}>\n                <div class=\"img__thumb\" style=\"background-image:url(${imgUrl})\"></div>\n                    <p class=\"movie_card_title\">${movie.original_title}</p>\n                    <div class=\"movie_card_desc\">\n                        <p class=\"movie_card_ganres\">${genresList.join(\n                          ', '\n                        )}</p>\n                        <p class=\"movie_card_year\">| ${date}</p>\n                        <span class=\"movie_card_rating\">${movie.vote_average.toFixed(\n                          2\n                        )}</span>\n                        </div>\n                </li>`;\n    })\n    .join('');\n}\n\nfunction parseGenres(genresIds) {\n  const genresInfo = JSON.parse(genreInfo);\n  let genresLists = [];\n  genresIds.length\n    ? genresIds.forEach(genre => {\n        genresLists.push(\n          genresInfo.genres.find(ganreInfo => ganreInfo.id === genre).name\n        );\n      })\n    : genresLists.push('Another genre');\n  return genresLists;\n}\n\nexport function pagination(activePage, totalPages) {\n  if (activePage == 1 && totalPages == 1) return [];\n\n  if (typeof totalPages !== 'number' || typeof activePage !== 'number') {\n    return;\n  }\n  if (totalPages < activePage || totalPages <= 0 || activePage <= 0) {\n    return;\n  }\n\n  if (totalPages === 1) {\n    return ['1active'];\n  }\n\n  const arr = [\n    activePage - 2,\n    activePage - 1,\n    activePage,\n    activePage + 1,\n    activePage + 2,\n  ];\n\n  const filteredArr = arr.filter(num => num > 1 && num < totalPages);\n  const newArr = [1, totalPages];\n\n  const includeThreeLeft = activePage === 5;\n  const includeThreeRight = activePage === totalPages - 4;\n  const includeLeftDots = activePage > 5;\n  const includeRightDots = activePage < totalPages - 4;\n\n  if (includeThreeLeft) filteredArr.unshift(2);\n  if (includeThreeRight) filteredArr.push(totalPages - 1);\n\n  if (includeLeftDots) {\n    filteredArr.unshift('...');\n    newArr.unshift('<-');\n  }\n\n  if (includeRightDots) {\n    filteredArr.push('...');\n    newArr.push('->');\n  }\n\n  if (newArr.includes('<-') || newArr.length === 4) {\n    newArr.splice(2, 0, ...filteredArr);\n  } else if (newArr.includes('->')) {\n    newArr.splice(1, 0, ...filteredArr);\n  } else {\n    newArr.splice(1, 0, ...filteredArr);\n  }\n\n  const result = newArr.map(el => {\n    if (typeof el === 'number') {\n      if (el === activePage) {\n        el = el + 'active';\n      }\n      el = String(el);\n    }\n    return el;\n  });\n\n  return result;\n}\n\nexport function renderPagination(paginationArr, filmBoxRef) {\n  const paginationUl = `<ul class=\"pagination\"></ul>`;\n  let paginationUlRef = document.querySelector('.pagination');\n  if (paginationUlRef) {\n    paginationUlRef.remove();\n  }\n\n  filmBoxRef.insertAdjacentHTML('afterend', paginationUl);\n  paginationUlRef = document.querySelector('.pagination');\n\n  const leftArrowMarkup = `\n    <li class=\"pagination__item item-left-arrow\">\n      <button  class=\"pagination__left-arrow pagination__link\" aria-label=\"left-arrow\">\n      </button>\n    </li>\n  `;\n  const rightArrowMarkup = `\n    <li class=\"pagination__right-arrow pagination__item item-right-arrow\"\">\n      <button  class=\"pagination__right-arrow pagination__link\" data=\"rightArrow\" aria-label=\"right-arrow>\n      </button>\n    </li>\n  `;\n\n  const numbersArr = paginationArr\n    .filter(el => Number.parseInt(el) === Number.parseInt(el))\n    .map(el => Number.parseInt(el));\n  const firstNumber = Math.min(...numbersArr);\n  const lastNumber = Math.max(...numbersArr);\n\n  paginationArr.forEach(page => {\n    if (page === '<-') {\n      paginationUlRef.insertAdjacentHTML('beforeend', leftArrowMarkup);\n    } else if (page === '->') {\n      paginationUlRef.insertAdjacentHTML('beforeend', rightArrowMarkup);\n    } else if (page.includes('active')) {\n      const updatedPageName = page.replace('active', '');\n      paginationUlRef.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"pagination__item pagination__item--isActive\">\n          <button class=\"pagination__link\" type=\"button\" aria-label=\"pagination-item\">${updatedPageName}</button>\n        </li>`\n      );\n    } else if (page === '...') {\n      paginationUlRef.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"pagination__item pagination__item--desktop pagination__item--dots\" >\n          <button class=\"pagination__link\" type=\"button\" aria-label=\"pagination-link\">${page}</button>\n        </li>\n        `\n      );\n    } else if (Number(page) === firstNumber || Number(page) === lastNumber) {\n      paginationUlRef.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"pagination__item pagination__item--desktop\">\n        <button class=\"pagination__link\" type=\"button\" aria-label=\"pagination-link\">${page}</button>\n        </li>\n        `\n      );\n    } else {\n      paginationUlRef.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"pagination__item\"><button class=\"pagination__link\" type=\"button\" aria-label=\"pagination-link\">${page}</button></li>`\n      );\n    }\n  });\n\n  paginationUlRef.addEventListener('click', checkCurrentPage);\n}\n\nfunction checkCurrentPage(evt) {\n  const navListRef = document.querySelector('.nav__list');\n  const el = [...navListRef.children].find(li => {\n    if (li.firstElementChild.classList.contains('current')) {\n      return li;\n    }\n  });\n  if (el.textContent === 'HOME') {\n    return listClickHandlerMain(evt);\n  }\n  if (filmBoxRef.dataset.id === 'watch-gallery') {\n    return listClickHandlerWatch(evt);\n  }\n  if (filmBoxRef.dataset.id === 'queue-gallery') {\n    return listClickHandlerQueue(evt);\n  }\n}\n\nfunction listClickHandlerMain(event) {\n  event.preventDefault();\n  const element = event.target;\n  const pageValue = event.target.textContent;\n  const trimedValue = pageValue.trim();\n\n  const searchQueryCheck = async () => {\n    let films;\n    if (!API.getSearchQuery()) films = await API.fetchPopularMovies();\n    else films = await API.fetchKeyword();\n    renderFilms(films, filmBoxRef);\n  };\n\n  if (element.classList[0] === 'pagination') {\n    return;\n  }\n\n  filmBoxRef.innerHTML = '';\n\n  if (trimedValue === pageValue) {\n    if (Number(pageValue) < API.getMax() + 1) {\n      API.setPage(Number(pageValue));\n      searchQueryCheck();\n    }\n  } else if (element.classList[0] === 'pagination__right-arrow') {\n    API.incrementPage();\n    searchQueryCheck();\n  } else {\n    API.decrementPage();\n    searchQueryCheck();\n  }\n\n  const paginationArr = pagination(API.getPage(), API.getMax());\n  renderPagination(paginationArr, filmBoxRef);\n}\n\nfunction listClickHandlerWatch(event) {\n  event.preventDefault();\n  const element = event.target;\n  const pageValue = event.target.textContent;\n  const trimedValue = pageValue.trim();\n\n  if (element.classList[0] === 'pagination') {\n    return;\n  }\n\n  filmBoxRef.innerHTML = '';\n\n  if (trimedValue === pageValue) {\n    if (Number(pageValue) < storage.getMaxWatch() + 1) {\n      (async () => {\n        storage.setPageWatch(Number(pageValue));\n        const films = await storage.getTwentyFromWatch();\n        renderFilms(films, filmBoxRef);\n      })();\n    }\n  } else if (element.classList[0] === 'pagination__right-arrow') {\n    (async () => {\n      storage.incrementPageWatch();\n      const films = await storage.getTwentyFromWatch();\n      renderFilms(films, filmBoxRef);\n    })();\n  } else {\n    (async () => {\n      storage.decrementPageWatch();\n      const films = await storage.getTwentyFromWatch();\n      renderFilms(films, filmBoxRef);\n    })();\n  }\n\n  const paginationArr = pagination(\n    storage.getPageWatch(),\n    storage.getMaxWatch()\n  );\n  renderPagination(paginationArr, filmBoxRef);\n}\n\nfunction listClickHandlerQueue(event) {\n  event.preventDefault();\n  const element = event.target;\n  const pageValue = event.target.textContent;\n  const trimedValue = pageValue.trim();\n\n  if (element.classList[0] === 'pagination') {\n    return;\n  }\n\n  filmBoxRef.innerHTML = '';\n\n  if (trimedValue === pageValue) {\n    if (Number(pageValue) < storage.getMaxQueue() + 1) {\n      (async () => {\n        storage.setPageQueue(Number(pageValue));\n        const films = await storage.getTwentyFromQueue();\n        renderFilms(films, filmBoxRef);\n      })();\n    }\n  } else if (element.classList[0] === 'pagination__right-arrow') {\n    (async () => {\n      storage.incrementPageQueue();\n      const films = await storage.getTwentyFromQueue();\n      renderFilms(films, filmBoxRef);\n    })();\n  } else {\n    (async () => {\n      storage.decrementPageQueue();\n      const films = await storage.getTwentyFromQueue();\n      renderFilms(films, filmBoxRef);\n    })();\n  }\n\n  const paginationArr = pagination(\n    storage.getPageQueue(),\n    storage.getMaxQueue()\n  );\n  renderPagination(paginationArr, filmBoxRef);\n}\n","import Notiflix from 'notiflix';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, get, set, ref } from 'firebase/database';\nimport { firebaseConfig } from './helpers';\n\nclass FilmsLocalStorage {\n  #WATCH_KEY;\n  #QUEUE_KEY;\n\n  #database;\n\n  constructor() {}\n\n  async resetConstructor() {\n    this.pageWatch = 1;\n    this.pageQueue = 1;\n\n    this.signIn = true;\n\n    const account = JSON.parse(localStorage.getItem('account'));\n    if (!account) {\n      Notiflix.Notify.warning('➡ You have to sign in first');\n      console.log('➡ You have to sign in first');\n      this.signIn = false;\n      return Promise.reject('fail');\n    }\n\n    this.uid = account.id;\n\n    this.#WATCH_KEY = /users/ + 'watch' + this.uid;\n    this.#QUEUE_KEY = /users/ + 'queue' + this.uid;\n\n    const app = initializeApp(firebaseConfig);\n    this.#database = getDatabase(app);\n\n    try {\n      const snapshotWatch = await get(ref(this.#database, this.#WATCH_KEY));\n      const snapshotQueue = await get(ref(this.#database, this.#QUEUE_KEY));\n\n      const filmsArrWatch = snapshotWatch.val() || [];\n      const filmsArrQueue = snapshotQueue.val() || [];\n\n      this.maxWatch = Math.ceil(filmsArrWatch.length / 20);\n      this.maxQueue = Math.ceil(filmsArrQueue.length / 20);\n    } catch (err) {\n      this.signIn = false;\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err.message);\n      return;\n    }\n\n    return Promise.resolve('sucess');\n  }\n\n  incrementPageWatch() {\n    if (this.pageWatch === this.maxWatch) {\n      return;\n    }\n    this.pageWatch += 1;\n  }\n\n  decrementPageWatch() {\n    if (this.pageWatch === 1) {\n      return;\n    }\n    this.pageWatch -= 1;\n  }\n\n  incrementPageQueue() {\n    if (this.pageQueue === this.maxQueue) {\n      return;\n    }\n    this.pageQueue += 1;\n  }\n\n  decrementPageQueue() {\n    if (this.pageQueue === 1) {\n      return;\n    }\n    this.pageQueue -= 1;\n  }\n\n  async getTwentyFromWatch() {\n    try {\n      const snapshot = await get(ref(this.#database, this.#WATCH_KEY));\n      const filmsArr = snapshot.val() || [];\n      const from = 20 * (this.pageWatch - 1);\n      const to = 20 * this.pageWatch - 1;\n      return filmsArr.slice(from, to);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async getTwentyFromQueue() {\n    try {\n      const snapshot = await get(ref(this.#database, this.#QUEUE_KEY));\n      const filmsArr = snapshot.val() || [];\n      const from = 20 * (this.pageQueue - 1);\n      const to = 20 * this.pageQueue - 1;\n      return filmsArr.slice(from, to);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async checkWatched(id) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#WATCH_KEY));\n      const filmsArr = snapshot.val() || [];\n\n      return filmsArr.some(film => film.id == id);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async checkQueue(id) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#QUEUE_KEY));\n      const filmsArr = snapshot.val() || [];\n\n      return filmsArr.some(film => film.id == id);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async addFilmToWatch(film) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#WATCH_KEY));\n      const filmsArr = snapshot.val() || [];\n\n      filmsArr.unshift(film);\n      set(ref(this.#database, this.#WATCH_KEY), filmsArr);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async addFilmToQueue(film) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#QUEUE_KEY));\n      const filmsArr = snapshot.val() || [];\n\n      filmsArr.unshift(film);\n      set(ref(this.#database, this.#QUEUE_KEY), filmsArr);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async delFilmFromWatch(id) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#WATCH_KEY));\n      let filmsArr = snapshot.val() || [];\n\n      filmsArr = filmsArr.filter(film => film.id != id);\n      set(ref(this.#database, this.#WATCH_KEY), filmsArr);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async delFilmFromQueue(id) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#QUEUE_KEY));\n      let filmsArr = snapshot.val() || [];\n\n      filmsArr = filmsArr.filter(film => film.id != id);\n      set(ref(this.#database, this.#QUEUE_KEY), filmsArr);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  setPageWatch(value) {\n    this.pageWatch = value;\n  }\n\n  setPageQueue(value) {\n    this.pageQueue = value;\n  }\n\n  getPageWatch() {\n    return this.pageWatch;\n  }\n\n  getPageQueue() {\n    return this.pageQueue;\n  }\n\n  getMaxWatch() {\n    return this.maxWatch;\n  }\n\n  getMaxQueue() {\n    return this.maxQueue;\n  }\n}\n\nlet storage;\n\nexport default (async () => {\n  storage = new FilmsLocalStorage();\n  await storage.resetConstructor();\n})();\n\nexport { storage };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Copied from https://stackoverflow.com/a/2117523\n * Generates a new uuid.\n * @public\n */\nexport const uuidv4 = function (): string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","import Notiflix from 'notiflix';\n\nexport const spiner = {\n  options: {\n    svgSize: '90px',\n    svgColor: 'rgba(255, 0, 27, 1)',\n    messageFontSize: '16px',\n    messageColor: 'rgba(255, 0, 27, 1)'\n  },\n\n  start() {\n    return Notiflix.Loading.pulse('Searching films...', this.options);\n  },\n\n  stop() {\n    Notiflix.Loading.remove();\n  },\n};","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).basicLightbox=e()}}((function(){return function e(n,t,o){function r(c,u){if(!t[c]){if(!n[c]){var s=\"function\"==typeof require&&require;if(!u&&s)return s(c,!0);if(i)return i(c,!0);var a=new Error(\"Cannot find module '\"+c+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var l=t[c]={exports:{}};n[c][0].call(l.exports,(function(e){return r(n[c][1][e]||e)}),l,l.exports,e,n,t,o)}return t[c].exports}for(var i=\"function\"==typeof require&&require,c=0;c<o.length;c++)r(o[c]);return r}({1:[function(e,n,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.create=t.visible=void 0;var o=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=document.createElement(\"div\");return t.innerHTML=e.trim(),!0===n?t.children:t.firstChild},r=function(e,n){var t=e.children;return 1===t.length&&t[0].tagName===n},i=function(e){return null!=(e=e||document.querySelector(\".basicLightbox\"))&&!0===e.ownerDocument.body.contains(e)};t.visible=i;t.create=function(e,n){var t=function(e,n){var t=o('\\n\\t\\t<div class=\"basicLightbox '.concat(n.className,'\">\\n\\t\\t\\t<div class=\"basicLightbox__placeholder\" role=\"dialog\"></div>\\n\\t\\t</div>\\n\\t')),i=t.querySelector(\".basicLightbox__placeholder\");e.forEach((function(e){return i.appendChild(e)}));var c=r(i,\"IMG\"),u=r(i,\"VIDEO\"),s=r(i,\"IFRAME\");return!0===c&&t.classList.add(\"basicLightbox--img\"),!0===u&&t.classList.add(\"basicLightbox--video\"),!0===s&&t.classList.add(\"basicLightbox--iframe\"),t}(e=function(e){var n=\"string\"==typeof e,t=e instanceof HTMLElement==1;if(!1===n&&!1===t)throw new Error(\"Content must be a DOM element/node or string\");return!0===n?Array.from(o(e,!0)):\"TEMPLATE\"===e.tagName?[e.content.cloneNode(!0)]:Array.from(e.children)}(e),n=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==(e=Object.assign({},e)).closable&&(e.closable=!0),null==e.className&&(e.className=\"\"),null==e.onShow&&(e.onShow=function(){}),null==e.onClose&&(e.onClose=function(){}),\"boolean\"!=typeof e.closable)throw new Error(\"Property `closable` must be a boolean\");if(\"string\"!=typeof e.className)throw new Error(\"Property `className` must be a string\");if(\"function\"!=typeof e.onShow)throw new Error(\"Property `onShow` must be a function\");if(\"function\"!=typeof e.onClose)throw new Error(\"Property `onClose` must be a function\");return e}(n)),c=function(e){return!1!==n.onClose(u)&&function(e,n){return e.classList.remove(\"basicLightbox--visible\"),setTimeout((function(){return!1===i(e)||e.parentElement.removeChild(e),n()}),410),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))};!0===n.closable&&t.addEventListener(\"click\",(function(e){e.target===t&&c()}));var u={element:function(){return t},visible:function(){return i(t)},show:function(e){return!1!==n.onShow(u)&&function(e,n){return document.body.appendChild(e),setTimeout((function(){requestAnimationFrame((function(){return e.classList.add(\"basicLightbox--visible\"),n()}))}),10),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))},close:c};return u}},{}]},{},[1])(1)}));"],"names":["$d8d7cbc74a37c79e$export$3e19533e42ad8f83","document","querySelector","$d8d7cbc74a37c79e$export$b05b9f8fa6b90f25","$d8d7cbc74a37c79e$export$20f2b929a61cd28d","$d8d7cbc74a37c79e$export$619da3f694dfe612","$d8d7cbc74a37c79e$export$fcc0626890c55730","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","$bF9vQ","parcelRequire","$6b621d1d68f08547$var$_API_KEY","WeakMap","$6b621d1d68f08547$var$_BASE_URL","$6b621d1d68f08547$export$2c4e825dc9120f87","async","resp","$bRlFp","default","get","$parcel$interopDefault","this","page","data","total_pages","Error","max","results","err","$7Y9D8","Notify","failure","message","console","log","searchQuery","id","incrementPage","decrementPage","setSearchQuery","value","setPage","setMax","resetPage","getPage","getMax","getSearchQuery","constructor","$cKpJP","undefined","Object","defineProperty","module","exports","receiver","privateMap","descriptor","$0230f335dd4177d2$var$_classExtractFieldDescriptor","$0230f335dd4177d2$var$_classApplyDescriptorGet","$0230f335dd4177d2$var$_interopRequireDefault","obj","__esModule","action","has","TypeError","call","$947dbefd9ecaaca3$var$_checkPrivateRedeclaration","set","privateCollection","$da97b73a6ebc6e56$var$_classExtractFieldDescriptor","$da97b73a6ebc6e56$var$_classApplyDescriptorSet","$da97b73a6ebc6e56$var$_interopRequireDefault","writable","Axios","$1c9bd35df1aeff0f$export$1c00760e9e5a4e95","AxiosError","$1c9bd35df1aeff0f$export$c1fbed17c2f6a328","CanceledError","$1c9bd35df1aeff0f$export$1ab0c6b20d94fa14","isCancel","$1c9bd35df1aeff0f$export$3b22524397b493c6","CancelToken","$1c9bd35df1aeff0f$export$fd08e3cb425f0d61","VERSION","$1c9bd35df1aeff0f$export$a4ad2735b021c132","all","$1c9bd35df1aeff0f$export$84bf76cd7afc7469","Cancel","$1c9bd35df1aeff0f$export$848c9b7ead0df967","isAxiosError","$1c9bd35df1aeff0f$export$fbafdbe06a5b5a9a","spread","$1c9bd35df1aeff0f$export$3ae0fd4797ed47c8","toFormData","$1c9bd35df1aeff0f$export$10ae0d317ea97f8b","AxiosHeaders","$1c9bd35df1aeff0f$export$4e7d6ff0f3e6520","HttpStatusCode","$1c9bd35df1aeff0f$export$a972f69c851492b3","formToJSON","$1c9bd35df1aeff0f$export$86d7c59254d6a2c9","mergeConfig","$1c9bd35df1aeff0f$export$7ec1ebcfa9d8bd6a","$2bBga","$8a2573892eafc323$var$axios","$8a2573892eafc323$var$createInstance","defaultConfig","context","$6zSb1","instance","$djt5d","prototype","request","extend","allOwnKeys","create","instanceConfig","$d0EKm","$hqlPG","$83xK9","$2sjhC","$ksuZT","$50GW0","$aewVa","$121rJ","promises","Promise","$av9gA","$gNhGc","$gbTL1","thing","$4bmvb","isHTMLForm","FormData","$jd7iQ","$8a2573892eafc323$export$2e2bcd8739ae039","toString","$197982d8c7a73e5f$var$toString","getPrototypeOf","$197982d8c7a73e5f$var$getPrototypeOf","$197982d8c7a73e5f$var$kindOf","cache","str","slice","toLowerCase","$197982d8c7a73e5f$var$kindOfTest","type","$197982d8c7a73e5f$var$typeOfTest","isArray","$197982d8c7a73e5f$var$isArray","Array","$197982d8c7a73e5f$var$isUndefined","$197982d8c7a73e5f$var$isArrayBuffer","$197982d8c7a73e5f$var$isString","$197982d8c7a73e5f$var$isFunction","$197982d8c7a73e5f$var$isNumber","$197982d8c7a73e5f$var$isObject","$197982d8c7a73e5f$var$isPlainObject","val","Symbol","toStringTag","iterator","$197982d8c7a73e5f$var$isDate","$197982d8c7a73e5f$var$isFile","$197982d8c7a73e5f$var$isBlob","$197982d8c7a73e5f$var$isFileList","$197982d8c7a73e5f$var$isURLSearchParams","$197982d8c7a73e5f$var$forEach","fn","i","l","length","keys","getOwnPropertyNames","len","key","$197982d8c7a73e5f$var$findKey","_key","$197982d8c7a73e5f$var$_global","globalThis","self","window","$parcel$global","$197982d8c7a73e5f$var$isContextDefined","$197982d8c7a73e5f$var$isTypedArray","TypedArray","Uint8Array","$197982d8c7a73e5f$var$isHTMLForm","$197982d8c7a73e5f$var$hasOwnProperty","hasOwnProperty","hasOwnProperty1","prop","$197982d8c7a73e5f$var$isRegExp","$197982d8c7a73e5f$var$reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","name","defineProperties","$197982d8c7a73e5f$var$ALPHA","$197982d8c7a73e5f$var$DIGIT","$197982d8c7a73e5f$var$ALPHABET","ALPHA_DIGIT","toUpperCase","$197982d8c7a73e5f$export$2e2bcd8739ae039","isBuffer","pattern","result","ArrayBuffer","isView","buffer","pipe","$197982d8c7a73e5f$var$merge","caseless","assignValue","targetKey","arguments","a","b","thisArg","trim","replace","content","charCodeAt","superConstructor","props","assign","sourceObj","destObj","filter","propFilter","merged","searchString","position","String","lastIndex","indexOf","arr","next","done","pair","regExp","matches","exec","push","hasOwnProp","enumerable","arrayOrString","delimiter","define","forEach","split","m","p1","p2","defaultValue","Number","isFinite","global","size","alphabet","Math","random","append","stack","visit","source","target","reducedValue","$9b139c02a8c43d26$export$2e2bcd8739ae039","apply","$4ca0095817960ee3$var$validators","$6zj0X","validators","$4ca0095817960ee3$var$Axios","configOrUrl","config","url","defaults","transitional","paramsSerializer","headers","contextHeaders","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","clarifyTimeoutError","encode","function","serialize","method","merge","common","concat","requestInterceptorChain","synchronousRequestInterceptors","interceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","promise","response","chain","$eQ5d8","bind","resolve","then","newConfig","onFulfilled","onRejected","error","reject","getUri","fullPath","$1ZTQa","baseURL","$2RNjJ","params","$5Dm7L","generateHTTPMethod","isForm","$4ca0095817960ee3$export$2e2bcd8739ae039","$2166c96446d6ea30$var$encode","encodeURIComponent","$2166c96446d6ea30$export$2e2bcd8739ae039","options","_encode","serializeFn","serializedParams","isURLSearchParams","$hz3Ym","hashmarkIndex","$cc98c96c287b2efc$var$encode","charMap","match","$cc98c96c287b2efc$var$AxiosURLSearchParams","_pairs","$cc98c96c287b2efc$var$prototype","encoder","map","join","$cc98c96c287b2efc$export$2e2bcd8739ae039","$7734bfa34e03fc2a$var$isVisitable","isPlainObject","$7734bfa34e03fc2a$var$removeBrackets","endsWith","$7734bfa34e03fc2a$var$renderKey","path","dots","token","$7734bfa34e03fc2a$var$predicates","toFlatObject","test","$7734bfa34e03fc2a$export$2e2bcd8739ae039","formData","isObject","$1gvAv","metaTokens","indexes","option","isUndefined","visitor","defaultVisitor","useBlob","Blob","isSpecCompliantForm","isFunction","convertValue","isDate","toISOString","isBlob","isArrayBuffer","isTypedArray","$7734bfa34e03fc2a$require$Buffer","from","JSON","stringify","some","$7734bfa34e03fc2a$var$isFlatArray","isFileList","toArray","el","index","exposedHelpers","build","isString","pop","$0c07198b07c857d4$var$AxiosError","code","captureStackTrace","inherits","toJSON","description","number","fileName","lineNumber","columnNumber","toJSONObject","status","$0c07198b07c857d4$var$prototype","$0c07198b07c857d4$var$descriptors","customProps","axiosError","cause","$0c07198b07c857d4$export$2e2bcd8739ae039","$0ebfc9c247e7035c$export$2e2bcd8739ae039","$d4ecdbf520e63dca$export$a143d493d941bafc","$d4ecdbf520e63dca$export$f99ded8fe4b79145","$d4ecdbf520e63dca$var$customInspectSymbol","$d4ecdbf520e63dca$var$Buffer","$d4ecdbf520e63dca$var$K_MAX_LENGTH","$d4ecdbf520e63dca$var$createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","$d4ecdbf520e63dca$var$allocUnsafe","$d4ecdbf520e63dca$var$from","string","encoding","isEncoding","$d4ecdbf520e63dca$var$byteLength","actual","write","$d4ecdbf520e63dca$var$fromString","arrayView","$d4ecdbf520e63dca$var$isInstance","copy","$d4ecdbf520e63dca$var$fromArrayBuffer","byteOffset","byteLength","$d4ecdbf520e63dca$var$fromArrayLike","$d4ecdbf520e63dca$var$fromArrayView","SharedArrayBuffer","valueOf","$d4ecdbf520e63dca$var$checked","$d4ecdbf520e63dca$var$numberIsNaN","$d4ecdbf520e63dca$var$fromObject","toPrimitive","$d4ecdbf520e63dca$var$assertSize","array","mustMatch","loweredCase","$d4ecdbf520e63dca$var$utf8ToBytes","$d4ecdbf520e63dca$var$base64ToBytes","$d4ecdbf520e63dca$var$slowToString","start","end","$d4ecdbf520e63dca$var$hexSlice","$d4ecdbf520e63dca$var$utf8Slice","$d4ecdbf520e63dca$var$asciiSlice","$d4ecdbf520e63dca$var$latin1Slice","$d4ecdbf520e63dca$var$base64Slice","$d4ecdbf520e63dca$var$utf16leSlice","$d4ecdbf520e63dca$var$swap","n","$d4ecdbf520e63dca$var$bidirectionalIndexOf","dir","$d4ecdbf520e63dca$var$arrayIndexOf","lastIndexOf","i1","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","$d4ecdbf520e63dca$var$hexWrite","offset","remaining","strLen","parsed","parseInt","substr","$d4ecdbf520e63dca$var$utf8Write","$d4ecdbf520e63dca$var$blitBuffer","$d4ecdbf520e63dca$var$asciiWrite","byteArray","$d4ecdbf520e63dca$var$asciiToBytes","$d4ecdbf520e63dca$var$base64Write","$d4ecdbf520e63dca$var$ucs2Write","units","c","hi","lo","$d4ecdbf520e63dca$var$utf16leToBytes","$hqZtu","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$d4ecdbf520e63dca$var$MAX_ARGUMENTS_LENGTH","fromCharCode","$d4ecdbf520e63dca$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","$d4ecdbf520e63dca$var$typedArraySupport","poolSize","alloc","fill","$d4ecdbf520e63dca$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","_arr","ret","out","$d4ecdbf520e63dca$var$hexSliceLookupTable","bytes","$d4ecdbf520e63dca$var$checkOffset","ext","$d4ecdbf520e63dca$var$checkInt","$d4ecdbf520e63dca$var$wrtBigUInt64LE","$d4ecdbf520e63dca$var$checkIntBI","BigInt","$d4ecdbf520e63dca$var$wrtBigUInt64BE","$d4ecdbf520e63dca$var$checkIEEE754","$d4ecdbf520e63dca$var$writeFloat","littleEndian","noAssert","$5WQj6","$d4ecdbf520e63dca$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$d4ecdbf520e63dca$var$defineBigIntMethod","$d4ecdbf520e63dca$var$validateNumber","first","last","$d4ecdbf520e63dca$var$boundsError","readBigUInt64BE","readIntLE","byteLength3","pow","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","limit","sub","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$d4ecdbf520e63dca$var$errors","$d4ecdbf520e63dca$var$E","sym","getMessage","Base","configurable","super","$d4ecdbf520e63dca$var$addNumericalSeparator","byteLength10","range","ERR_OUT_OF_RANGE","byteLength9","$d4ecdbf520e63dca$var$checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","$d4ecdbf520e63dca$var$INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","$d4ecdbf520e63dca$var$base64clean","src","dst","table","i16","$d4ecdbf520e63dca$var$BufferBigIntNotDefined","$034686670a8a195b$export$d622b2ad8d90c771","$034686670a8a195b$export$6100ba28696e12de","b64","tmp","lens","$034686670a8a195b$var$getLens","validLen","placeHoldersLen","$034686670a8a195b$var$Arr","$034686670a8a195b$var$_byteLength","curByte","len2","$034686670a8a195b$var$revLookup","uint8","len3","extraBytes","parts","maxChunkLength","i3","$034686670a8a195b$var$encodeChunk","$034686670a8a195b$var$lookup","$034686670a8a195b$var$code","$034686670a8a195b$var$i","$034686670a8a195b$var$len","len1","num","output","i2","$454af19f7384844b$export$aafa59e2e03f2942","$454af19f7384844b$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","LN2","$41a1c1ac65ef962e$export$2e2bcd8739ae039","use","handlers","eject","clear","h","$bhEpd","$acd9f6ce0996c2c9$var$throwIfCancellationRequested","cancelToken","throwIfRequested","signal","aborted","$acd9f6ce0996c2c9$export$2e2bcd8739ae039","transformRequest","setContentType","$enpjQ","getAdapter","adapter","transformResponse","reason","$83709ffa15cc9b1e$export$2e2bcd8739ae039","fns","normalize","$caf5cce0e605762b$var$DEFAULT_CONTENT_TYPE","$caf5cce0e605762b$var$defaults","$2wfLM","contentType","getContentType","hasJSONContentType","isObjectPayload","isFormData","isStream","isFile","isArrayBufferView","$5tcKT","formSerializer","_FormData","env","rawValue","parser","parse","$caf5cce0e605762b$var$stringifySafely","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","$hdo0R","classes","validateStatus","Accept","$caf5cce0e605762b$export$2e2bcd8739ae039","$1d5acd6ee4a1e450$export$2e2bcd8739ae039","$3fb98e26853e5168$export$2e2bcd8739ae039","URLSearchParams","helpers","isNode","$9matH","$c88647090d2a1f73$var$isStandardBrowserEnv","product","navigator","$c88647090d2a1f73$var$isStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","$c88647090d2a1f73$export$2e2bcd8739ae039","isBrowser","$eN04z","protocols","$6cfe4bd5b8086c37$export$2e2bcd8739ae039","$ac45b2bd873143e7$export$2e2bcd8739ae039","$30b9a4ee1106a4de$export$2e2bcd8739ae039","buildPath","isNumericKey","isLast","$30b9a4ee1106a4de$var$arrayToObject","entries","forEachEntry","matchAll","$30b9a4ee1106a4de$var$parsePropPath","$bc98ecaa632caed0$var$$internals","$bc98ecaa632caed0$var$normalizeHeader","header","$bc98ecaa632caed0$var$normalizeValue","$bc98ecaa632caed0$var$matchHeaderValue","isRegExp","$bc98ecaa632caed0$var$_iterator","$bc98ecaa632caed0$var$_toStringTag","$bc98ecaa632caed0$var$AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","findKey","setHeaders","$9cPEm","tokens","tokensRE","$bc98ecaa632caed0$var$parseTokens","matcher","delete","deleted","deleteHeader","format","normalized","w","char","$bc98ecaa632caed0$var$formatHeader","targets","asStrings","static","computed","accessors","defineAccessor","accessorName","toCamelCase","methodName","arg1","arg2","arg3","$bc98ecaa632caed0$var$buildAccessors","accessor","freezeMethods","$bc98ecaa632caed0$export$2e2bcd8739ae039","$6b3d4ca234f68ddb$var$ignoreDuplicateOf","toObjectSet","$6b3d4ca234f68ddb$export$2e2bcd8739ae039","rawHeaders","line","substring","$ee4e77981fc99baa$export$2e2bcd8739ae039","__CANCEL__","$5dd8c74561f08d70$var$CanceledError","ERR_CANCELED","$5dd8c74561f08d70$export$2e2bcd8739ae039","$a776da890889b002$var$knownAdapters","http","xhr","$9VVcb","$a776da890889b002$export$2e2bcd8739ae039","adapters","nameOrAdapter","$73b5cdc05ac72ecf$var$progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","$5OiBb","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","$73b5cdc05ac72ecf$export$2e2bcd8739ae039","XMLHttpRequest","requestData","requestHeaders","onCanceled","unsubscribe","removeEventListener","isStandardBrowserEnv","isStandardBrowserWebWorkerEnv","auth","username","password","unescape","btoa","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","$1TQad","open","onreadystatechange","readyState","responseURL","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","withCredentials","$g3yOT","$kTwUV","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","protocol","$8wMQb","ERR_BAD_REQUEST","send","$1623641cb5783008$export$2e2bcd8739ae039","$f3627a5d0641603b$export$2e2bcd8739ae039","expires","domain","secure","cookie","isNumber","Date","toGMTString","RegExp","decodeURIComponent","remove","now","$iUwU6","$1746cdb16526768b$export$2e2bcd8739ae039","requestedURL","$91vFE","$dc46faf754468a20$export$2e2bcd8739ae039","$691cc630f9ef56b2$export$2e2bcd8739ae039","relativeURL","$bb07efa23107e01d$export$2e2bcd8739ae039","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","href","setAttribute","host","search","hash","hostname","port","pathname","charAt","location","requestURL","$6357329dd8712192$export$2e2bcd8739ae039","$43b00c9657a44656$export$2e2bcd8739ae039","samplesCount","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","round","$978ae1e75118f535$var$headersToObject","$978ae1e75118f535$export$2e2bcd8739ae039","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","$4c84c2d525dc977b$var$validators","$4c84c2d525dc977b$var$deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","warn","$4c84c2d525dc977b$export$2e2bcd8739ae039","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","$3a5e41bf204d513a$export$a4ad2735b021c132","$1c9d2783569136b3$var$CancelToken","_listeners","splice","executor","resolvePromise","onfulfilled","_resolve","$1c9d2783569136b3$export$2e2bcd8739ae039","$7a53fcc4fd1591ba$export$2e2bcd8739ae039","callback","$c39eefbf2d152c6a$export$2e2bcd8739ae039","payload","$dfc4e5689184d2bd$var$HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","$dfc4e5689184d2bd$export$2e2bcd8739ae039","t","t1","e1","a1","n1","o1","r1","s1","l1","m1","wrapID","overlayID","width","distance","opacity","borderRadius","rtl","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","warning","info","c1","backgroundColor","backOverlayClickToClose","svgSize","titleFontSize","titleMaxLength","messageFontSize","buttonFontSize","buttonMaxLength","svgColor","titleColor","messageColor","buttonBackground","buttonColor","f1","d1","buttonsFontSize","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","x1","g1","customSvgUrl","customSvgCode","messageID","b1","u1","querySelectorLimit","y1","k1","h1","getElementById","innerHTML","appendChild","v","a2","N","textContent","innerText","W1","I1","R1","A1","M","B","D1","T1","F1","o","r","G","init","p","f","toLocaleLowerCase","style","zIndex","left","top","right","bottom","margin","classList","add","maxHeight","display","flexWrap","flexDirection","justifyContent","alignItems","pointerEvents","height","animationDuration","body","g","color","u","insertBefore","firstChild","k","C","z","childElementCount","clearTimeout","S","parentNode","removeChild","W","I","R","querySelectorAll","A","E1","j1","e2","a3","Report","z1","S1","L1","O1","H1","n2","Confirm","padding","ceil","L","focus","setSelectionRange","preventDefault","keyCode","dispatchEvent","Event","stopPropagation","returnValue","cancelBubble","P1","U1","Loading","X1","innerWidth","q1","Q","Y1","e3","a4","n3","isPrototypeOf","NodeList","Block","X","tagName","D","T","F","E","q","O","getComputedStyle","getPropertyValue","H","P","V","offsetHeight","getAttribute","Y","K","$","J","createRange","selectNode","Z","createContextualFragment","_","tt","et","it","show","ask","prompt","standard","hourglass","circle","arrows","pulse","custom","notiflix","change","getElementsByTagName","V1","Notiflix","amd","$iCfuO","$08cf411bbf394db7$export$e98cbe51299acd52","movies","movieListEl","movie","genresList","genre_ids","$08cf411bbf394db7$var$parseGenres","genres","genre","imgUrl","poster_path","date","release_date","getFullYear","original_title","vote_average","toFixed","genresIds","genresInfo","genreInfo","genresLists","find","ganreInfo","$08cf411bbf394db7$export$22fa394f3ba39578","activePage","totalPages","filteredArr","newArr","includeThreeRight","includeLeftDots","includeRightDots","$08cf411bbf394db7$export$825408fbca4f2040","paginationArr","filmBoxRef1","paginationUlRef","insertAdjacentHTML","numbersArr","firstNumber","lastNumber","updatedPageName","$08cf411bbf394db7$var$checkCurrentPage","evt","children","li","firstElementChild","contains","element","pageValue","trimedValue","searchQueryCheck","films","$9dB6Q","API","fetchKeyword","fetchPopularMovies","filmBoxRef","$08cf411bbf394db7$var$listClickHandlerMain","dataset","$gSWVZ","storage","getMaxWatch","setPageWatch","getTwentyFromWatch","incrementPageWatch","decrementPageWatch","getPageWatch","$08cf411bbf394db7$var$listClickHandlerWatch","getMaxQueue","setPageQueue","getTwentyFromQueue","incrementPageQueue","decrementPageQueue","getPageQueue","$08cf411bbf394db7$var$listClickHandlerQueue","$c4af67a14e52d4c8$var$_WATCH_KEY","$c4af67a14e52d4c8$var$_QUEUE_KEY","$c4af67a14e52d4c8$var$_database","$c4af67a14e52d4c8$var$FilmsLocalStorage","pageWatch","pageQueue","signIn","account","localStorage","getItem","uid","app","$ix4Jr","initializeApp","firebaseConfig","$8NPS8","getDatabase","snapshotWatch","ref","snapshotQueue","filmsArrWatch","filmsArrQueue","maxWatch","maxQueue","filmsArr","to","snapshot","film","$c4af67a14e52d4c8$export$ddcffe0146c8f882","$c4af67a14e52d4c8$export$2e2bcd8739ae039","resetConstructor","$d7defabc17f02990$var$PlatformLoggerServiceImpl","getPlatformInfoString","container","getProviders","service","provider","getImmediate","databaseCompatName","$7vF8m","Logger","$d7defabc17f02990$export$9f30fa0c10967f7f","$d7defabc17f02990$var$PLATFORM_LOG_STRING","$d7defabc17f02990$var$name$o","$d7defabc17f02990$export$b4e3c36c855b14b5","Map","$d7defabc17f02990$export$fa5244b94c62d36a","component","addComponent","$d7defabc17f02990$var$logger","debug","$d7defabc17f02990$export$4393112b42e2b41d","addOrOverwriteComponent","$d7defabc17f02990$export$c930050e7bb63965","componentName","$d7defabc17f02990$export$9566bce3835c0f28","values","$d7defabc17f02990$export$fa0d6da0f5838f50","name1","heartbeatController","getProvider","optional","triggerHeartbeat","$d7defabc17f02990$export$48d18de2ff1c45a5","name2","instanceIdentifier","clearInstance","$d7defabc17f02990$export$3685d89b9c3cdfaf","$d7defabc17f02990$var$ERRORS","$d7defabc17f02990$var$ERROR_FACTORY","$ffjl9","ErrorFactory","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","checkDestroyed","_name","_options","_config","_container","isDeleted","_isDeleted","$4a6xH","Component","rawConfig","name4","existingApp","ComponentContainer","newApp","$d7defabc17f02990$var$FirebaseAppImpl","name5","$d7defabc17f02990$export$c55cfd413944906d","$d7defabc17f02990$export$68ddedf7d44b3bdf","$d7defabc17f02990$export$6eec44aa53d5ea34","name6","_a","library","libraryKeyOrName","variant","version1","versionMismatch","libraryMismatch","$d7defabc17f02990$export$a82ad227dc8163dc","logCallback","setUserLogHandler","$d7defabc17f02990$export$c622e99c0ce7b1c9","logLevel","setLogLevel","$307d2bd0b522285b$export$16fa2f45be04daa8","mode","instantiationMode","multipleInstances","serviceProps","onInstanceCreated","instanceFactory","$307d2bd0b522285b$var$DEFAULT_ENTRY_NAME","$307d2bd0b522285b$export$2881499e37b75b9a","instancesDeferred","normalizedIdentifier","deferred","Deferred","isInitialized","shouldAutoInitialize","normalizeInstanceIdentifier","identifier","$307d2bd0b522285b$var$isComponentEager","getOrInitializeService","instanceDeferred","instancesOptions","instances","services","INTERNAL","_delete","isComponentSet","onInit","existingCallbacks","onInitCallbacks","Set","existingInstance","invokeOnInitCallbacks","callbacks","$4TNnu","$b197424204fd80b4$export$588c7fdda06fbb0a","assertion","$b197424204fd80b4$export$a39cad550e7ab28a","$b197424204fd80b4$var$stringToByteArray$1","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","decodeString","stringToByteArray","c2","c3","$b197424204fd80b4$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charToByteMap_","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","$b197424204fd80b4$export$e510a73ee562749","utf8Bytes","$b197424204fd80b4$export$b3b2de96497acc47","$b197424204fd80b4$export$4b5284a3025a455","$b197424204fd80b4$export$c62426fdd000a97e","$b197424204fd80b4$export$6c40052bed430212","$b197424204fd80b4$export$54e9fb29908872fa","getTime","$b197424204fd80b4$var$getDefaultsFromGlobal","$b197424204fd80b4$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$b197424204fd80b4$export$212bb2fc580a90a8","$b197424204fd80b4$var$getDefaultsFromEnvVariable","decoded","$b197424204fd80b4$var$getDefaultsFromCookie","$b197424204fd80b4$export$9c11895284c8adad","productName","_b","emulatorHosts","$b197424204fd80b4$export$a3febcf1f14a3a0c","separatorIndex","$b197424204fd80b4$export$3dfb6827a9f89756","$b197424204fd80b4$export$5539a1a3afe87d6","$b197424204fd80b4$export$85f6557964517f1a","catch","$b197424204fd80b4$export$367bf224123348f1","project","iat","user_id","iss","aud","auth_time","alg","$b197424204fd80b4$export$872f8323f01d7ae0","$b197424204fd80b4$export$c36915b22ce77c19","$b197424204fd80b4$export$8ee0fc9ee280b4ee","forceEnvironment","process","$b197424204fd80b4$export$4e09c449d6c407f7","runtime","$b197424204fd80b4$export$7e7b1a9668aaed8","ua","$b197424204fd80b4$export$5d1d834fbbf8bab7","$b197424204fd80b4$export$95df08bae54cb4df","$b197424204fd80b4$export$3865db50535c2055","$b197424204fd80b4$export$a8a3018f3d187a4d","preExist","DB_CHECK_NAME","indexedDB","onsuccess","close","deleteDatabase","onupgradeneeded","$b197424204fd80b4$export$dd24e9cd51226c56","customData","$b197424204fd80b4$export$3fa6e1b18a3b2d40","fullCode","template","$b197424204fd80b4$var$PATTERN","fullMessage","serviceName","errors","$b197424204fd80b4$export$c5a53ce6a17cf18d","$b197424204fd80b4$export$fac44ee5b035f737","$b197424204fd80b4$export$2f872c0f2117be69","claims","signature","$b197424204fd80b4$export$9565ca3d387f8aa0","$b197424204fd80b4$export$2344b14b097df817","$b197424204fd80b4$export$e51ae4db7b428f67","$b197424204fd80b4$export$dd1bc94b04021eeb","$391299e0893a3dfa$var$cachedSetTimeout","$391299e0893a3dfa$var$cachedClearTimeout","$391299e0893a3dfa$var$process","$391299e0893a3dfa$var$defaultSetTimout","$391299e0893a3dfa$var$defaultClearTimeout","$391299e0893a3dfa$var$runTimeout","fun","$391299e0893a3dfa$var$currentQueue","$391299e0893a3dfa$var$queue","$391299e0893a3dfa$var$draining","$391299e0893a3dfa$var$queueIndex","$391299e0893a3dfa$var$cleanUpNextTick","$391299e0893a3dfa$var$drainQueue","run","marker","$391299e0893a3dfa$var$runClearTimeout","$391299e0893a3dfa$var$Item","$391299e0893a3dfa$var$noop","nextTick","args","title","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","$577b55f579ec2041$var$instances","$577b55f579ec2041$export$243e62d78d3b544d","LogLevel1","$577b55f579ec2041$var$levelStringToEnum","DEBUG","VERBOSE","INFO","ERROR","SILENT","$577b55f579ec2041$var$defaultLogLevel","$577b55f579ec2041$var$ConsoleMethod","WARN","$577b55f579ec2041$var$defaultLogHandler","logType","_logLevel","logHandler","_logHandler","userLogHandler","_userLogHandler","$ekHjI","$92f73a92431170de$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","openPromise","oldVersion","newVersion","transaction","db","$92f73a92431170de$var$readMethods","$92f73a92431170de$var$writeMethods","$92f73a92431170de$var$cachedMethods","$92f73a92431170de$var$getMethod","target1","IDBDatabase","targetFuncName","useIndex","isWrite","IDBIndex","IDBObjectStore","storeName","tx","store","shift","oldTraps","$a6f488ce4cf7dbe7$var$idbProxyableTypes","$a6f488ce4cf7dbe7$var$cursorAdvanceMethods","$a6f488ce4cf7dbe7$var$cursorRequestMap","$a6f488ce4cf7dbe7$var$transactionDoneMap","$a6f488ce4cf7dbe7$var$transactionStoreNamesMap","$a6f488ce4cf7dbe7$var$transformCache","$a6f488ce4cf7dbe7$export$407448d2b89b1813","$a6f488ce4cf7dbe7$var$idbProxyTraps","IDBTransaction","objectStoreNames","objectStore","$a6f488ce4cf7dbe7$export$efccba1c4a2ef57b","$a6f488ce4cf7dbe7$export$43caf9889c228507","$a6f488ce4cf7dbe7$var$wrapFunction","func","IDBCursor","advance","continue","continuePrimaryKey","$a6f488ce4cf7dbe7$export$3b14a55fb2447963","storeNames","sort","$a6f488ce4cf7dbe7$var$transformCachableValue","unlisten","complete","DOMException","$a6f488ce4cf7dbe7$var$cacheDonePromiseForTransaction","object","Proxy","IDBRequest","$a6f488ce4cf7dbe7$var$promisifyRequest","newValue","$668b2310913a4fe8$var$SDK_VERSION","$668b2310913a4fe8$var$DOMStorageWrapper","domStorage_","removeItem","prefixedName_","storedVal","prefix_","$668b2310913a4fe8$var$MemoryStorage","cache_","isInMemoryStorage","$668b2310913a4fe8$var$createStoragefor","domStorageName","domStorage","$668b2310913a4fe8$var$PersistentStorage","$668b2310913a4fe8$var$SessionStorage","$668b2310913a4fe8$var$sha1","sha11","Sha1","digest","base64","sha1Bytes","$668b2310913a4fe8$var$buildLogMessage_","varArgs","$668b2310913a4fe8$var$firstLog_","$668b2310913a4fe8$var$enableLogging$1","logger_","persistent","assert","$668b2310913a4fe8$var$logClient","LogLevel","$668b2310913a4fe8$var$logger","$668b2310913a4fe8$var$log","$668b2310913a4fe8$var$logWrapper","prefix","$668b2310913a4fe8$var$isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","$668b2310913a4fe8$var$MIN_NAME","$668b2310913a4fe8$var$MAX_NAME","$668b2310913a4fe8$var$nameCompare","bAsInt","aAsInt","$668b2310913a4fe8$var$requireKey","$668b2310913a4fe8$var$ObjectToUniqueKey","$668b2310913a4fe8$var$splitStringBySize","segsize","dataSegs","$668b2310913a4fe8$var$each","bias","ln","bits","reverse","hexByteString","hexByte","$668b2310913a4fe8$var$INTEGER_REGEXP_","$668b2310913a4fe8$var$tryParseInt","intVal","$668b2310913a4fe8$var$exceptionGuard","$668b2310913a4fe8$var$warn","$668b2310913a4fe8$var$setTimeoutNonBlocking","time","Deno","unrefTimer","forceRefresh","appCheck","getToken","appCheckProvider","addTokenListener","notifyForInvalidToken","appName_","auth_","error2","addAuthTokenListener","firebaseOptions_","errorMessage","authProvider_","$668b2310913a4fe8$var$EmulatorTokenProvider","accessToken","OWNER","$668b2310913a4fe8$var$PROTOCOL_VERSION","$668b2310913a4fe8$var$RepoInfo","internalHost","_domain","_host","newHost","isCacheableHost","toURLString","persistenceKey","query2","includeNamespaceInQueryParams","namespace","webSocketOnly","nodeAdmin","isUsingEmulator","$668b2310913a4fe8$var$repoInfoConnectionURL","repoInfo","connURL","$668b2310913a4fe8$var$WEBSOCKET","$668b2310913a4fe8$var$LONG_POLLING","pairs","counters_","amount","deepCopy","hashString","$668b2310913a4fe8$var$collections","$668b2310913a4fe8$var$StatsCollection","responseNum","closeAfterResponse","onClose","requestNum","pendingResponses","currentResponseNum","toProcess","onMessage_","curSegmentNum","onDisconnect1","$668b2310913a4fe8$var$PacketReceiver","onMessage","isClosed_","connectTimeoutTimer_","log_","onClosed_","isNodeSdk","wrappedFn","called","attachEvent","scriptTagHolder","$668b2310913a4fe8$var$FirebaseIFrameScriptHolder","command","arg4","incrementIncomingBytes_","everConnected_","$668b2310913a4fe8$var$FIREBASE_LONGPOLL_START_PARAM","sendNewPolls","myPacketOrderer","closeAfter","handleResponse","pN","urlFn","uniqueCallbackIdentifier","urlParams","connectURL","startLongPoll","addDisconnectPingFrame","forceAllow_","forceDisallow_","$668b2310913a4fe8$var$BrowserPollConnection","Windows","UI","myDisconnFrame","shutdown_","onDisconnect_","bytesSent","dataStr","stats_","incrementCounter","base64Encode","base64data","enqueueSegment","pw","bytesReceived","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","$668b2310913a4fe8$var$statsManagerGetCollection","iframe","contentWindow","contentDocument","doc","alive","myIFrame","onDisconnect2","onDisconnect","myID","myPW","newRequest_","outstandingRequests","pendingSegs","currentSerial","theURL","curDataString","theSeg","seg","ts","segnum","totalsegs","serial","keepaliveTimeout","doNewRequest","addTag","doNodeLongPoll","loadCB","newScript","onload","rstate","commandCB","onMessageCB","onDisconnect3","$668b2310913a4fe8$var$LUIDGenerator","createIFrame_","script","iframeContents","$668b2310913a4fe8$var$WebSocketImpl","MozWebSocket","WebSocket","$668b2310913a4fe8$var$WebSocketConnection","$668b2310913a4fe8$var$FORGE_DOMAIN_RE","onDisconnect4","device","proxy","mySock","error3","onopen","onclose","onmessage","error4","isOldAndroid","oldAndroidRegex","oldAndroidMatch","parseFloat","frames","totalFrames","fullMess","jsonMess","jsonEval","frameCount","extractFrameCount_","handleNewFrameCount_","mess","appendFrame_","remainingData","resetKeepAlive","sendString_","keepaliveTimer","clearInterval","setInterval","connectionURL_","responsesRequiredToBeHealthy","healthyTimeout","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","$668b2310913a4fe8$var$TransportManager","ALL_TRANSPORTS","initialTransport","upgradeTransport","initTransports_","$668b2310913a4fe8$var$Connection","start_","conn","transportManager_","conn_","nextTransportId_","repoInfo_","applicationId_","appCheckToken_","authToken_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","markConnectionHealthy","connectionCount","everConnected","onConnectionLost_","onSecondaryConnectionLost_","state_","onSecondaryMessageReceived_","dataMsg","controlData","cmd","upgradeIfSecondaryHealthy_","rx_","secondaryResponsesRequired_","parsedData","layer","onSecondaryControl_","pendingDataMessages","proceedWithUpgrade_","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","handshakePayload","onHandshake_","onConnectionShutdown_","onReset_","$668b2310913a4fe8$var$error","sendPingOnPrimaryIfNecessary_","handshake","timestamp","version2","onConnectionEstablished_","tryStartUpgrade_","sessionId","onDisconnect5","closeConnections_","onReady_","sendData_","onKill_","$668b2310913a4fe8$var$ServerActions","pathString","onComplete","refreshAuthToken","stats","eventType","listeners_","validateEventType_","eventData","getInitialEvent","allowedEvents_","$668b2310913a4fe8$var$EventEmitter","$668b2310913a4fe8$var$OnlineMonitor","online_","trigger","pieceNum_","pieces_","pathOrString","pieceNum","copyTo","$668b2310913a4fe8$var$newEmptyPath","$668b2310913a4fe8$var$Path","$668b2310913a4fe8$var$pathGetFront","pieces","childPathObj","childPieces","$668b2310913a4fe8$var$pathIsEmpty","$668b2310913a4fe8$var$newRelativePath","outerPath","innerPath","outer","inner","$668b2310913a4fe8$var$pathPopFront","$668b2310913a4fe8$var$pathEquals","other","$668b2310913a4fe8$var$pathGetLength","$668b2310913a4fe8$var$pathContains","$668b2310913a4fe8$var$ValidationPath","errorPrefix_","parts_","$668b2310913a4fe8$var$pathSlice","byteLength_","stringLength","$668b2310913a4fe8$var$validationPathCheckValid","validationPath","$668b2310913a4fe8$var$validationPathToErrorString","$668b2310913a4fe8$var$VisibilityMonitor","visible_","hidden","visibilityChange","visible","$668b2310913a4fe8$var$RECONNECT_MIN_DELAY","requestNumber_","curReqNum","connected_","realtime_","sendRequest","onResponse","requestCBHash_","query3","initConnection_","outstandingGet","_path","_queryObject","outstandingGets_","outstandingGetCount_","sendGet_","query4","currentHashFn","tag","queryId","_queryIdentifier","listens","_queryParams","isDefault","loadsAllData","listenSpec","query","sendListen_","get1","query5","req","hashFn","$668b2310913a4fe8$var$PersistentConnection","warnOnListenWarnings_","removeListen_","query6","warnings","safeGet","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","maxReconnectDelay_","refreshAppCheckToken","tryAppCheck","authMethod","isValidFormat","cred","authOverride_","invalidAuthTokenCount_","onAuthRevoked_","invalidAppCheckTokenCount_","onAppCheckRevoked_","query7","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectRequestQueue_","onDisconnectCancel","putInternal","outstandingPuts_","outstandingPutCount_","setMaxNode","MAX_NODE","sendPut_","queued","reportStats","errorReason","reqNum","onDataUpdate_","onListenRevoked_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","onConnectStatus_","establishConnectionTimer_","establishConnection_","scheduleConnect_","reconnectDelay_","online","onRealtimeDisconnect_","cancelSentTransactions_","timeSinceLastConnectAttempt","lastConnectionAttemptTime_","reconnectDelay","shouldReconnect_","onDataMessage","onReady","onDisconnect6","nextConnectionId_","connection","closeFn","canceled","sendRequestFn","nodeFromJSON","forceTokenRefresh_","authTokenProvider_","appCheckTokenProvider_","interrupt","error5","interruptReasons_","isEmpty","delta","onServerInfoUpdate_","put","query8","listen","normalizedPathString","map1","statusCode","explanation","securityDebugCallback_","queries","clientName","isMobileCordova","isReactNative","getInstance","currentlyOnline","nextPersistentConnectionId_","onVisible_","onOnline_","$668b2310913a4fe8$var$NamedNode","name3","node","$668b2310913a4fe8$var$Index","indexedValueChanged","oldNode","newNode","newWrapped","oldWrapped","MIN","__EMPTY_NODE","$668b2310913a4fe8$var$__EMPTY_NODE","assertionError","indexValue","$668b2310913a4fe8$var$KeyIndex","nodeStack_","resultGenerator_","isReverse_","startKey","comparator","cmp","$668b2310913a4fe8$var$LLRBNode","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","$668b2310913a4fe8$var$SortedMap","EMPTY_NODE","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","RED","nr","checkMaxDepth_","blackDepth","check_","BLACK","comparator_","root_","rightParent","getIterator","resultGenerator","$668b2310913a4fe8$var$SortedMapIterator","$668b2310913a4fe8$var$NAME_ONLY_COMPARATOR","$668b2310913a4fe8$var$MAX_NODE$2","priority","$668b2310913a4fe8$var$validatePriorityNode","priorityNode","isLeafNode","getPriority","$668b2310913a4fe8$var$__childrenNodeConstructor","$668b2310913a4fe8$var$LeafNode","__childrenNodeConstructor","priorityNode_","updatePriority","newPriorityNode","value_","getImmediateChild","childName","getChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","lazyHash_","toHash","$668b2310913a4fe8$var$priorityHashText","$668b2310913a4fe8$var$doubleToIEEE754String","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","aPriority","bPriority","indexCmp","$668b2310913a4fe8$var$MAX_NODE$1","$668b2310913a4fe8$var$nodeFromJSON$1","bits_","current_","$668b2310913a4fe8$var$LOG_2","mask","childList","keyFn","mapSortFn","low","high","namedNode","middle","buildBalancedTree","root1","root","buildPennant","chunkSize","childTree","attachPennant","pennant","base12","isOne","nextBitIsOne","buildFrom12Array","$668b2310913a4fe8$var$Base12Num","Default","$668b2310913a4fe8$var$fallbackObject","$668b2310913a4fe8$var$PRIORITY_INDEX","$668b2310913a4fe8$var$_defaultIndexMap","$668b2310913a4fe8$var$IndexMap","indexKey","sortedMap","indexes_","indexDefinition","indexSet_","existingChildren","$668b2310913a4fe8$var$KEY_INDEX","sawIndexedValue","iter","Wrap","newIndex","getNext","isDefinedOn","$668b2310913a4fe8$var$buildChildSet","getCompare","indexName","newIndexSet","newIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","$668b2310913a4fe8$var$ChildrenNode","$668b2310913a4fe8$var$EMPTY_NODE","$668b2310913a4fe8$var$NAME_COMPARATOR","children_","indexMap_","child2","hasChild","newIndexMap","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","INTEGER_REGEXP_","childHash","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChild","getFirstChildName","getLastChild","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","peek","getReverseIteratorFrom","maxPost","endPost","$668b2310913a4fe8$var$MAX_NODE","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","$668b2310913a4fe8$var$nodeFromJSON","json","childData","childrenHavePriority","child3","childSet","sortedChildSet","$668b2310913a4fe8$var$PathIndex","extractChild","snap","indexPath_","aChild","bChild","valueNode","MAX","makePost","name7","$668b2310913a4fe8$var$changeValue","snapshotNode","$668b2310913a4fe8$var$changeChildAdded","$668b2310913a4fe8$var$changeChildRemoved","$668b2310913a4fe8$var$changeChildChanged","oldSnap","newChild","affectedPath","optChangeAccumulator","index_","oldChild","trackChildChange","newSnap","$668b2310913a4fe8$var$RangedFilter","getStartPost","isWithinStart","startIsInclusive_","filtered","indexedFilter_","updateFullNode","filtersNodes","getIndexedFilter","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","$668b2310913a4fe8$var$IndexedFilter","startPost_","getStartPost_","endPost_","getEndPost_","startAfterSet_","endIsInclusive_","endBeforeSet_","$668b2310913a4fe8$var$LimitedFilter","rangedFilter_","limit_","fullLimitUpdateChild_","reverse_","getEndPost","hasNext","withinDirectionalStart","withinDirectionalEnd","getReverseIterator","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","withinEndPost","withinStartPost","compareRes","getLimit","isViewFromLeft","startSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","hasLimit","limitSet_","hasAnchoredLimit","$668b2310913a4fe8$export$7ba287e361c94330","$668b2310913a4fe8$var$queryParamsToRestQueryStringParameters","queryParams","qs","orderBy","$668b2310913a4fe8$var$VALUE_INDEX","startParam","endParam","viewFrom","$668b2310913a4fe8$var$ReadonlyRestClient","query9","query10","listenId","getListenId_","thisListen","listens_","queryStringParameters","restRequest_","error6","query11","query12","error7","referenceConstructor","querystring","rootNode_","newSnapshotNode","$668b2310913a4fe8$var$newSparseSnapshotTree","$668b2310913a4fe8$var$sparseSnapshotTreeRemember","sparseSnapshotTree","$668b2310913a4fe8$var$sparseSnapshotTreeForEachTree","prefixPath","tree","$668b2310913a4fe8$var$StatsListener","newStats","collection_","last_","stat","statsListener_","statsToReport_","haveStatsToReport","server_","reportedStats","reportStats_","collection","$668b2310913a4fe8$var$OperationType","OperationType1","$668b2310913a4fe8$var$newOperationSourceServerTaggedQuery","fromUser","tagged","$668b2310913a4fe8$var$AckUserWrite","affectedTree","subtree","revert","ACK_USER_WRITE","fromServer","$668b2310913a4fe8$var$ListenComplete","LISTEN_COMPLETE","$668b2310913a4fe8$var$Overwrite","$668b2310913a4fe8$var$Merge","operationForChild","fullyInitialized_","isFiltered","filtered_","isCompleteForPath","isFullyInitialized","isCompleteForChild","node_","$668b2310913a4fe8$var$EventGenerator","query_","$668b2310913a4fe8$var$eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","aWrapped","bWrapped","$668b2310913a4fe8$var$eventGeneratorCompareChanges","materializedChange","prevName","$668b2310913a4fe8$var$eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","$668b2310913a4fe8$var$newViewCache","serverCache","viewCache","eventSnap","$668b2310913a4fe8$var$CacheNode","$668b2310913a4fe8$var$viewCacheUpdateServerSnap","serverSnap","$668b2310913a4fe8$var$viewCacheGetCompleteEventSnap","getNode","$668b2310913a4fe8$var$viewCacheGetCompleteServerSnap","$668b2310913a4fe8$var$emptyChildrenSingleton","$668b2310913a4fe8$var$ImmutableTree","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","child5","childExistingPathAndValue","$668b2310913a4fe8$var$pathChild","findRootMostValueAndPath","toSet","child7","child8","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach","foreach_","$668b2310913a4fe8$var$stringCompare","$668b2310913a4fe8$var$EmptyChildren","$668b2310913a4fe8$var$CompoundWrite","writeTree_","rootmost","rootMostPath","compoundWrite","newWriteTree1","$668b2310913a4fe8$var$compoundWriteAddWrites","updates","$668b2310913a4fe8$var$compoundWriteAddWrite","newWrite","$668b2310913a4fe8$var$compoundWriteRemoveWrite","empty","newWriteTree2","$668b2310913a4fe8$var$compoundWriteHasCompleteWrite","$668b2310913a4fe8$var$compoundWriteGetCompleteNode","$668b2310913a4fe8$var$compoundWriteChildCompoundWrite","shadowingNode","$668b2310913a4fe8$var$compoundWriteIsEmpty","$668b2310913a4fe8$var$compoundWriteApply","writeTree","priorityWrite","$668b2310913a4fe8$var$applySubtreeWrite","$668b2310913a4fe8$var$writeTreeChildWrites","$668b2310913a4fe8$var$newWriteTreeRef","$668b2310913a4fe8$var$writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","$668b2310913a4fe8$var$writeTreeRecordContainsPath_","visibleWrites","$668b2310913a4fe8$var$writeTreeLayerTree_","$668b2310913a4fe8$var$writeTreeDefaultFilter_","lastWriteId","writeRecord","writes","treeRoot","writePath","child10","deepNode","$668b2310913a4fe8$var$writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","$668b2310913a4fe8$var$writeTreeRefCalcCompleteEventCache","writeTreeRef","$668b2310913a4fe8$var$writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","$668b2310913a4fe8$var$writeTreeCalcCompleteEventChildren","$668b2310913a4fe8$var$writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","$668b2310913a4fe8$var$writeTreeCalcEventCacheAfterServerOverwrite","$668b2310913a4fe8$var$writeTreeRefShadowingWrite","completeServerData","toIterate","nodes","existingServerCache","oldChange","changeMap","oldType","$668b2310913a4fe8$var$NO_COMPLETE_CHILD_SOURCE","getCompleteChild","child","$668b2310913a4fe8$var$WriteTreeCompleteChildSource","viewCache_","serverNode","optCompleteServerCache_","$668b2310913a4fe8$var$writeTreeRefCalcCompleteChild","writes_","child11","$668b2310913a4fe8$var$writeTreeRefCalcIndexedSlice","accumulator","$668b2310913a4fe8$var$ChildChangeAccumulator","newViewCache1","filterServerNode","operation","OVERWRITE","overwrite","$668b2310913a4fe8$var$viewProcessorApplyUserOverwrite","viewProcessor","oldViewCache","writesCache","completeCache","$668b2310913a4fe8$var$viewProcessorApplyServerOverwrite","MERGE","changedChildren","curViewCache","$668b2310913a4fe8$var$viewProcessorCacheHasChild","$668b2310913a4fe8$var$viewProcessorApplyUserMerge","$668b2310913a4fe8$var$viewProcessorApplyServerMerge","ackUserWrite","serverChildren","$668b2310913a4fe8$var$viewProcessorRevertUserWrite","ackPath","name8","mergePath","serverCachePath","$668b2310913a4fe8$var$viewProcessorAckUserWrite","oldServerNode","newViewCache5","$668b2310913a4fe8$var$viewProcessorGenerateEventCacheAfterServerEvent","$668b2310913a4fe8$var$viewProcessorListenComplete","getChanges","newViewCache2","isLeafOrEmpty","oldCompleteSnap","$668b2310913a4fe8$var$viewProcessorMaybeAddValueEvent","changePath","completeEventChildren","completeNode","oldEventNode","oldEventSnap","updatedPriority","childChangePath","eventChildUpdate","newEventChild","$668b2310913a4fe8$var$viewCacheUpdateEventSnap","changedSnap","serverFilter","newServerCache","oldServerSnap","newServerNode","newViewCache3","newViewCache4","$668b2310913a4fe8$var$pathGetBack","$668b2310913a4fe8$var$pathParent","$668b2310913a4fe8$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","$668b2310913a4fe8$var$View","initialViewCache","eventRegistrations_","indexFilter","processor_","$668b2310913a4fe8$var$newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","$668b2310913a4fe8$var$viewGetCompleteServerCache","view","$668b2310913a4fe8$var$viewIsEmpty","$668b2310913a4fe8$var$viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","existing","hasAnyCallback","$668b2310913a4fe8$var$viewApplyOperation","$668b2310913a4fe8$var$viewProcessorApplyOperation","$668b2310913a4fe8$var$viewGenerateEventsForChanges_","eventRegistrations","moves","$668b2310913a4fe8$var$eventGeneratorGenerateEventsForChanges","$668b2310913a4fe8$var$referenceConstructor$1","$668b2310913a4fe8$var$referenceConstructor","$668b2310913a4fe8$var$SyncPoint","views","$668b2310913a4fe8$var$syncPointApplyOperation","syncPoint","optCompleteServerCache","$668b2310913a4fe8$var$syncPointGetView","query13","serverCacheComplete","eventCacheComplete","$668b2310913a4fe8$var$syncPointAddEventRegistration","query14","initialChanges","$668b2310913a4fe8$var$viewGetInitialEvents","$668b2310913a4fe8$var$syncPointRemoveEventRegistration","query15","hadCompleteView","$668b2310913a4fe8$var$syncPointHasCompleteView","viewQueryId","removed","_repo","$668b2310913a4fe8$var$syncPointGetQueryViews","$668b2310913a4fe8$var$syncPointGetCompleteServerCache","$668b2310913a4fe8$var$syncPointViewForQuery","query16","$668b2310913a4fe8$var$syncPointGetCompleteView","$668b2310913a4fe8$var$syncPointViewExistsForQuery","query17","$668b2310913a4fe8$var$syncTreeNextQueryTag_","$668b2310913a4fe8$var$SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","$668b2310913a4fe8$var$syncTreeApplyUserOverwrite","syncTree","newData","$668b2310913a4fe8$var$syncTreeApplyOperationToSyncPoints_","$668b2310913a4fe8$var$syncTreeAckUserWrite","record","$668b2310913a4fe8$var$writeTreeGetWrite","$668b2310913a4fe8$var$syncTreeApplyServerOverwrite","$668b2310913a4fe8$var$syncTreeRemoveEventRegistration","query18","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","query19","covered","parentSyncPoint","newViews","$668b2310913a4fe8$var$syncTreeCollectDistinctViewsForSubTree_","newQuery","$668b2310913a4fe8$var$syncTreeCreateListenerForView_","startListening","$668b2310913a4fe8$var$syncTreeQueryForListening_","$668b2310913a4fe8$var$syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","$668b2310913a4fe8$var$syncTreeMakeQueryKey_","$668b2310913a4fe8$var$syncTreeRemoveTags_","$668b2310913a4fe8$var$syncTreeApplyTaggedQueryOverwrite","queryKey","$668b2310913a4fe8$var$syncTreeQueryKeyForTag_","$668b2310913a4fe8$var$syncTreeParseQueryKey_","queryPath","$668b2310913a4fe8$var$syncTreeApplyTaggedOperation_","$668b2310913a4fe8$var$syncTreeAddEventRegistration","query20","skipSetupListener","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","foreachChild","childSyncPoint","viewAlreadyExists","enableLoggingImpl","$668b2310913a4fe8$var$syncTreeSetupListener_","SDK_VERSION","$668b2310913a4fe8$var$syncTreeCalcCompleteEventCache","serverCache1","$668b2310913a4fe8$var$syncTreeGetServerValue","query21","serverCacheNode","$668b2310913a4fe8$var$viewGetCompleteNode","$668b2310913a4fe8$var$syncTreeApplyOperationHelper_","syncPointTree","$668b2310913a4fe8$var$syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","$668b2310913a4fe8$var$writeTreeRefChild","query1","error1","child1","creatorFunction","changeTree","fromObject","$f8c30e5b792195c1$export$af9d0a1d3cb53fa6","stop","ownerDocument","t2","e4","HTMLElement","cloneNode","closable","onShow","e5","parentElement","e6","requestAnimationFrame"],"version":3,"file":"index.eb378f9f.js.map"}