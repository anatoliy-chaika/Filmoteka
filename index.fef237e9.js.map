{"mappings":"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","sources":["node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_async_to_generator.js","node_modules/regenerator-runtime/runtime.js","src/JS/helpers.js","src/JS/service.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_private_field_get.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_extract_field_descriptor.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_apply_descriptor_get.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_private_field_init.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_private_field_set.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_class_apply_descriptor_set.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_create_class.js","node_modules/axios/index.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/utils.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_type_of.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/helpers/AxiosURLSearchParams.js","node_modules/axios/lib/helpers/toFormData.js","node_modules/axios/lib/core/AxiosError.js","node_modules/axios/lib/helpers/null.js","node_modules/buffer/index.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_assert_this_initialized.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_inherits.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_set_prototype_of.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_create_super.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_is_native_reflect_construct.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_get_prototype_of.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_possible_constructor_return.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/defaults/index.js","node_modules/axios/lib/defaults/transitional.js","node_modules/axios/lib/helpers/toURLEncodedForm.js","node_modules/axios/lib/platform/browser/index.js","node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","node_modules/axios/lib/platform/browser/classes/FormData.js","node_modules/axios/lib/helpers/formDataToJSON.js","node_modules/axios/lib/core/AxiosHeaders.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/cancel/CanceledError.js","node_modules/axios/lib/adapters/adapters.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/parseProtocol.js","node_modules/axios/lib/helpers/speedometer.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/helpers/validator.js","node_modules/axios/lib/env/data.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/lib/helpers/HttpStatusCode.js","node_modules/notiflix/dist/notiflix-aio-3.2.6.min.js","src/JS/renderFunctions.js","src/JS/localStorage.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_define_property.js","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/global.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/exponential_backoff.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/util/src/compat.ts","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_wrap_native_super.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_construct.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_is_native_function.js","node_modules/process/browser.js","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/index.js","node_modules/@parcel/transformer-js/node_modules/@swc/helpers/lib/_object_spread.js","node_modules/idb/build/wrap-idb-value.js","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/OnDisconnect.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/api/ServerValue.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/realtime/Constants.ts","src/JS/spiner.js","node_modules/basiclightbox/dist/basicLightbox.min.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _asyncToGenerator;\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export const filmBoxRef = document.querySelector('.js-films-list');\nexport const formRef = document.querySelector('.search__form');\nexport const listButton = document.querySelector('.buttons__list');\nexport const queueButton = document.querySelector('.js-queue');\nexport const genreInfo =\n  '{\"genres\":[{\"id\":28,\"name\":\"Action\"},{\"id\":12,\"name\":\"Adventure\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":18,\"name\":\"Drama\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":14,\"name\":\"Fantasy\"},{\"id\":36,\"name\":\"History\"},{\"id\":27,\"name\":\"Horror\"},{\"id\":10402,\"name\":\"Music\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10749,\"name\":\"Romance\"},{\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},{\"id\":53,\"name\":\"Thriller\"},{\"id\":10752,\"name\":\"War\"},{\"id\":37,\"name\":\"Western\"},{\"id\":9999,\"name\":\"Other\"}]}';\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyAjQPJnYi1aRc8VFSsfJnmKhUmbl7irFnM',\n  authDomain: 'filmoteka-377516.firebaseapp.com',\n  databaseURL: 'https://filmoteka-377516-default-rtdb.firebaseio.com',\n  projectId: 'filmoteka-377516',\n  storageBucket: 'filmoteka-377516.appspot.com',\n  messagingSenderId: '794274389144',\n  appId: '1:794274389144:web:7484dd766f3d32da9f44ed',\n  measurementId: 'G-C2FX86EHMV',\n};\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nclass FILMAPI {\n  #API_KEY;\n  #BASE_URL;\n\n  constructor() {\n    this.#API_KEY = '1aec7afb2309fd39902ffda599461df1';\n    this.#BASE_URL = 'https://api.themoviedb.org/3';\n    this.searchQuery = '';\n    this.page = 1;\n    this.max = undefined;\n  }\n\n  async fetchPopularMovies() {\n    try {\n      const resp = await axios.get(\n        `${this.#BASE_URL}/movie/popular?api_key=${\n          this.#API_KEY\n        }&language=en-US&page=${this.page}`\n      );\n      if (!resp.data.total_pages)\n        throw new Error('💔 Sorry but we can`t load films');\n      this.max = resp.data.total_pages;\n      if (this.max > 500) this.max = 500;\n      return resp.data.results;\n    } catch (err) {\n      Notiflix.Notify.failure(err.message);\n      console.log(err.message);\n    }\n  }\n\n  async fetchKeyword() {\n    if (!this.searchQuery) return;\n    try {\n      const resp = await axios.get(\n        `${this.#BASE_URL}/search/movie?api_key=${this.#API_KEY}&query=${\n          this.searchQuery\n        }&page=${this.page}`\n      );\n      if (!resp.data.page) throw new Error('💔 Sorry but we can`t load films');\n      this.max = resp.data.total_pages;\n      if (this.max > 500) this.max = 500;\n      return resp.data.results;\n    } catch (err) {\n      Notiflix.Notify.failure(err.message);\n      console.log(err.message);\n    }\n  }\n\n  async fetchById(id) {\n    try {\n      const resp = await axios.get(\n        `${this.#BASE_URL}/movie/${id}?api_key=${\n          this.#API_KEY\n        }&append_to_response=videos`\n      );\n      if (!resp.data)\n        throw new Error(\n          '💔 Sorry but we can`t load this film, please try again later'\n        );\n      return resp.data;\n    } catch (err) {\n      Notiflix.Notify.failure(err.message);\n      console.log(err.message);\n    }\n  }\n\n  incrementPage() {\n    if (this.page === this.max) {\n      return;\n    }\n    this.page += 1;\n  }\n\n  decrementPage() {\n    if (this.page === 1) {\n      return;\n    }\n    this.page -= 1;\n  }\n\n  setSearchQuery(value) {\n    this.searchQuery = value;\n  }\n\n  setPage(value) {\n    this.page = value;\n  }\n\n  setMax(value) {\n    this.max = value;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  getPage() {\n    return this.page;\n  }\n\n  getMax() {\n    return this.max;\n  }\n\n  getSearchQuery() {\n    return this.searchQuery;\n  }\n}\n\nexport const API = new FILMAPI();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldGet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorGet = _interopRequireDefault(require(\"./_class_apply_descriptor_get\"));\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"get\");\n    return (0, _classApplyDescriptorGet).default(receiver, descriptor);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classExtractFieldDescriptor;\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorGet;\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldSet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorSet = _interopRequireDefault(require(\"./_class_apply_descriptor_set\"));\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"set\");\n    (0, _classApplyDescriptorSet).default(receiver, descriptor, value);\n    return value;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorSet;\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  mergeConfig\n}\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer !== undefined) {\n      validator.assertOptions(paramsSerializer, {\n        encode: validators.function,\n        serialize: validators.function\n      }, true);\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _assertThisInitialized;\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _inherits;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) (0, _setPrototypeOf).default(subClass, superClass);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _setPrototypeOf;\nfunction _setPrototypeOf(o, p) {\n    return setPrototypeOf(o, p);\n}\nfunction setPrototypeOf(o1, p1) {\n    setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return setPrototypeOf(o1, p1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createSuper;\nvar _isNativeReflectConstruct = _interopRequireDefault(require(\"./_is_native_reflect_construct\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _possibleConstructorReturn = _interopRequireDefault(require(\"./_possible_constructor_return\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = (0, _isNativeReflectConstruct).default();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf).default(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf).default(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn).default(this, result);\n    };\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeReflectConstruct;\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _getPrototypeOf;\nfunction _getPrototypeOf(o) {\n    return getPrototypeOf(o);\n}\nfunction getPrototypeOf(o1) {\n    getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return getPrototypeOf(o1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _possibleConstructorReturn;\nvar _assertThisInitialized = _interopRequireDefault(require(\"./_assert_this_initialized\"));\nvar _typeOf = _interopRequireDefault(require(\"./_type_of\"));\nfunction _possibleConstructorReturn(self, call) {\n    if (call && ((0, _typeOf).default(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return (0, _assertThisInitialized).default(self);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default FormData;\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction isValidHeaderName(str) {\n  return /^[-_a-zA-Z]+$/.test(str.trim());\n}\n\nfunction matchHeaderValue(context, value, header, filter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv)) {\n      requestHeaders.setContentType(false); // Let the browser set it\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","export const VERSION = \"1.3.2\";","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","/* Notiflix AIO (https://notiflix.github.io) - Version: 3.2.6 - Author: Furkan (https://github.com/furcan) - Copyright 2019 - 2023 Notiflix, MIT Licence (https://opensource.org/licenses/MIT) */\n\n(function(t,e){\"function\"==typeof define&&define.amd?define([],function(){return e(t)}):\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e(t):t.Notiflix=e(t)})(\"undefined\"==typeof global?\"undefined\"==typeof window?this:window:global,function(t){'use strict';if(\"undefined\"==typeof t&&\"undefined\"==typeof t.document)return!1;var e,i,a,n,o,r=\"\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation\",s=\"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif\",l={Success:\"Success\",Failure:\"Failure\",Warning:\"Warning\",Info:\"Info\"},m={wrapID:\"NotiflixNotifyWrap\",overlayID:\"NotiflixNotifyOverlay\",width:\"280px\",position:\"right-top\",distance:\"10px\",opacity:1,borderRadius:\"5px\",rtl:!1,timeout:3e3,messageMaxLength:110,backOverlay:!1,backOverlayColor:\"rgba(0,0,0,0.5)\",plainText:!0,showOnlyTheLastOne:!1,clickToClose:!1,pauseOnHover:!0,ID:\"NotiflixNotify\",className:\"notiflix-notify\",zindex:4001,fontFamily:\"Quicksand\",fontSize:\"13px\",cssAnimation:!0,cssAnimationDuration:400,cssAnimationStyle:\"fade\",closeButton:!1,useIcon:!0,useFontAwesome:!1,fontAwesomeIconStyle:\"basic\",fontAwesomeIconSize:\"34px\",success:{background:\"#32c682\",textColor:\"#fff\",childClassName:\"notiflix-notify-success\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-check-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(50,198,130,0.2)\"},failure:{background:\"#ff5549\",textColor:\"#fff\",childClassName:\"notiflix-notify-failure\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-times-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(255,85,73,0.2)\"},warning:{background:\"#eebf31\",textColor:\"#fff\",childClassName:\"notiflix-notify-warning\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-exclamation-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(238,191,49,0.2)\"},info:{background:\"#26c0d3\",textColor:\"#fff\",childClassName:\"notiflix-notify-info\",notiflixIconColor:\"rgba(0,0,0,0.2)\",fontAwesomeClassName:\"fas fa-info-circle\",fontAwesomeIconColor:\"rgba(0,0,0,0.2)\",backOverlayColor:\"rgba(38,192,211,0.2)\"}},c={Success:\"Success\",Failure:\"Failure\",Warning:\"Warning\",Info:\"Info\"},p={ID:\"NotiflixReportWrap\",className:\"notiflix-report\",width:\"320px\",backgroundColor:\"#f8f8f8\",borderRadius:\"25px\",rtl:!1,zindex:4002,backOverlay:!0,backOverlayColor:\"rgba(0,0,0,0.5)\",backOverlayClickToClose:!1,fontFamily:\"Quicksand\",svgSize:\"110px\",plainText:!0,titleFontSize:\"16px\",titleMaxLength:34,messageFontSize:\"13px\",messageMaxLength:400,buttonFontSize:\"14px\",buttonMaxLength:34,cssAnimation:!0,cssAnimationDuration:360,cssAnimationStyle:\"fade\",success:{svgColor:\"#32c682\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#32c682\",buttonColor:\"#fff\",backOverlayColor:\"rgba(50,198,130,0.2)\"},failure:{svgColor:\"#ff5549\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#ff5549\",buttonColor:\"#fff\",backOverlayColor:\"rgba(255,85,73,0.2)\"},warning:{svgColor:\"#eebf31\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#eebf31\",buttonColor:\"#fff\",backOverlayColor:\"rgba(238,191,49,0.2)\"},info:{svgColor:\"#26c0d3\",titleColor:\"#1e1e1e\",messageColor:\"#242424\",buttonBackground:\"#26c0d3\",buttonColor:\"#fff\",backOverlayColor:\"rgba(38,192,211,0.2)\"}},f={Show:\"Show\",Ask:\"Ask\",Prompt:\"Prompt\"},d={ID:\"NotiflixConfirmWrap\",className:\"notiflix-confirm\",width:\"300px\",zindex:4003,position:\"center\",distance:\"10px\",backgroundColor:\"#f8f8f8\",borderRadius:\"25px\",backOverlay:!0,backOverlayColor:\"rgba(0,0,0,0.5)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:300,cssAnimationStyle:\"fade\",plainText:!0,titleColor:\"#32c682\",titleFontSize:\"16px\",titleMaxLength:34,messageColor:\"#1e1e1e\",messageFontSize:\"14px\",messageMaxLength:110,buttonsFontSize:\"15px\",buttonsMaxLength:34,okButtonColor:\"#f8f8f8\",okButtonBackground:\"#32c682\",cancelButtonColor:\"#f8f8f8\",cancelButtonBackground:\"#a9a9a9\"},x={Standard:\"Standard\",Hourglass:\"Hourglass\",Circle:\"Circle\",Arrows:\"Arrows\",Dots:\"Dots\",Pulse:\"Pulse\",Custom:\"Custom\",Notiflix:\"Notiflix\"},g={ID:\"NotiflixLoadingWrap\",className:\"notiflix-loading\",zindex:4e3,backgroundColor:\"rgba(0,0,0,0.8)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:400,clickToClose:!1,customSvgUrl:null,customSvgCode:null,svgSize:\"80px\",svgColor:\"#32c682\",messageID:\"NotiflixLoadingMessage\",messageFontSize:\"15px\",messageMaxLength:34,messageColor:\"#dcdcdc\"},b={Standard:\"Standard\",Hourglass:\"Hourglass\",Circle:\"Circle\",Arrows:\"Arrows\",Dots:\"Dots\",Pulse:\"Pulse\"},u={ID:\"NotiflixBlockWrap\",querySelectorLimit:200,className:\"notiflix-block\",position:\"absolute\",zindex:1e3,backgroundColor:\"rgba(255,255,255,0.9)\",rtl:!1,fontFamily:\"Quicksand\",cssAnimation:!0,cssAnimationDuration:300,svgSize:\"45px\",svgColor:\"#383838\",messageFontSize:\"14px\",messageMaxLength:34,messageColor:\"#383838\"},y=function(t){return console.error(\"%c Notiflix Error \",\"padding:2px;border-radius:20px;color:#fff;background:#ff5549\",\"\\n\"+t+r)},k=function(t){return console.log(\"%c Notiflix Info \",\"padding:2px;border-radius:20px;color:#fff;background:#26c0d3\",\"\\n\"+t+r)},w=function(e){return e||(e=\"head\"),null!==t.document[e]||(y(\"\\nNotiflix needs to be appended to the \\\"<\"+e+\">\\\" element, but you called it before the \\\"<\"+e+\">\\\" element has been created.\"),!1)},h=function(e,i){if(!w(\"head\"))return!1;if(null!==e()&&!t.document.getElementById(i)){var a=t.document.createElement(\"style\");a.id=i,a.innerHTML=e(),t.document.head.appendChild(a)}},v=function(){var t={},e=!1,a=0;\"[object Boolean]\"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],a++);for(var n=function(i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(t[a]=e&&\"[object Object]\"===Object.prototype.toString.call(i[a])?v(t[a],i[a]):i[a])};a<arguments.length;a++)n(arguments[a]);return t},N=function(e){var i=t.document.createElement(\"div\");return i.innerHTML=e,i.textContent||i.innerText||\"\"},C=function(t,e){t||(t=\"110px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportSuccess\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@keyframes NXReportSuccess1-animation{0%{-webkit-transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.5,.5) translate(-60px,-57.7px)}50%,to{-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px)}60%{-webkit-transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px);transform:translate(60px,57.7px) scale(.95,.95) translate(-60px,-57.7px)}}@-webkit-keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportSuccess4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportSuccess3-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportSuccess2-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportSuccess *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportSuccess2-animation;animation-name:NXReportSuccess2-animation;-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\"><path d=\\\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\\\" style=\\\"-webkit-animation-name:NXReportSuccess3-animation;animation-name:NXReportSuccess3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportSuccess1-animation;animation-name:NXReportSuccess1-animation;-webkit-transform:translate(60px,57.7px) scale(1,1) translate(-60px,-57.7px);-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\"><path d=\\\"M88.27 35.39L52.8 75.29 31.43 58.2c-.98-.81-2.44-.63-3.24.36-.79.99-.63 2.44.36 3.24l23.08 18.46c.43.34.93.51 1.44.51.64 0 1.27-.26 1.74-.78l36.91-41.53a2.3 2.3 0 0 0-.19-3.26c-.95-.86-2.41-.77-3.26.19z\\\" style=\\\"-webkit-animation-name:NXReportSuccess4-animation;animation-name:NXReportSuccess4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},z=function(t,e){t||(t=\"110px\"),e||(e=\"#ff5549\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportFailure\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportFailure2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportFailure3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportFailure4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportFailure *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportFailure1-animation;animation-name:NXReportFailure1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M4.35 34.95c0-16.82 13.78-30.6 30.6-30.6h50.1c16.82 0 30.6 13.78 30.6 30.6v50.1c0 16.82-13.78 30.6-30.6 30.6h-50.1c-16.82 0-30.6-13.78-30.6-30.6v-50.1zM34.95 120h50.1c19.22 0 34.95-15.73 34.95-34.95v-50.1C120 15.73 104.27 0 85.05 0h-50.1C15.73 0 0 15.73 0 34.95v50.1C0 104.27 15.73 120 34.95 120z\\\" style=\\\"-webkit-animation-name:NXReportFailure2-animation;animation-name:NXReportFailure2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportFailure3-animation;animation-name:NXReportFailure3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M82.4 37.6c-.9-.9-2.37-.9-3.27 0L60 56.73 40.86 37.6a2.306 2.306 0 0 0-3.26 3.26L56.73 60 37.6 79.13c-.9.9-.9 2.37 0 3.27.45.45 1.04.68 1.63.68.59 0 1.18-.23 1.63-.68L60 63.26 79.13 82.4c.45.45 1.05.68 1.64.68.58 0 1.18-.23 1.63-.68.9-.9.9-2.37 0-3.27L63.26 60 82.4 40.86c.9-.91.9-2.36 0-3.26z\\\" style=\\\"-webkit-animation-name:NXReportFailure4-animation;animation-name:NXReportFailure4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},S=function(t,e){t||(t=\"110px\"),e||(e=\"#eebf31\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportWarning\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportWarning2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportWarning1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@keyframes NXReportWarning3-animation{0%{-webkit-transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.5,.5) translate(-60px,-66.6px)}50%,to{-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)}60%{-webkit-transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px);transform:translate(60px,66.6px) scale(.95,.95) translate(-60px,-66.6px)}}@-webkit-keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportWarning4-animation{0%{opacity:0}50%,to{opacity:1}}#NXReportWarning *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportWarning1-animation;animation-name:NXReportWarning1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M115.46 106.15l-54.04-93.8c-.61-1.06-2.23-1.06-2.84 0l-54.04 93.8c-.62 1.07.21 2.29 1.42 2.29h108.08c1.21 0 2.04-1.22 1.42-2.29zM65.17 10.2l54.04 93.8c2.28 3.96-.65 8.78-5.17 8.78H5.96c-4.52 0-7.45-4.82-5.17-8.78l54.04-93.8c2.28-3.95 8.03-4 10.34 0z\\\" style=\\\"-webkit-animation-name:NXReportWarning2-animation;animation-name:NXReportWarning2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportWarning3-animation;animation-name:NXReportWarning3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,66.6px) scale(1,1) translate(-60px,-66.6px)\\\"><path d=\\\"M57.83 94.01c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17v-3.2c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v3.2zm0-14.15c0 1.2.97 2.17 2.17 2.17s2.17-.97 2.17-2.17V39.21c0-1.2-.97-2.17-2.17-2.17s-2.17.97-2.17 2.17v40.65z\\\" style=\\\"-webkit-animation-name:NXReportWarning4-animation;animation-name:NXReportWarning4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},L=function(t,e){t||(t=\"110px\"),e||(e=\"#26c0d3\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXReportInfo\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" fill=\\\"\"+e+\"\\\" viewBox=\\\"0 0 120 120\\\"><style>@-webkit-keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@keyframes NXReportInfo4-animation{0%{opacity:0}50%,to{opacity:1}}@-webkit-keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo3-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}50%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@-webkit-keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@keyframes NXReportInfo2-animation{0%{opacity:0}40%,to{opacity:1}}@-webkit-keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}@keyframes NXReportInfo1-animation{0%{-webkit-transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px);transform:translate(60px,60px) scale(.5,.5) translate(-60px,-60px)}40%,to{-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px);transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)}60%{-webkit-transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px);transform:translate(60px,60px) scale(.95,.95) translate(-60px,-60px)}}#NXReportInfo *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g style=\\\"-webkit-animation-name:NXReportInfo1-animation;animation-name:NXReportInfo1-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M60 115.38C29.46 115.38 4.62 90.54 4.62 60 4.62 29.46 29.46 4.62 60 4.62c30.54 0 55.38 24.84 55.38 55.38 0 30.54-24.84 55.38-55.38 55.38zM60 0C26.92 0 0 26.92 0 60s26.92 60 60 60 60-26.92 60-60S93.08 0 60 0z\\\" style=\\\"-webkit-animation-name:NXReportInfo2-animation;animation-name:NXReportInfo2-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g><g style=\\\"-webkit-animation-name:NXReportInfo3-animation;animation-name:NXReportInfo3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform:translate(60px,60px) scale(1,1) translate(-60px,-60px)\\\"><path d=\\\"M57.75 43.85c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v48.18c0 1.24-1.01 2.25-2.25 2.25s-2.25-1.01-2.25-2.25V43.85zm0-15.88c0-1.24 1.01-2.25 2.25-2.25s2.25 1.01 2.25 2.25v3.32c0 1.25-1.01 2.25-2.25 2.25s-2.25-1-2.25-2.25v-3.32z\\\" style=\\\"-webkit-animation-name:NXReportInfo4-animation;animation-name:NXReportInfo4-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1)\\\" fill=\\\"inherit\\\" data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\"/></g></svg>\";return i},W=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" transform=\\\"scale(.8)\\\" viewBox=\\\"0 0 38 38\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\" transform=\\\"translate(1 1)\\\"><circle cx=\\\"18\\\" cy=\\\"18\\\" r=\\\"18\\\" stroke-opacity=\\\".25\\\"/><path d=\\\"M36 18c0-9.94-8.06-18-18-18\\\"><animateTransform attributeName=\\\"transform\\\" dur=\\\"1s\\\" from=\\\"0 18 18\\\" repeatCount=\\\"indefinite\\\" to=\\\"360 18 18\\\" type=\\\"rotate\\\"/></path></g></svg>\";return i},I=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXLoadingHourglass\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 200 200\\\"><style>@-webkit-keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@keyframes NXhourglass5-animation{0%{-webkit-transform:scale(1,1);transform:scale(1,1)}16.67%{-webkit-transform:scale(1,.8);transform:scale(1,.8)}33.33%{-webkit-transform:scale(.88,.6);transform:scale(.88,.6)}37.5%{-webkit-transform:scale(.85,.55);transform:scale(.85,.55)}41.67%{-webkit-transform:scale(.8,.5);transform:scale(.8,.5)}45.83%{-webkit-transform:scale(.75,.45);transform:scale(.75,.45)}50%{-webkit-transform:scale(.7,.4);transform:scale(.7,.4)}54.17%{-webkit-transform:scale(.6,.35);transform:scale(.6,.35)}58.33%{-webkit-transform:scale(.5,.3);transform:scale(.5,.3)}83.33%,to{-webkit-transform:scale(.2,0);transform:scale(.2,0)}}@-webkit-keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@keyframes NXhourglass3-animation{0%{-webkit-transform:scale(1,.02);transform:scale(1,.02)}79.17%,to{-webkit-transform:scale(1,1);transform:scale(1,1)}}@-webkit-keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes NXhourglass1-animation{0%,83.33%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}#NXLoadingHourglass *{-webkit-animation-duration:1.2s;animation-duration:1.2s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:cubic-bezier(0,0,1,1);animation-timing-function:cubic-bezier(0,0,1,1)}</style><g data-animator-group=\\\"true\\\" data-animator-type=\\\"1\\\" style=\\\"-webkit-animation-name:NXhourglass1-animation;animation-name:NXhourglass1-animation;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;transform-box:fill-box\\\"><g id=\\\"NXhourglass2\\\" fill=\\\"inherit\\\"><g data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\" style=\\\"-webkit-animation-name:NXhourglass3-animation;animation-name:NXhourglass3-animation;-webkit-animation-timing-function:cubic-bezier(.42,0,.58,1);animation-timing-function:cubic-bezier(.42,0,.58,1);-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\\\" opacity=\\\".4\\\"><path id=\\\"NXhourglass4\\\" d=\\\"M100 100l-34.38 32.08v31.14h68.76v-31.14z\\\"/></g><g data-animator-group=\\\"true\\\" data-animator-type=\\\"2\\\" style=\\\"-webkit-animation-name:NXhourglass5-animation;animation-name:NXhourglass5-animation;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;transform-box:fill-box\\\" opacity=\\\".4\\\"><path id=\\\"NXhourglass6\\\" d=\\\"M100 100L65.62 67.92V36.78h68.76v31.14z\\\"/></g><path d=\\\"M51.14 38.89h8.33v14.93c0 15.1 8.29 28.99 23.34 39.1 1.88 1.25 3.04 3.97 3.04 7.08s-1.16 5.83-3.04 7.09c-15.05 10.1-23.34 23.99-23.34 39.09v14.93h-8.33a4.859 4.859 0 1 0 0 9.72h97.72a4.859 4.859 0 1 0 0-9.72h-8.33v-14.93c0-15.1-8.29-28.99-23.34-39.09-1.88-1.26-3.04-3.98-3.04-7.09s1.16-5.83 3.04-7.08c15.05-10.11 23.34-24 23.34-39.1V38.89h8.33a4.859 4.859 0 1 0 0-9.72H51.14a4.859 4.859 0 1 0 0 9.72zm79.67 14.93c0 15.87-11.93 26.25-19.04 31.03-4.6 3.08-7.34 8.75-7.34 15.15 0 6.41 2.74 12.07 7.34 15.15 7.11 4.78 19.04 15.16 19.04 31.03v14.93H69.19v-14.93c0-15.87 11.93-26.25 19.04-31.02 4.6-3.09 7.34-8.75 7.34-15.16 0-6.4-2.74-12.07-7.34-15.15-7.11-4.78-19.04-15.16-19.04-31.03V38.89h61.62v14.93z\\\"/></g></g></svg>\";return i},R=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"25 25 50 50\\\" style=\\\"-webkit-animation:rotate 2s linear infinite;animation:rotate 2s linear infinite;height:\"+t+\";-webkit-transform-origin:center center;-ms-transform-origin:center center;transform-origin:center center;width:\"+t+\";position:absolute;top:0;left:0;margin:auto\\\"><style>@-webkit-keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}@keyframes dash{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:89,200;stroke-dashoffset:-35}to{stroke-dasharray:89,200;stroke-dashoffset:-124}}</style><circle cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke=\\\"\"+e+\"\\\" stroke-width=\\\"2\\\" style=\\\"-webkit-animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite,color 1.5s ease-in-out infinite\\\" stroke-dasharray=\\\"150 200\\\" stroke-dashoffset=\\\"-10\\\" stroke-linecap=\\\"round\\\"/></svg>\";return i},A=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 128 128\\\"><g><path fill=\\\"inherit\\\" d=\\\"M109.25 55.5h-36l12-12a29.54 29.54 0 0 0-49.53 12H18.75A46.04 46.04 0 0 1 96.9 31.84l12.35-12.34v36zm-90.5 17h36l-12 12a29.54 29.54 0 0 0 49.53-12h16.97A46.04 46.04 0 0 1 31.1 96.16L18.74 108.5v-36z\\\"/><animateTransform attributeName=\\\"transform\\\" dur=\\\"1.5s\\\" from=\\\"0 64 64\\\" repeatCount=\\\"indefinite\\\" to=\\\"360 64 64\\\" type=\\\"rotate\\\"/></g></svg>\";return i},M=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 100 100\\\"><g transform=\\\"translate(25 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.239)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"-0.266s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g><g transform=\\\"translate(50 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.00152)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"-0.133s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g><g transform=\\\"translate(75 50)\\\"><circle r=\\\"9\\\" fill=\\\"inherit\\\" transform=\\\"scale(.299)\\\"><animateTransform attributeName=\\\"transform\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"0.8s\\\" keySplines=\\\"0.3 0 0.7 1;0.3 0 0.7 1\\\" keyTimes=\\\"0;0.5;1\\\" repeatCount=\\\"indefinite\\\" type=\\\"scale\\\" values=\\\"0;1;0\\\"/></circle></g></svg>\";return i},B=function(t,e){t||(t=\"60px\"),e||(e=\"#32c682\");var i=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" stroke=\\\"\"+e+\"\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 44 44\\\"><g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" stroke-width=\\\"2\\\"><circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\"><animate attributeName=\\\"r\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 20\\\"/><animate attributeName=\\\"stroke-opacity\\\" begin=\\\"0s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.3, 0.61, 0.355, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 0\\\"/></circle><circle cx=\\\"22\\\" cy=\\\"22\\\" r=\\\"1\\\"><animate attributeName=\\\"r\\\" begin=\\\"-0.9s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.165, 0.84, 0.44, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 20\\\"/><animate attributeName=\\\"stroke-opacity\\\" begin=\\\"-0.9s\\\" calcMode=\\\"spline\\\" dur=\\\"1.8s\\\" keySplines=\\\"0.3, 0.61, 0.355, 1\\\" keyTimes=\\\"0; 1\\\" repeatCount=\\\"indefinite\\\" values=\\\"1; 0\\\"/></circle></g></svg>\";return i},X=function(t,e,i){t||(t=\"60px\"),e||(e=\"#f8f8f8\"),i||(i=\"#32c682\");var a=\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"NXLoadingNotiflixLib\\\" width=\\\"\"+t+\"\\\" height=\\\"\"+t+\"\\\" viewBox=\\\"0 0 200 200\\\"><defs><style>@keyframes notiflix-n{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-x{0%{stroke-dashoffset:1000}to{stroke-dashoffset:0}}@keyframes notiflix-dot{0%,to{stroke-width:0}50%{stroke-width:12}}.nx-icon-line{stroke:\"+e+\";stroke-width:12;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:22;fill:none}</style></defs><path d=\\\"M47.97 135.05a6.5 6.5 0 1 1 0 13 6.5 6.5 0 0 1 0-13z\\\" style=\\\"animation-name:notiflix-dot;animation-timing-function:ease-in-out;animation-duration:1.25s;animation-iteration-count:infinite;animation-direction:normal\\\" fill=\\\"\"+i+\"\\\" stroke=\\\"\"+i+\"\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"22\\\" stroke-width=\\\"12\\\"/><path class=\\\"nx-icon-line\\\" d=\\\"M10.14 144.76V87.55c0-5.68-4.54-41.36 37.83-41.36 42.36 0 37.82 35.68 37.82 41.36v57.21\\\" style=\\\"animation-name:notiflix-n;animation-timing-function:linear;animation-duration:2.5s;animation-delay:0s;animation-iteration-count:infinite;animation-direction:normal\\\" stroke-dasharray=\\\"500\\\"/><path class=\\\"nx-icon-line\\\" d=\\\"M115.06 144.49c24.98-32.68 49.96-65.35 74.94-98.03M114.89 46.6c25.09 32.58 50.19 65.17 75.29 97.75\\\" style=\\\"animation-name:notiflix-x;animation-timing-function:linear;animation-duration:2.5s;animation-delay:.2s;animation-iteration-count:infinite;animation-direction:normal\\\" stroke-dasharray=\\\"500\\\"/></svg>\";return a},D=function(){return\"[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}\"},T=0,F=function(a,n,o,r){if(!w(\"body\"))return!1;e||G.Notify.init({});var c=v(!0,e,{});if(\"object\"==typeof o&&!Array.isArray(o)||\"object\"==typeof r&&!Array.isArray(r)){var p={};\"object\"==typeof o?p=o:\"object\"==typeof r&&(p=r),e=v(!0,e,p)}var f=e[a.toLocaleLowerCase(\"en\")];T++,\"string\"!=typeof n&&(n=\"Notiflix \"+a),e.plainText&&(n=N(n)),!e.plainText&&n.length>e.messageMaxLength&&(e=v(!0,e,{closeButton:!0,messageMaxLength:150}),n=\"Possible HTML Tags Error: The \\\"plainText\\\" option is \\\"false\\\" and the notification content length is more than the \\\"messageMaxLength\\\" option.\"),n.length>e.messageMaxLength&&(n=n.substring(0,e.messageMaxLength)+\"...\"),\"shadow\"===e.fontAwesomeIconStyle&&(f.fontAwesomeIconColor=f.background),e.cssAnimation||(e.cssAnimationDuration=0);var d=t.document.getElementById(m.wrapID)||t.document.createElement(\"div\");if(d.id=m.wrapID,d.style.width=e.width,d.style.zIndex=e.zindex,d.style.opacity=e.opacity,\"center-center\"===e.position?(d.style.left=e.distance,d.style.top=e.distance,d.style.right=e.distance,d.style.bottom=e.distance,d.style.margin=\"auto\",d.classList.add(\"nx-flex-center-center\"),d.style.maxHeight=\"calc((100vh - \"+e.distance+\") - \"+e.distance+\")\",d.style.display=\"flex\",d.style.flexWrap=\"wrap\",d.style.flexDirection=\"column\",d.style.justifyContent=\"center\",d.style.alignItems=\"center\",d.style.pointerEvents=\"none\"):\"center-top\"===e.position?(d.style.left=e.distance,d.style.right=e.distance,d.style.top=e.distance,d.style.bottom=\"auto\",d.style.margin=\"auto\"):\"center-bottom\"===e.position?(d.style.left=e.distance,d.style.right=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.margin=\"auto\"):\"right-bottom\"===e.position?(d.style.right=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.left=\"auto\"):\"left-top\"===e.position?(d.style.left=e.distance,d.style.top=e.distance,d.style.right=\"auto\",d.style.bottom=\"auto\"):\"left-bottom\"===e.position?(d.style.left=e.distance,d.style.bottom=e.distance,d.style.top=\"auto\",d.style.right=\"auto\"):(d.style.right=e.distance,d.style.top=e.distance,d.style.left=\"auto\",d.style.bottom=\"auto\"),e.backOverlay){var x=t.document.getElementById(m.overlayID)||t.document.createElement(\"div\");x.id=m.overlayID,x.style.width=\"100%\",x.style.height=\"100%\",x.style.position=\"fixed\",x.style.zIndex=e.zindex-1,x.style.left=0,x.style.top=0,x.style.right=0,x.style.bottom=0,x.style.background=f.backOverlayColor||e.backOverlayColor,x.className=e.cssAnimation?\"nx-with-animation\":\"\",x.style.animationDuration=e.cssAnimation?e.cssAnimationDuration+\"ms\":\"\",t.document.getElementById(m.overlayID)||t.document.body.appendChild(x)}t.document.getElementById(m.wrapID)||t.document.body.appendChild(d);var g=t.document.createElement(\"div\");g.id=e.ID+\"-\"+T,g.className=e.className+\" \"+f.childClassName+\" \"+(e.cssAnimation?\"nx-with-animation\":\"\")+\" \"+(e.useIcon?\"nx-with-icon\":\"\")+\" nx-\"+e.cssAnimationStyle+\" \"+(e.closeButton&&\"function\"!=typeof o?\"nx-with-close-button\":\"\")+\" \"+(\"function\"==typeof o?\"nx-with-callback\":\"\")+\" \"+(e.clickToClose?\"nx-notify-click-to-close\":\"\"),g.style.fontSize=e.fontSize,g.style.color=f.textColor,g.style.background=f.background,g.style.borderRadius=e.borderRadius,g.style.pointerEvents=\"all\",e.rtl&&(g.setAttribute(\"dir\",\"rtl\"),g.classList.add(\"nx-rtl-on\")),g.style.fontFamily=\"\\\"\"+e.fontFamily+\"\\\", \"+s,e.cssAnimation&&(g.style.animationDuration=e.cssAnimationDuration+\"ms\");var b=\"\";if(e.closeButton&&\"function\"!=typeof o&&(b=\"<span class=\\\"nx-close-button\\\"><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\\\"/></g></svg></span>\"),!e.useIcon)g.innerHTML=\"<span class=\\\"nx-message\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\");else if(e.useFontAwesome)g.innerHTML=\"<i style=\\\"color:\"+f.fontAwesomeIconColor+\"; font-size:\"+e.fontAwesomeIconSize+\";\\\" class=\\\"nx-message-icon nx-message-icon-fa \"+f.fontAwesomeClassName+\" \"+(\"shadow\"===e.fontAwesomeIconStyle?\"nx-message-icon-fa-shadow\":\"nx-message-icon-fa-basic\")+\"\\\"></i><span class=\\\"nx-message nx-with-icon\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\");else{var u=\"\";a===l.Success?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\\\"/></g></svg>\":a===l.Failure?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\\\"/></g></svg>\":a===l.Warning?u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\\\"/></g></svg>\":a===l.Info&&(u=\"<svg class=\\\"nx-message-icon\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\"><g><path fill=\\\"\"+f.notiflixIconColor+\"\\\" d=\\\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\\\"/></g></svg>\"),g.innerHTML=u+\"<span class=\\\"nx-message nx-with-icon\\\">\"+n+\"</span>\"+(e.closeButton?b:\"\")}if(\"left-bottom\"===e.position||\"right-bottom\"===e.position){var y=t.document.getElementById(m.wrapID);y.insertBefore(g,y.firstChild)}else t.document.getElementById(m.wrapID).appendChild(g);var k=t.document.getElementById(g.id);if(k){var h,C,z=function(){k.classList.add(\"nx-remove\");var e=t.document.getElementById(m.overlayID);e&&0>=d.childElementCount&&e.classList.add(\"nx-remove\"),clearTimeout(h)},S=function(){if(k&&null!==k.parentNode&&k.parentNode.removeChild(k),0>=d.childElementCount&&null!==d.parentNode){d.parentNode.removeChild(d);var e=t.document.getElementById(m.overlayID);e&&null!==e.parentNode&&e.parentNode.removeChild(e)}clearTimeout(C)};if(e.closeButton&&\"function\"!=typeof o){var L=t.document.getElementById(g.id).querySelector(\"span.nx-close-button\");L.addEventListener(\"click\",function(){z();var t=setTimeout(function(){S(),clearTimeout(t)},e.cssAnimationDuration)})}if((\"function\"==typeof o||e.clickToClose)&&k.addEventListener(\"click\",function(){\"function\"==typeof o&&o(),z();var t=setTimeout(function(){S(),clearTimeout(t)},e.cssAnimationDuration)}),!e.closeButton&&\"function\"!=typeof o){var W=function(){h=setTimeout(function(){z()},e.timeout),C=setTimeout(function(){S()},e.timeout+e.cssAnimationDuration)};W(),e.pauseOnHover&&(k.addEventListener(\"mouseenter\",function(){k.classList.add(\"nx-paused\"),clearTimeout(h),clearTimeout(C)}),k.addEventListener(\"mouseleave\",function(){k.classList.remove(\"nx-paused\"),W()}))}}if(e.showOnlyTheLastOne&&0<T)for(var I,R=t.document.querySelectorAll(\"[id^=\"+e.ID+\"-]:not([id=\"+e.ID+\"-\"+T+\"])\"),A=0;A<R.length;A++)I=R[A],null!==I.parentNode&&I.parentNode.removeChild(I);e=v(!0,e,c)},E=function(){return\"[id^=NotiflixReportWrap]{position:fixed;z-index:4002;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;left:0;top:0;padding:10px;color:#1e1e1e;border-radius:25px;background:transparent;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixReportWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixReportWrap]>div[class*=\\\"-overlay\\\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixReportWrap]>div.nx-report-click-to-close{cursor:pointer}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]{width:320px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:inherit;padding:10px;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));border:1px solid rgba(0,0,0,.03);background:#f8f8f8;position:relative;z-index:1}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]>div[class$=\\\"-icon\\\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:110px;height:110px;display:block;margin:6px auto 12px}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"]>div[class$=\\\"-icon\\\"] svg{min-width:100%;max-width:100%;height:auto}[id^=NotiflixReportWrap]>*>h5{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:16px;font-weight:500;line-height:1.4;margin:0 0 10px;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);float:left;width:100%;text-align:center}[id^=NotiflixReportWrap]>*>p{word-break:break-all;word-break:break-word;font-family:inherit!important;font-size:13px;line-height:1.4;font-weight:normal;float:left;width:100%;padding:0 10px;margin:0 0 10px}[id^=NotiflixReportWrap] a#NXReportButton{word-break:break-all;word-break:break-word;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;cursor:pointer;float:right;padding:7px 17px;background:#32c682;font-size:14px;line-height:1.4;font-weight:500;border-radius:inherit!important;color:#fff}[id^=NotiflixReportWrap] a#NXReportButton:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixReportWrap].nx-rtl-on a#NXReportButton{float:left}[id^=NotiflixReportWrap]>div[class*=\\\"-overlay\\\"].nx-with-animation{-webkit-animation:report-overlay-animation .3s ease-in-out 0s normal;animation:report-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes report-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"].nx-with-animation.nx-fade{-webkit-animation:report-animation-fade .3s ease-in-out 0s normal;animation:report-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes report-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixReportWrap]>div[class*=\\\"-content\\\"].nx-with-animation.nx-zoom{-webkit-animation:report-animation-zoom .3s ease-in-out 0s normal;animation:report-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes report-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-overlay\\\"].nx-with-animation{opacity:0;-webkit-animation:report-overlay-animation-remove .3s ease-in-out 0s normal;animation:report-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-content\\\"].nx-with-animation.nx-fade{opacity:0;-webkit-animation:report-animation-fade-remove .3s ease-in-out 0s normal;animation:report-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes report-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixReportWrap].nx-remove>div[class*=\\\"-content\\\"].nx-with-animation.nx-zoom{opacity:0;-webkit-animation:report-animation-zoom-remove .3s ease-in-out 0s normal;animation:report-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes report-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}\"},j=function(e,a,n,o,r,l){if(!w(\"body\"))return!1;i||G.Report.init({});var m={};if(\"object\"==typeof r&&!Array.isArray(r)||\"object\"==typeof l&&!Array.isArray(l)){var f={};\"object\"==typeof r?f=r:\"object\"==typeof l&&(f=l),m=v(!0,i,{}),i=v(!0,i,f)}var d=i[e.toLocaleLowerCase(\"en\")];\"string\"!=typeof a&&(a=\"Notiflix \"+e),\"string\"!=typeof n&&(e===c.Success?n=\"\\\"Do not try to become a person of success but try to become a person of value.\\\" <br><br>- Albert Einstein\":e===c.Failure?n=\"\\\"Failure is simply the opportunity to begin again, this time more intelligently.\\\" <br><br>- Henry Ford\":e===c.Warning?n=\"\\\"The peoples who want to live comfortably without producing and fatigue; they are doomed to lose their dignity, then liberty, and then independence and destiny.\\\" <br><br>- Mustafa Kemal Ataturk\":e===c.Info&&(n=\"\\\"Knowledge rests not upon truth alone, but upon error also.\\\" <br><br>- Carl Gustav Jung\")),\"string\"!=typeof o&&(o=\"Okay\"),i.plainText&&(a=N(a),n=N(n),o=N(o)),i.plainText||(a.length>i.titleMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the title content length is more than the \\\"titleMaxLength\\\" option.\",o=\"Okay\"),n.length>i.messageMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the message content length is more than the \\\"messageMaxLength\\\" option.\",o=\"Okay\"),o.length>i.buttonMaxLength&&(a=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the button content length is more than the \\\"buttonMaxLength\\\" option.\",o=\"Okay\")),a.length>i.titleMaxLength&&(a=a.substring(0,i.titleMaxLength)+\"...\"),n.length>i.messageMaxLength&&(n=n.substring(0,i.messageMaxLength)+\"...\"),o.length>i.buttonMaxLength&&(o=o.substring(0,i.buttonMaxLength)+\"...\"),i.cssAnimation||(i.cssAnimationDuration=0);var x=t.document.createElement(\"div\");x.id=p.ID,x.className=i.className,x.style.zIndex=i.zindex,x.style.borderRadius=i.borderRadius,x.style.fontFamily=\"\\\"\"+i.fontFamily+\"\\\", \"+s,i.rtl&&(x.setAttribute(\"dir\",\"rtl\"),x.classList.add(\"nx-rtl-on\")),x.style.display=\"flex\",x.style.flexWrap=\"wrap\",x.style.flexDirection=\"column\",x.style.alignItems=\"center\",x.style.justifyContent=\"center\";var g=\"\",b=!0===i.backOverlayClickToClose;i.backOverlay&&(g=\"<div class=\\\"\"+i.className+\"-overlay\"+(i.cssAnimation?\" nx-with-animation\":\"\")+(b?\" nx-report-click-to-close\":\"\")+\"\\\" style=\\\"background:\"+(d.backOverlayColor||i.backOverlayColor)+\";animation-duration:\"+i.cssAnimationDuration+\"ms;\\\"></div>\");var u=\"\";if(e===c.Success?u=C(i.svgSize,d.svgColor):e===c.Failure?u=z(i.svgSize,d.svgColor):e===c.Warning?u=S(i.svgSize,d.svgColor):e===c.Info&&(u=L(i.svgSize,d.svgColor)),x.innerHTML=g+\"<div class=\\\"\"+i.className+\"-content\"+(i.cssAnimation?\" nx-with-animation \":\"\")+\" nx-\"+i.cssAnimationStyle+\"\\\" style=\\\"width:\"+i.width+\"; background:\"+i.backgroundColor+\"; animation-duration:\"+i.cssAnimationDuration+\"ms;\\\"><div style=\\\"width:\"+i.svgSize+\"; height:\"+i.svgSize+\";\\\" class=\\\"\"+i.className+\"-icon\\\">\"+u+\"</div><h5 class=\\\"\"+i.className+\"-title\\\" style=\\\"font-weight:500; font-size:\"+i.titleFontSize+\"; color:\"+d.titleColor+\";\\\">\"+a+\"</h5><p class=\\\"\"+i.className+\"-message\\\" style=\\\"font-size:\"+i.messageFontSize+\"; color:\"+d.messageColor+\";\\\">\"+n+\"</p><a id=\\\"NXReportButton\\\" class=\\\"\"+i.className+\"-button\\\" style=\\\"font-weight:500; font-size:\"+i.buttonFontSize+\"; background:\"+d.buttonBackground+\"; color:\"+d.buttonColor+\";\\\">\"+o+\"</a></div>\",!t.document.getElementById(x.id)){t.document.body.appendChild(x);var y=function(){var e=t.document.getElementById(x.id);e.classList.add(\"nx-remove\");var a=setTimeout(function(){null!==e.parentNode&&e.parentNode.removeChild(e),clearTimeout(a)},i.cssAnimationDuration)},k=t.document.getElementById(\"NXReportButton\");if(k.addEventListener(\"click\",function(){\"function\"==typeof r&&r(),y()}),g&&b){var h=t.document.querySelector(\".nx-report-click-to-close\");h.addEventListener(\"click\",function(){y()})}}i=v(!0,i,m)},O=function(){return\"[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\\\"-overlay\\\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-overlay\\\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\\\"-overlay\\\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-head\\\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\\\"-content\\\"]>div[class*=\\\"-buttons\\\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\\\"-content\\\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\\\"-content\\\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\\\"-content\\\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\\\"-content\\\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}\"},H=function(e,i,n,o,r,l,m,c,p){if(!w(\"body\"))return!1;a||G.Confirm.init({});var x=v(!0,a,{});\"object\"!=typeof p||Array.isArray(p)||(a=v(!0,a,p)),\"string\"!=typeof i&&(i=\"Notiflix Confirm\"),\"string\"!=typeof n&&(n=\"Do you agree with me?\"),\"string\"!=typeof r&&(r=\"Yes\"),\"string\"!=typeof l&&(l=\"No\"),\"function\"!=typeof m&&(m=void 0),\"function\"!=typeof c&&(c=void 0),a.plainText&&(i=N(i),n=N(n),r=N(r),l=N(l)),a.plainText||(i.length>a.titleMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the title content length is more than \\\"titleMaxLength\\\" option.\",r=\"Okay\",l=\"...\"),n.length>a.messageMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the message content length is more than \\\"messageMaxLength\\\" option.\",r=\"Okay\",l=\"...\"),(r.length||l.length)>a.buttonsMaxLength&&(i=\"Possible HTML Tags Error\",n=\"The \\\"plainText\\\" option is \\\"false\\\" and the buttons content length is more than \\\"buttonsMaxLength\\\" option.\",r=\"Okay\",l=\"...\")),i.length>a.titleMaxLength&&(i=i.substring(0,a.titleMaxLength)+\"...\"),n.length>a.messageMaxLength&&(n=n.substring(0,a.messageMaxLength)+\"...\"),r.length>a.buttonsMaxLength&&(r=r.substring(0,a.buttonsMaxLength)+\"...\"),l.length>a.buttonsMaxLength&&(l=l.substring(0,a.buttonsMaxLength)+\"...\"),a.cssAnimation||(a.cssAnimationDuration=0);var g=t.document.createElement(\"div\");g.id=d.ID,g.className=a.className+(a.cssAnimation?\" nx-with-animation nx-\"+a.cssAnimationStyle:\"\"),g.style.zIndex=a.zindex,g.style.padding=a.distance,a.rtl&&(g.setAttribute(\"dir\",\"rtl\"),g.classList.add(\"nx-rtl-on\"));var b=\"string\"==typeof a.position?a.position.trim():\"center\";g.classList.add(\"nx-position-\"+b),g.style.fontFamily=\"\\\"\"+a.fontFamily+\"\\\", \"+s;var u=\"\";a.backOverlay&&(u=\"<div class=\\\"\"+a.className+\"-overlay\"+(a.cssAnimation?\" nx-with-animation\":\"\")+\"\\\" style=\\\"background:\"+a.backOverlayColor+\";animation-duration:\"+a.cssAnimationDuration+\"ms;\\\"></div>\");var y=\"\";\"function\"==typeof m&&(y=\"<a id=\\\"NXConfirmButtonCancel\\\" class=\\\"nx-confirm-button-cancel\\\" style=\\\"color:\"+a.cancelButtonColor+\";background:\"+a.cancelButtonBackground+\";font-size:\"+a.buttonsFontSize+\";\\\">\"+l+\"</a>\");var k=\"\",h=null,C=void 0;if(e===f.Ask||e===f.Prompt){h=o||\"\";var z=e===f.Ask?Math.ceil(1.5*h.length):200<h.length?Math.ceil(1.5*h.length):250,S=e===f.Prompt?\"value=\\\"\"+h+\"\\\"\":\"\";k=\"<div><input id=\\\"NXConfirmValidationInput\\\" type=\\\"text\\\" \"+S+\" maxlength=\\\"\"+z+\"\\\" style=\\\"font-size:\"+a.messageFontSize+\";border-radius: \"+a.borderRadius+\";\\\" autocomplete=\\\"off\\\" spellcheck=\\\"false\\\" autocapitalize=\\\"none\\\" /></div>\"}if(g.innerHTML=u+\"<div class=\\\"\"+a.className+\"-content\\\" style=\\\"width:\"+a.width+\"; background:\"+a.backgroundColor+\"; animation-duration:\"+a.cssAnimationDuration+\"ms; border-radius: \"+a.borderRadius+\";\\\"><div class=\\\"\"+a.className+\"-head\\\"><h5 style=\\\"color:\"+a.titleColor+\";font-size:\"+a.titleFontSize+\";\\\">\"+i+\"</h5><div style=\\\"color:\"+a.messageColor+\";font-size:\"+a.messageFontSize+\";\\\">\"+n+k+\"</div></div><div class=\\\"\"+a.className+\"-buttons\\\"><a id=\\\"NXConfirmButtonOk\\\" class=\\\"nx-confirm-button-ok\"+(\"function\"==typeof m?\"\":\" nx-full\")+\"\\\" style=\\\"color:\"+a.okButtonColor+\";background:\"+a.okButtonBackground+\";font-size:\"+a.buttonsFontSize+\";\\\">\"+r+\"</a>\"+y+\"</div></div>\",!t.document.getElementById(g.id)){t.document.body.appendChild(g);var L=t.document.getElementById(g.id),W=t.document.getElementById(\"NXConfirmButtonOk\"),I=t.document.getElementById(\"NXConfirmValidationInput\");if(I&&(I.focus(),I.setSelectionRange(0,(I.value||\"\").length),I.addEventListener(\"keyup\",function(t){var i=t.target.value;if(e===f.Ask&&i!==h)t.preventDefault(),I.classList.add(\"nx-validation-failure\"),I.classList.remove(\"nx-validation-success\");else{e===f.Ask&&(I.classList.remove(\"nx-validation-failure\"),I.classList.add(\"nx-validation-success\"));var a=\"enter\"===(t.key||\"\").toLocaleLowerCase(\"en\")||13===t.keyCode;a&&W.dispatchEvent(new Event(\"click\"))}})),W.addEventListener(\"click\",function(t){if(e===f.Ask&&h&&I){var i=(I.value||\"\").toString();if(i!==h)return I.focus(),I.classList.add(\"nx-validation-failure\"),t.stopPropagation(),t.preventDefault(),t.returnValue=!1,t.cancelBubble=!0,!1;I.classList.remove(\"nx-validation-failure\")}\"function\"==typeof m&&(e===f.Prompt&&I&&(C=I.value||\"\"),m(C)),L.classList.add(\"nx-remove\");var n=setTimeout(function(){null!==L.parentNode&&(L.parentNode.removeChild(L),clearTimeout(n))},a.cssAnimationDuration)}),\"function\"==typeof m){var R=t.document.getElementById(\"NXConfirmButtonCancel\");R.addEventListener(\"click\",function(){\"function\"==typeof c&&(e===f.Prompt&&I&&(C=I.value||\"\"),c(C)),L.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==L.parentNode&&(L.parentNode.removeChild(L),clearTimeout(t))},a.cssAnimationDuration)})}}a=v(!0,a,x)},P=function(){return\"[id^=NotiflixLoadingWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:fixed;z-index:4000;width:100%;height:100%;left:0;top:0;right:0;bottom:0;margin:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box;background:rgba(0,0,0,.8);font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif}[id^=NotiflixLoadingWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixLoadingWrap].nx-loading-click-to-close{cursor:pointer}[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"]{width:60px;height:60px;position:relative;-webkit-transition:top .2s ease-in-out;-o-transition:top .2s ease-in-out;transition:top .2s ease-in-out;margin:0 auto}[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"] img,[id^=NotiflixLoadingWrap]>div[class*=\\\"-icon\\\"] svg{max-width:unset;max-height:unset;width:100%;height:auto;position:absolute;left:0;top:0}[id^=NotiflixLoadingWrap]>p{position:relative;margin:10px auto 0;font-family:inherit!important;font-weight:normal;font-size:15px;line-height:1.4;padding:0 10px;width:100%;text-align:center}[id^=NotiflixLoadingWrap].nx-with-animation{-webkit-animation:loading-animation-fade .3s ease-in-out 0s normal;animation:loading-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixLoadingWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:loading-animation-fade-remove .3s ease-in-out 0s normal;animation:loading-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes loading-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixLoadingWrap]>p.nx-loading-message-new{-webkit-animation:loading-new-message-fade .3s ease-in-out 0s normal;animation:loading-new-message-fade .3s ease-in-out 0s normal}@-webkit-keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}@keyframes loading-new-message-fade{0%{opacity:0}100%{opacity:1}}\"},U=function(e,i,a,o,r){if(!w(\"body\"))return!1;n||G.Loading.init({});var l=v(!0,n,{});if(\"object\"==typeof i&&!Array.isArray(i)||\"object\"==typeof a&&!Array.isArray(a)){var m={};\"object\"==typeof i?m=i:\"object\"==typeof a&&(m=a),n=v(!0,n,m)}var c=\"\";if(\"string\"==typeof i&&0<i.length&&(c=i),o){c=c.length>n.messageMaxLength?N(c).toString().substring(0,n.messageMaxLength)+\"...\":N(c).toString();var p=\"\";0<c.length&&(p=\"<p id=\\\"\"+n.messageID+\"\\\" class=\\\"nx-loading-message\\\" style=\\\"color:\"+n.messageColor+\";font-size:\"+n.messageFontSize+\";\\\">\"+c+\"</p>\"),n.cssAnimation||(n.cssAnimationDuration=0);var f=\"\";if(e===x.Standard)f=W(n.svgSize,n.svgColor);else if(e===x.Hourglass)f=I(n.svgSize,n.svgColor);else if(e===x.Circle)f=R(n.svgSize,n.svgColor);else if(e===x.Arrows)f=A(n.svgSize,n.svgColor);else if(e===x.Dots)f=M(n.svgSize,n.svgColor);else if(e===x.Pulse)f=B(n.svgSize,n.svgColor);else if(e===x.Custom&&null!==n.customSvgCode&&null===n.customSvgUrl)f=n.customSvgCode||\"\";else if(e===x.Custom&&null!==n.customSvgUrl&&null===n.customSvgCode)f=\"<img class=\\\"nx-custom-loading-icon\\\" width=\\\"\"+n.svgSize+\"\\\" height=\\\"\"+n.svgSize+\"\\\" src=\\\"\"+n.customSvgUrl+\"\\\" alt=\\\"Notiflix\\\">\";else{if(e===x.Custom&&(null===n.customSvgUrl||null===n.customSvgCode))return y(\"You have to set a static SVG url to \\\"customSvgUrl\\\" option to use Loading Custom.\"),!1;f=X(n.svgSize,\"#f8f8f8\",\"#32c682\")}var d=parseInt((n.svgSize||\"\").replace(/[^0-9]/g,\"\")),b=t.innerWidth,u=d>=b?b-40+\"px\":d+\"px\",k=\"<div style=\\\"width:\"+u+\"; height:\"+u+\";\\\" class=\\\"\"+n.className+\"-icon\"+(0<c.length?\" nx-with-message\":\"\")+\"\\\">\"+f+\"</div>\",h=t.document.createElement(\"div\");if(h.id=g.ID,h.className=n.className+(n.cssAnimation?\" nx-with-animation\":\"\")+(n.clickToClose?\" nx-loading-click-to-close\":\"\"),h.style.zIndex=n.zindex,h.style.background=n.backgroundColor,h.style.animationDuration=n.cssAnimationDuration+\"ms\",h.style.fontFamily=\"\\\"\"+n.fontFamily+\"\\\", \"+s,h.style.display=\"flex\",h.style.flexWrap=\"wrap\",h.style.flexDirection=\"column\",h.style.alignItems=\"center\",h.style.justifyContent=\"center\",n.rtl&&(h.setAttribute(\"dir\",\"rtl\"),h.classList.add(\"nx-rtl-on\")),h.innerHTML=k+p,!t.document.getElementById(h.id)&&(t.document.body.appendChild(h),n.clickToClose)){var C=t.document.getElementById(h.id);C.addEventListener(\"click\",function(){h.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==h.parentNode&&(h.parentNode.removeChild(h),clearTimeout(t))},n.cssAnimationDuration)})}}else if(t.document.getElementById(g.ID))var z=t.document.getElementById(g.ID),S=setTimeout(function(){z.classList.add(\"nx-remove\");var t=setTimeout(function(){null!==z.parentNode&&(z.parentNode.removeChild(z),clearTimeout(t))},n.cssAnimationDuration);clearTimeout(S)},r);n=v(!0,n,l)},V=function(e){\"string\"!=typeof e&&(e=\"\");var i=t.document.getElementById(g.ID);if(i)if(0<e.length){e=e.length>n.messageMaxLength?N(e).substring(0,n.messageMaxLength)+\"...\":N(e);var a=i.getElementsByTagName(\"p\")[0];if(a)a.innerHTML=e;else{var o=t.document.createElement(\"p\");o.id=n.messageID,o.className=\"nx-loading-message nx-loading-message-new\",o.style.color=n.messageColor,o.style.fontSize=n.messageFontSize,o.innerHTML=e,i.appendChild(o)}}else y(\"Where is the new message?\")},q=function(){return\"[id^=NotiflixBlockWrap]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;z-index:1000;font-family:\\\"Quicksand\\\",-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,sans-serif;background:rgba(255,255,255,.9);text-align:center;animation-duration:.4s;width:100%;height:100%;left:0;top:0;border-radius:inherit;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixBlockWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixBlockWrap]>span[class*=\\\"-icon\\\"]{display:block;width:45px;height:45px;position:relative;margin:0 auto}[id^=NotiflixBlockWrap]>span[class*=\\\"-icon\\\"] svg{width:inherit;height:inherit}[id^=NotiflixBlockWrap]>span[class*=\\\"-message\\\"]{position:relative;display:block;width:100%;margin:10px auto 0;padding:0 10px;font-family:inherit!important;font-weight:normal;font-size:14px;line-height:1.4}[id^=NotiflixBlockWrap].nx-with-animation{-webkit-animation:block-animation-fade .3s ease-in-out 0s normal;animation:block-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes block-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixBlockWrap].nx-with-animation.nx-remove{opacity:0;-webkit-animation:block-animation-fade-remove .3s ease-in-out 0s normal;animation:block-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes block-animation-fade-remove{0%{opacity:1}100%{opacity:0}}\"},Q=0,Y=function(e,i,a,n,r,l){var m;if(Array.isArray(a)){if(1>a.length)return y(\"Array of HTMLElements should contains at least one HTMLElement.\"),!1;m=a}else if(Object.prototype.isPrototypeOf.call(NodeList.prototype,a)){if(1>a.length)return y(\"NodeListOf<HTMLElement> should contains at least one HTMLElement.\"),!1;m=Array.prototype.slice.call(a)}else{var c=\"string\"!=typeof a||1>(a||\"\").length||1===(a||\"\").length&&(\"#\"===(a||\"\")[0]||\".\"===(a||\"\")[0]);if(c)return y(\"The selector parameter must be a string and matches a specified CSS selector(s).\"),!1;var p=t.document.querySelectorAll(a);if(1>p.length)return y(\"You called the \\\"Notiflix.Block...\\\" function with \\\"\"+a+\"\\\" selector, but there is no such element(s) in the document.\"),!1;m=p}o||G.Block.init({});var f=v(!0,o,{});if(\"object\"==typeof n&&!Array.isArray(n)||\"object\"==typeof r&&!Array.isArray(r)){var d={};\"object\"==typeof n?d=n:\"object\"==typeof r&&(d=r),o=v(!0,o,d)}var x=\"\";\"string\"==typeof n&&0<n.length&&(x=n),o.cssAnimation||(o.cssAnimationDuration=0);var g=u.className;\"string\"==typeof o.className&&(g=o.className.trim());var h=\"number\"==typeof o.querySelectorLimit?o.querySelectorLimit:200,C=(m||[]).length>=h?h:m.length,z=\"nx-block-temporary-position\";if(e){for(var S,L=[\"area\",\"base\",\"br\",\"col\",\"command\",\"embed\",\"hr\",\"img\",\"input\",\"keygen\",\"link\",\"meta\",\"param\",\"source\",\"track\",\"wbr\",\"html\",\"head\",\"title\",\"script\",\"style\",\"iframe\"],X=0;X<C;X++)if(S=m[X],S){if(-1<L.indexOf(S.tagName.toLocaleLowerCase(\"en\")))break;var D=S.querySelectorAll(\"[id^=\"+u.ID+\"]\");if(1>D.length){var T=\"\";i&&(i===b.Hourglass?T=I(o.svgSize,o.svgColor):i===b.Circle?T=R(o.svgSize,o.svgColor):i===b.Arrows?T=A(o.svgSize,o.svgColor):i===b.Dots?T=M(o.svgSize,o.svgColor):i===b.Pulse?T=B(o.svgSize,o.svgColor):T=W(o.svgSize,o.svgColor));var F=\"<span class=\\\"\"+g+\"-icon\\\" style=\\\"width:\"+o.svgSize+\";height:\"+o.svgSize+\";\\\">\"+T+\"</span>\",E=\"\";0<x.length&&(x=x.length>o.messageMaxLength?N(x).substring(0,o.messageMaxLength)+\"...\":N(x),E=\"<span style=\\\"font-size:\"+o.messageFontSize+\";color:\"+o.messageColor+\";\\\" class=\\\"\"+g+\"-message\\\">\"+x+\"</span>\"),Q++;var j=t.document.createElement(\"div\");j.id=u.ID+\"-\"+Q,j.className=g+(o.cssAnimation?\" nx-with-animation\":\"\"),j.style.position=o.position,j.style.zIndex=o.zindex,j.style.background=o.backgroundColor,j.style.animationDuration=o.cssAnimationDuration+\"ms\",j.style.fontFamily=\"\\\"\"+o.fontFamily+\"\\\", \"+s,j.style.display=\"flex\",j.style.flexWrap=\"wrap\",j.style.flexDirection=\"column\",j.style.alignItems=\"center\",j.style.justifyContent=\"center\",o.rtl&&(j.setAttribute(\"dir\",\"rtl\"),j.classList.add(\"nx-rtl-on\")),j.innerHTML=F+E;var O=t.getComputedStyle(S).getPropertyValue(\"position\"),H=\"string\"==typeof O?O.toLocaleLowerCase(\"en\"):\"relative\",P=Math.round(1.25*parseInt(o.svgSize))+40,U=S.offsetHeight||0,V=\"\";P>U&&(V=\"min-height:\"+P+\"px;\");var q=\"\";q=S.getAttribute(\"id\")?\"#\"+S.getAttribute(\"id\"):S.classList[0]?\".\"+S.classList[0]:(S.tagName||\"\").toLocaleLowerCase(\"en\");var Y=\"\",K=-1>=[\"absolute\",\"relative\",\"fixed\",\"sticky\"].indexOf(H);if(K||0<V.length){if(!w(\"head\"))return!1;K&&(Y=\"position:relative!important;\");var $=\"<style id=\\\"Style-\"+u.ID+\"-\"+Q+\"\\\">\"+q+\".\"+z+\"{\"+Y+V+\"}</style>\",J=t.document.createRange();J.selectNode(t.document.head);var Z=J.createContextualFragment($);t.document.head.appendChild(Z),S.classList.add(z)}S.appendChild(j)}}}else var _=function(e){var i=setTimeout(function(){null!==e.parentNode&&e.parentNode.removeChild(e);var a=e.getAttribute(\"id\"),n=t.document.getElementById(\"Style-\"+a);n&&null!==n.parentNode&&n.parentNode.removeChild(n),clearTimeout(i)},o.cssAnimationDuration)},tt=function(t){if(t&&0<t.length)for(var e,n=0;n<t.length;n++)e=t[n],e&&(e.classList.add(\"nx-remove\"),_(e));else\"string\"==typeof a?k(\"\\\"Notiflix.Block.remove();\\\" function called with \\\"\"+a+\"\\\" selector, but this selector does not have a \\\"Block\\\" element to remove.\"):k(\"\\\"Notiflix.Block.remove();\\\" function called with \\\"\"+a+\"\\\", but this \\\"Array<HTMLElement>\\\" or \\\"NodeListOf<HTMLElement>\\\" does not have a \\\"Block\\\" element to remove.\")},et=function(t){var e=setTimeout(function(){t.classList.remove(z),clearTimeout(e)},o.cssAnimationDuration+300)},it=setTimeout(function(){for(var t,e=0;e<C;e++)t=m[e],t&&(et(t),D=t.querySelectorAll(\"[id^=\"+u.ID+\"]\"),tt(D));clearTimeout(it)},l);o=v(!0,o,f)},G={Notify:{init:function(t){e=v(!0,m,t),h(D,\"NotiflixNotifyInternalCSS\")},merge:function(t){return e?void(e=v(!0,e,t)):(y(\"You have to initialize the Notify module before call Merge function.\"),!1)},success:function(t,e,i){F(l.Success,t,e,i)},failure:function(t,e,i){F(l.Failure,t,e,i)},warning:function(t,e,i){F(l.Warning,t,e,i)},info:function(t,e,i){F(l.Info,t,e,i)}},Report:{init:function(t){i=v(!0,p,t),h(E,\"NotiflixReportInternalCSS\")},merge:function(t){return i?void(i=v(!0,i,t)):(y(\"You have to initialize the Report module before call Merge function.\"),!1)},success:function(t,e,i,a,n){j(c.Success,t,e,i,a,n)},failure:function(t,e,i,a,n){j(c.Failure,t,e,i,a,n)},warning:function(t,e,i,a,n){j(c.Warning,t,e,i,a,n)},info:function(t,e,i,a,n){j(c.Info,t,e,i,a,n)}},Confirm:{init:function(t){a=v(!0,d,t),h(O,\"NotiflixConfirmInternalCSS\")},merge:function(t){return a?void(a=v(!0,a,t)):(y(\"You have to initialize the Confirm module before call Merge function.\"),!1)},show:function(t,e,i,a,n,o,r){H(f.Show,t,e,null,i,a,n,o,r)},ask:function(t,e,i,a,n,o,r,s){H(f.Ask,t,e,i,a,n,o,r,s)},prompt:function(t,e,i,a,n,o,r,s){H(f.Prompt,t,e,i,a,n,o,r,s)}},Loading:{init:function(t){n=v(!0,g,t),h(P,\"NotiflixLoadingInternalCSS\")},merge:function(t){return n?void(n=v(!0,n,t)):(y(\"You have to initialize the Loading module before call Merge function.\"),!1)},standard:function(t,e){U(x.Standard,t,e,!0,0)},hourglass:function(t,e){U(x.Hourglass,t,e,!0,0)},circle:function(t,e){U(x.Circle,t,e,!0,0)},arrows:function(t,e){U(x.Arrows,t,e,!0,0)},dots:function(t,e){U(x.Dots,t,e,!0,0)},pulse:function(t,e){U(x.Pulse,t,e,!0,0)},custom:function(t,e){U(x.Custom,t,e,!0,0)},notiflix:function(t,e){U(x.Notiflix,t,e,!0,0)},remove:function(t){\"number\"!=typeof t&&(t=0),U(null,null,null,!1,t)},change:function(t){V(t)}},Block:{init:function(t){o=v(!0,u,t),h(q,\"NotiflixBlockInternalCSS\")},merge:function(t){return o?void(o=v(!0,o,t)):(y(\"You have to initialize the \\\"Notiflix.Block\\\" module before call Merge function.\"),!1)},standard:function(t,e,i){Y(!0,b.Standard,t,e,i)},hourglass:function(t,e,i){Y(!0,b.Hourglass,t,e,i)},circle:function(t,e,i){Y(!0,b.Circle,t,e,i)},arrows:function(t,e,i){Y(!0,b.Arrows,t,e,i)},dots:function(t,e,i){Y(!0,b.Dots,t,e,i)},pulse:function(t,e,i){Y(!0,b.Pulse,t,e,i)},remove:function(t,e){\"number\"!=typeof e&&(e=0),Y(!1,null,t,null,null,e)}}};return\"object\"==typeof t.Notiflix?v(!0,t.Notiflix,{Notify:G.Notify,Report:G.Report,Confirm:G.Confirm,Loading:G.Loading,Block:G.Block}):{Notify:G.Notify,Report:G.Report,Confirm:G.Confirm,Loading:G.Loading,Block:G.Block}});","import { genreInfo } from './helpers';\nimport { filmBoxRef } from './helpers';\nimport { API } from './service';\nimport { storage } from './localStorage';\n\nexport function renderFilms(movies, movieListEl) {\n  movieListEl.innerHTML = movies\n    .map(movie => {\n      let genresList;\n      // Перевірка на існування жанрів\n      if (movie.genre_ids) {\n        if (movie.genre_ids.length > 3) {\n          genresList = parseGenres(movie.genre_ids).slice(0, 2);\n          genresList.push('Other');\n        } else {\n          genresList = parseGenres(movie.genre_ids);\n        }\n      } else if (movie.genres) {\n        if (movie.genres.length > 3) {\n          genresList = movie.genres.slice(0, 2);\n          genresList.push('Other');\n        } else {\n          genresList = movie.genres.map(genre => genre.name);\n        }\n      } else {\n        genresList = ['Another genre'];\n      }\n\n      // створення url постерів\n      const imgUrl = movie.poster_path\n        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        : 'https://myron5.github.io/goit-js-hw-07/кончене_фото.jpg';\n\n      // виділення року із дати\n      const date = movie.release_date\n        ? new Date(movie.release_date).getFullYear()\n        : '-';\n\n      // розмітка картки\n      return `\n                <li class=\"movie_card\" js-id=${movie.id}>\n                <div class=\"img__thumb\" style=\"background-image:url(${imgUrl})\"></div>\n                    <p class=\"movie_card_title\">${movie.original_title}</p>\n                    <div class=\"movie_card_desc\">\n                        <p class=\"movie_card_ganres\">${genresList.join(\n                          ', '\n                        )}</p>\n                        <p class=\"movie_card_year\">| ${date}</p>\n                        <span class=\"movie_card_rating\">${movie.vote_average.toFixed(\n                          2\n                        )}</span>\n                        </div>\n                </li>`;\n    })\n    .join('');\n}\n\nfunction parseGenres(genresIds) {\n  const genresInfo = JSON.parse(genreInfo);\n  let genresLists = [];\n  genresIds.length\n    ? genresIds.forEach(genre => {\n        genresLists.push(\n          genresInfo.genres.find(ganreInfo => ganreInfo.id === genre).name\n        );\n      })\n    : genresLists.push('Another genre');\n  return genresLists;\n}\n\nexport function pagination(activePage, totalPages) {\n  if (activePage == 1 && totalPages == 1) return [];\n\n  if (typeof totalPages !== 'number' || typeof activePage !== 'number') {\n    return;\n  }\n  if (totalPages < activePage || totalPages <= 0 || activePage <= 0) {\n    return;\n  }\n\n  if (totalPages === 1) {\n    return ['1active'];\n  }\n\n  const arr = [\n    activePage - 2,\n    activePage - 1,\n    activePage,\n    activePage + 1,\n    activePage + 2,\n  ];\n\n  const filteredArr = arr.filter(num => num > 1 && num < totalPages);\n  const newArr = [1, totalPages];\n\n  const includeThreeLeft = activePage === 5;\n  const includeThreeRight = activePage === totalPages - 4;\n  const includeLeftDots = activePage > 5;\n  const includeRightDots = activePage < totalPages - 4;\n\n  if (includeThreeLeft) filteredArr.unshift(2);\n  if (includeThreeRight) filteredArr.push(totalPages - 1);\n\n  if (includeLeftDots) {\n    filteredArr.unshift('...');\n    newArr.unshift('<-');\n  }\n\n  if (includeRightDots) {\n    filteredArr.push('...');\n    newArr.push('->');\n  }\n\n  if (newArr.includes('<-') || newArr.length === 4) {\n    newArr.splice(2, 0, ...filteredArr);\n  } else if (newArr.includes('->')) {\n    newArr.splice(1, 0, ...filteredArr);\n  } else {\n    newArr.splice(1, 0, ...filteredArr);\n  }\n\n  const result = newArr.map(el => {\n    if (typeof el === 'number') {\n      if (el === activePage) {\n        el = el + 'active';\n      }\n      el = String(el);\n    }\n    return el;\n  });\n\n  return result;\n}\n\nexport function renderPagination(paginationArr, filmBoxRef) {\n  const paginationUl = `<ul class=\"pagination\"></ul>`;\n  let paginationUlRef = document.querySelector('.pagination');\n  if (paginationUlRef) {\n    paginationUlRef.remove();\n  }\n\n  filmBoxRef.insertAdjacentHTML('afterend', paginationUl);\n  paginationUlRef = document.querySelector('.pagination');\n\n  const leftArrowMarkup = `\n    <li class=\"pagination__item item-left-arrow\">\n      <button  class=\"pagination__left-arrow pagination__link\" aria-label=\"left-arrow\">\n      </button>\n    </li>\n  `;\n  const rightArrowMarkup = `\n    <li class=\"pagination__right-arrow pagination__item item-right-arrow\"\">\n      <button  class=\"pagination__right-arrow pagination__link\" data=\"rightArrow\" aria-label=\"right-arrow>\n      </button>\n    </li>\n  `;\n\n  const numbersArr = paginationArr\n    .filter(el => Number.parseInt(el) === Number.parseInt(el))\n    .map(el => Number.parseInt(el));\n  const firstNumber = Math.min(...numbersArr);\n  const lastNumber = Math.max(...numbersArr);\n\n  paginationArr.forEach(page => {\n    if (page === '<-') {\n      paginationUlRef.insertAdjacentHTML('beforeend', leftArrowMarkup);\n    } else if (page === '->') {\n      paginationUlRef.insertAdjacentHTML('beforeend', rightArrowMarkup);\n    } else if (page.includes('active')) {\n      const updatedPageName = page.replace('active', '');\n      paginationUlRef.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"pagination__item pagination__item--isActive\">\n          <button class=\"pagination__link\" type=\"button\" aria-label=\"pagination-item\">${updatedPageName}</button>\n        </li>`\n      );\n    } else if (page === '...') {\n      paginationUlRef.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"pagination__item pagination__item--desktop pagination__item--dots\" >\n          <button class=\"pagination__link\" type=\"button\" aria-label=\"pagination-link\">${page}</button>\n        </li>\n        `\n      );\n    } else if (Number(page) === firstNumber || Number(page) === lastNumber) {\n      paginationUlRef.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"pagination__item pagination__item--desktop\">\n        <button class=\"pagination__link\" type=\"button\" aria-label=\"pagination-link\">${page}</button>\n        </li>\n        `\n      );\n    } else {\n      paginationUlRef.insertAdjacentHTML(\n        'beforeend',\n        `<li class=\"pagination__item\"><button class=\"pagination__link\" type=\"button\" aria-label=\"pagination-link\">${page}</button></li>`\n      );\n    }\n  });\n\n  paginationUlRef.addEventListener('click', checkCurrentPage);\n}\n\nfunction checkCurrentPage(evt) {\n  const navListRef = document.querySelector('.nav__list');\n  const el = [...navListRef.children].find(li => {\n    if (li.firstElementChild.classList.contains('current')) {\n      return li;\n    }\n  });\n  if (el.textContent === 'HOME') {\n    return listClickHandlerMain(evt);\n  }\n  if (filmBoxRef.dataset.id === 'watch-gallery') {\n    return listClickHandlerWatch(evt);\n  }\n  if (filmBoxRef.dataset.id === 'queue-gallery') {\n    return listClickHandlerQueue(evt);\n  }\n}\n\nfunction listClickHandlerMain(event) {\n  event.preventDefault();\n  const element = event.target;\n  const pageValue = event.target.textContent;\n  const trimedValue = pageValue.trim();\n\n  const searchQueryCheck = async () => {\n    let films;\n    if (!API.getSearchQuery()) films = await API.fetchPopularMovies();\n    else films = await API.fetchKeyword();\n    renderFilms(films, filmBoxRef);\n  };\n\n  if (element.classList[0] === 'pagination') {\n    return;\n  }\n\n  filmBoxRef.innerHTML = '';\n\n  if (trimedValue === pageValue) {\n    if (Number(pageValue) < API.getMax() + 1) {\n      API.setPage(Number(pageValue));\n      searchQueryCheck();\n    }\n  } else if (element.classList[0] === 'pagination__right-arrow') {\n    API.incrementPage();\n    searchQueryCheck();\n  } else {\n    API.decrementPage();\n    searchQueryCheck();\n  }\n\n  const paginationArr = pagination(API.getPage(), API.getMax());\n  renderPagination(paginationArr, filmBoxRef);\n}\n\nfunction listClickHandlerWatch(event) {\n  event.preventDefault();\n  const element = event.target;\n  const pageValue = event.target.textContent;\n  const trimedValue = pageValue.trim();\n\n  if (element.classList[0] === 'pagination') {\n    return;\n  }\n\n  filmBoxRef.innerHTML = '';\n\n  if (trimedValue === pageValue) {\n    if (Number(pageValue) < storage.getMaxWatch() + 1) {\n      (async () => {\n        storage.setPageWatch(Number(pageValue));\n        const films = await storage.getTwentyFromWatch();\n        renderFilms(films, filmBoxRef);\n      })();\n    }\n  } else if (element.classList[0] === 'pagination__right-arrow') {\n    (async () => {\n      storage.incrementPageWatch();\n      const films = await storage.getTwentyFromWatch();\n      renderFilms(films, filmBoxRef);\n    })();\n  } else {\n    (async () => {\n      storage.decrementPageWatch();\n      const films = await storage.getTwentyFromWatch();\n      renderFilms(films, filmBoxRef);\n    })();\n  }\n\n  const paginationArr = pagination(\n    storage.getPageWatch(),\n    storage.getMaxWatch()\n  );\n  renderPagination(paginationArr, filmBoxRef);\n}\n\nfunction listClickHandlerQueue(event) {\n  event.preventDefault();\n  const element = event.target;\n  const pageValue = event.target.textContent;\n  const trimedValue = pageValue.trim();\n\n  if (element.classList[0] === 'pagination') {\n    return;\n  }\n\n  filmBoxRef.innerHTML = '';\n\n  if (trimedValue === pageValue) {\n    if (Number(pageValue) < storage.getMaxQueue() + 1) {\n      (async () => {\n        storage.setPageQueue(Number(pageValue));\n        const films = await storage.getTwentyFromQueue();\n        renderFilms(films, filmBoxRef);\n      })();\n    }\n  } else if (element.classList[0] === 'pagination__right-arrow') {\n    (async () => {\n      storage.incrementPageQueue();\n      const films = await storage.getTwentyFromQueue();\n      renderFilms(films, filmBoxRef);\n    })();\n  } else {\n    (async () => {\n      storage.decrementPageQueue();\n      const films = await storage.getTwentyFromQueue();\n      renderFilms(films, filmBoxRef);\n    })();\n  }\n\n  const paginationArr = pagination(\n    storage.getPageQueue(),\n    storage.getMaxQueue()\n  );\n  renderPagination(paginationArr, filmBoxRef);\n}\n","import Notiflix from 'notiflix';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, get, set, ref } from 'firebase/database';\nimport { firebaseConfig } from './helpers';\n\nclass FilmsLocalStorage {\n  #WATCH_KEY;\n  #QUEUE_KEY;\n\n  #database;\n\n  constructor() {}\n\n  async resetConstructor() {\n    this.pageWatch = 1;\n    this.pageQueue = 1;\n\n    this.signIn = true;\n\n    const account = JSON.parse(localStorage.getItem('account'));\n    if (!account) {\n      Notiflix.Notify.warning('➡ You have to sign in first');\n      console.log('➡ You have to sign in first');\n      this.signIn = false;\n      return Promise.reject('fail');\n    }\n\n    this.uid = account.id;\n\n    this.#WATCH_KEY = /users/ + 'watch' + this.uid;\n    this.#QUEUE_KEY = /users/ + 'queue' + this.uid;\n\n    const app = initializeApp(firebaseConfig);\n    this.#database = getDatabase(app);\n\n    try {\n      const snapshotWatch = await get(ref(this.#database, this.#WATCH_KEY));\n      const snapshotQueue = await get(ref(this.#database, this.#QUEUE_KEY));\n\n      const filmsArrWatch = snapshotWatch.val() || [];\n      const filmsArrQueue = snapshotQueue.val() || [];\n\n      this.maxWatch = Math.ceil(filmsArrWatch.length / 20);\n      this.maxQueue = Math.ceil(filmsArrQueue.length / 20);\n    } catch (err) {\n      this.signIn = false;\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err.message);\n      return;\n    }\n\n    return Promise.resolve('sucess');\n  }\n\n  incrementPageWatch() {\n    if (this.pageWatch === this.maxWatch) {\n      return;\n    }\n    this.pageWatch += 1;\n  }\n\n  decrementPageWatch() {\n    if (this.pageWatch === 1) {\n      return;\n    }\n    this.pageWatch -= 1;\n  }\n\n  incrementPageQueue() {\n    if (this.pageQueue === this.maxQueue) {\n      return;\n    }\n    this.pageQueue += 1;\n  }\n\n  decrementPageQueue() {\n    if (this.pageQueue === 1) {\n      return;\n    }\n    this.pageQueue -= 1;\n  }\n\n  async getTwentyFromWatch() {\n    try {\n      const snapshot = await get(ref(this.#database, this.#WATCH_KEY));\n      const filmsArr = snapshot.val() || [];\n      const from = 20 * (this.pageWatch - 1);\n      const to = 20 * this.pageWatch - 1;\n      return filmsArr.slice(from, to);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async getTwentyFromQueue() {\n    try {\n      const snapshot = await get(ref(this.#database, this.#QUEUE_KEY));\n      const filmsArr = snapshot.val() || [];\n      const from = 20 * (this.pageQueue - 1);\n      const to = 20 * this.pageQueue - 1;\n      return filmsArr.slice(from, to);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async checkWatched(id) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#WATCH_KEY));\n      const filmsArr = snapshot.val() || [];\n\n      return filmsArr.some(film => film.id == id);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async checkQueue(id) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#QUEUE_KEY));\n      const filmsArr = snapshot.val() || [];\n\n      return filmsArr.some(film => film.id == id);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async addFilmToWatch(film) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#WATCH_KEY));\n      const filmsArr = snapshot.val() || [];\n\n      filmsArr.unshift(film);\n      set(ref(this.#database, this.#WATCH_KEY), filmsArr);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async addFilmToQueue(film) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#QUEUE_KEY));\n      const filmsArr = snapshot.val() || [];\n\n      filmsArr.unshift(film);\n      set(ref(this.#database, this.#QUEUE_KEY), filmsArr);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async delFilmFromWatch(id) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#WATCH_KEY));\n      let filmsArr = snapshot.val() || [];\n\n      filmsArr = filmsArr.filter(film => film.id != id);\n      set(ref(this.#database, this.#WATCH_KEY), filmsArr);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  async delFilmFromQueue(id) {\n    try {\n      const snapshot = await get(ref(this.#database, this.#QUEUE_KEY));\n      let filmsArr = snapshot.val() || [];\n\n      filmsArr = filmsArr.filter(film => film.id != id);\n      set(ref(this.#database, this.#QUEUE_KEY), filmsArr);\n    } catch (err) {\n      Notiflix.Notify.warning(\n        '👾 There is problem with Internet, try again later'\n      );\n      console.log(err);\n    }\n  }\n\n  setPageWatch(value) {\n    this.pageWatch = value;\n  }\n\n  setPageQueue(value) {\n    this.pageQueue = value;\n  }\n\n  getPageWatch() {\n    return this.pageWatch;\n  }\n\n  getPageQueue() {\n    return this.pageQueue;\n  }\n\n  getMaxWatch() {\n    return this.maxWatch;\n  }\n\n  getMaxQueue() {\n    return this.maxQueue;\n  }\n}\n\nlet storage;\n\nexport default (async () => {\n  storage = new FilmsLocalStorage();\n  await storage.resetConstructor();\n})();\n\nexport { storage };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _wrapNativeSuper;\nvar _construct = _interopRequireDefault(require(\"./_construct\"));\nvar _isNativeFunction = _interopRequireDefault(require(\"./_is_native_function\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _wrapNativeSuper(Class) {\n    return wrapNativeSuper(Class);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction wrapNativeSuper(Class1) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    wrapNativeSuper = function wrapNativeSuper(Class) {\n        if (Class === null || !(0, _isNativeFunction).default(Class)) return Class;\n        if (typeof Class !== \"function\") {\n            throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n        function Wrapper() {\n            return (0, _construct).default(Class, arguments, (0, _getPrototypeOf).default(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, {\n            constructor: {\n                value: Wrapper,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        return (0, _setPrototypeOf).default(Wrapper, Class);\n    };\n    return wrapNativeSuper(Class1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _construct;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _construct(Parent, args, Class) {\n    return construct.apply(null, arguments);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction construct(Parent1, args1, Class1) {\n    if (isNativeReflectConstruct()) {\n        construct = Reflect.construct;\n    } else {\n        construct = function construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) (0, _setPrototypeOf).default(instance, Class.prototype);\n            return instance;\n        };\n    }\n    return construct.apply(null, arguments);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeFunction;\nfunction _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\n  if (\n    typeof timeout === 'number' &&\n    // @ts-ignore Is only defined in Deno environments.\n    typeof Deno !== 'undefined' &&\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno['unrefTimer']\n  ) {\n    // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\n    Deno.unrefTimer(timeout);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } else if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false,\n    public readonly isUsingEmulator: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\n      this.myIFrame.doc.body.textContent = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APPLICATION_ID_PARAM,\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken,\n      applicationId\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string,\n    applicationId?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n    if (applicationId) {\n      urlParams[APPLICATION_ID_PARAM] = applicationId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      let options: { [k: string]: object };\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        options = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n      }\n      this.mySock = new WebSocketImpl(this.connURL, [], options);\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  // Keeps track of whether the TransportManager has already chosen a transport to use\n  static globalTransportInitialized_ = false;\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\n   * TransportManager has already set up transports_\n   */\n  static get IS_TRANSPORT_INITIALIZED() {\n    return this.globalTransportInitialized_;\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n      TransportManager.globalTransportInitialized_ = true;\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        const handshakePayload = {\n          ...(payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          })\n        };\n        if (this.repoInfo_.isUsingEmulator) {\n          // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\n          handshakePayload.h = this.repoInfo_.host;\n        }\n        this.onHandshake_(handshakePayload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent of (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      `listen() called twice for same path/queryId.`\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  private startIsInclusive_: boolean;\n\n  private endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    const isWithinStart = this.startIsInclusive_\n      ? this.index_.compare(this.getStartPost(), node) <= 0\n      : this.index_.compare(this.getStartPost(), node) < 0;\n    const isWithinEnd = this.endIsInclusive_\n      ? this.index_.compare(node, this.getEndPost()) <= 0\n      : this.index_.compare(node, this.getEndPost()) < 0;\n    return isWithinStart && isWithinEnd;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  private readonly startIsInclusive_: boolean;\n\n  private readonly endIsInclusive_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n    this.startIsInclusive_ = !params.startAfterSet_;\n    this.endIsInclusive_ = !params.endBeforeSet_;\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          if (!this.withinDirectionalStart(next)) {\n            // if we have not reached the start, skip to the next element\n            continue;\n          } else if (!this.withinDirectionalEnd(next)) {\n            // if we have reached the end, stop adding elements\n            break;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n        }\n\n        let count = 0;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          const inRange =\n            count < this.limit_ &&\n            this.withinDirectionalStart(next) &&\n            this.withinDirectionalEnd(next);\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n\n  private withinDirectionalStart = (node: NamedNode) =>\n    this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\n\n  private withinDirectionalEnd = (node: NamedNode) =>\n    this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\n\n  private withinStartPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      this.rangedFilter_.getStartPost(),\n      node\n    );\n    return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n\n  private withinEndPost = (node: NamedNode) => {\n    const compareRes = this.index_.compare(\n      node,\n      this.rangedFilter_.getEndPost()\n    );\n    return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_START_IS_INCLUSIVE = 'sin',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  INDEX_END_IS_INCLUSIVE = 'ein',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AFTER = 'startAfter',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  END_BEFORE = 'endBefore',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false; // can only be true if startSet_ is true\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false; // can only be true if endSet_ is true\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.startAfterSet_ = this.startAfterSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.endBeforeSet_ = this.endBeforeSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX || !!key) {\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    const startParam = queryParams.startAfterSet_\n      ? REST_QUERY_CONSTANTS.START_AFTER\n      : REST_QUERY_CONSTANTS.START_AT;\n    qs[startParam] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[startParam] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    const endParam = queryParams.endBeforeSet_\n      ? REST_QUERY_CONSTANTS.END_BEFORE\n      : REST_QUERY_CONSTANTS.END_AT;\n    qs[endParam] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[endParam] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE] =\n      !queryParams.startAfterSet_;\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE] =\n      !queryParams.endBeforeSet_;\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree: ImmutableTree<Node>;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === null;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\nexport function resetSyncTreeTag() {\n  syncTreeNextQueryTag_ = 1;\n}\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\n *  deduping needs to take place. This flag allows toggling of that behavior\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error,\n  skipListenerDedup = false\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n\n    if (!skipListenerDedup) {\n      /**\n       * We may have just removed one of many listeners and can short-circuit this whole process\n       * We may also not have removed a default listener, in which case all of the descendant listeners should already be\n       * properly set up.\n       */\n\n      // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n      // queryId === 'default'\n      const removingDefault =\n        -1 !==\n        removed.findIndex(query => {\n          return query._queryParams.loadsAllData();\n        });\n      const covered = syncTree.syncPointTree_.findOnPath(\n        path,\n        (relativePath, parentSyncPoint) =>\n          syncPointHasCompleteView(parentSyncPoint)\n      );\n\n      if (removingDefault && !covered) {\n        const subtree = syncTree.syncPointTree_.subtree(path);\n        // There are potentially child listeners. Determine what if any listens we need to send before executing the\n        // removal\n        if (!subtree.isEmpty()) {\n          // We need to fold over our subtree and collect the listeners to send\n          const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n          // Ok, we've collected all the listens we need. Set them up.\n          for (let i = 0; i < newViews.length; ++i) {\n            const view = newViews[i],\n              newQuery = view.query;\n            const listener = syncTreeCreateListenerForView_(syncTree, view);\n            syncTree.listenProvider_.startListening(\n              syncTreeQueryForListening_(newQuery),\n              syncTreeTagForQuery(syncTree, newQuery),\n              listener.hashFn,\n              listener.onComplete\n            );\n          }\n        }\n        // Otherwise there's nothing below us, so nothing we need to start listening on\n      }\n      // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n      // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n      // Also, note that if we have a cancelError, it's already been removed at the provider level.\n      if (!covered && removed.length > 0 && !cancelError) {\n        // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n        // default. Otherwise, we need to iterate through and cancel each individual query\n        if (removingDefault) {\n          // We don't tag default listeners\n          const defaultTag: number | null = null;\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(query),\n            defaultTag\n          );\n        } else {\n          removed.forEach((queryToRemove: QueryContext) => {\n            const tagToRemove = syncTree.queryToTagMap.get(\n              syncTreeMakeQueryKey_(queryToRemove)\n            );\n            syncTree.listenProvider_.stopListening(\n              syncTreeQueryForListening_(queryToRemove),\n              tagToRemove\n            );\n          });\n        }\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  skipSetupListener = false\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nexport function syncTreeTagForQuery(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { ValueEventRegistration } from '../api/Reference_impl';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration,\n  syncTreeTagForQuery\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will wait until the\n *  repo has established a connection and then request the value for `query`.\n * If the client is not able to retrieve the query result for another reason,\n * it reports an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: ValueEventRegistration\n): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload).withIndex(\n        query._queryParams.getIndex()\n      );\n      /**\n       * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\n       * Add an event registration,\n       * Update data at the path,\n       * Raise any events,\n       * Cleanup the SyncTree\n       */\n      syncTreeAddEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        true\n      );\n      let events: Event[];\n      if (query._queryParams.loadsAllData()) {\n        events = syncTreeApplyServerOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node\n        );\n      } else {\n        const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\n        events = syncTreeApplyTaggedQueryOverwrite(\n          repo.serverSyncTree_,\n          query._path,\n          node,\n          tag\n        );\n      }\n      /*\n       * We need to raise events in the scenario where `get()` is called at a parent path, and\n       * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\n       * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\n       * and its corresponding serverCache, including the child location where `onValue` is called. Then,\n       * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\n       * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\n       * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\n       * ensure the corresponding child events will get fired.\n       */\n      eventQueueRaiseEventsForChangedPath(\n        repo.eventQueue_,\n        query._path,\n        events\n      );\n      syncTreeRemoveEventRegistration(\n        repo.serverSyncTree_,\n        query,\n        eventRegistration,\n        null,\n        true\n      );\n      return node;\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathChild,\n  pathParent,\n  pathToUrlEncodedString,\n  pathIsEmpty\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  const callbackContext = new CallbackContext(() => {});\n  const container = new ValueEventRegistration(callbackContext);\n  return repoGetValue(query._repo, query, container).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\n * the respective `on*` callbacks.\n *\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value less than or equal\n * to the specified value and a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  warn,\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\nimport { BrowserPollConnection } from '../realtime/BrowserPollConnection';\nimport { TransportManager } from '../realtime/TransportManager';\nimport { WebSocketConnection } from '../realtime/WebSocketConnection';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams,\n    /*isUsingEmulator=*/ true\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\nfunction checkTransportInit() {\n  if (TransportManager.IS_TRANSPORT_INITIALIZED) {\n    warn(\n      'Transport has already been initialized. Please call this function before calling ref or setting up a listener'\n    );\n  }\n}\n\n/**\n * Force the use of websockets instead of longPolling.\n */\nexport function forceWebSockets() {\n  checkTransportInit();\n  BrowserPollConnection.forceDisallow();\n}\n\n/**\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\n */\nexport function forceLongPolling() {\n  checkTransportInit();\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  const db = _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n  if (!db._instanceStarted) {\n    const emulator = getDefaultEmulatorHostnameAndPort('database');\n    if (emulator) {\n      connectDatabaseEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","import Notiflix from 'notiflix';\n\nexport const spiner = {\n  options: {\n    svgSize: '90px',\n    svgColor: 'rgba(255, 0, 27, 1)',\n    messageFontSize: '16px',\n    messageColor: 'rgba(255, 0, 27, 1)'\n  },\n\n  start() {\n    return Notiflix.Loading.pulse('Searching films...', this.options);\n  },\n\n  stop() {\n    Notiflix.Loading.remove();\n  },\n};","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).basicLightbox=e()}}((function(){return function e(n,t,o){function r(c,u){if(!t[c]){if(!n[c]){var s=\"function\"==typeof require&&require;if(!u&&s)return s(c,!0);if(i)return i(c,!0);var a=new Error(\"Cannot find module '\"+c+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var l=t[c]={exports:{}};n[c][0].call(l.exports,(function(e){return r(n[c][1][e]||e)}),l,l.exports,e,n,t,o)}return t[c].exports}for(var i=\"function\"==typeof require&&require,c=0;c<o.length;c++)r(o[c]);return r}({1:[function(e,n,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.create=t.visible=void 0;var o=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=document.createElement(\"div\");return t.innerHTML=e.trim(),!0===n?t.children:t.firstChild},r=function(e,n){var t=e.children;return 1===t.length&&t[0].tagName===n},i=function(e){return null!=(e=e||document.querySelector(\".basicLightbox\"))&&!0===e.ownerDocument.body.contains(e)};t.visible=i;t.create=function(e,n){var t=function(e,n){var t=o('\\n\\t\\t<div class=\"basicLightbox '.concat(n.className,'\">\\n\\t\\t\\t<div class=\"basicLightbox__placeholder\" role=\"dialog\"></div>\\n\\t\\t</div>\\n\\t')),i=t.querySelector(\".basicLightbox__placeholder\");e.forEach((function(e){return i.appendChild(e)}));var c=r(i,\"IMG\"),u=r(i,\"VIDEO\"),s=r(i,\"IFRAME\");return!0===c&&t.classList.add(\"basicLightbox--img\"),!0===u&&t.classList.add(\"basicLightbox--video\"),!0===s&&t.classList.add(\"basicLightbox--iframe\"),t}(e=function(e){var n=\"string\"==typeof e,t=e instanceof HTMLElement==1;if(!1===n&&!1===t)throw new Error(\"Content must be a DOM element/node or string\");return!0===n?Array.from(o(e,!0)):\"TEMPLATE\"===e.tagName?[e.content.cloneNode(!0)]:Array.from(e.children)}(e),n=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==(e=Object.assign({},e)).closable&&(e.closable=!0),null==e.className&&(e.className=\"\"),null==e.onShow&&(e.onShow=function(){}),null==e.onClose&&(e.onClose=function(){}),\"boolean\"!=typeof e.closable)throw new Error(\"Property `closable` must be a boolean\");if(\"string\"!=typeof e.className)throw new Error(\"Property `className` must be a string\");if(\"function\"!=typeof e.onShow)throw new Error(\"Property `onShow` must be a function\");if(\"function\"!=typeof e.onClose)throw new Error(\"Property `onClose` must be a function\");return e}(n)),c=function(e){return!1!==n.onClose(u)&&function(e,n){return e.classList.remove(\"basicLightbox--visible\"),setTimeout((function(){return!1===i(e)||e.parentElement.removeChild(e),n()}),410),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))};!0===n.closable&&t.addEventListener(\"click\",(function(e){e.target===t&&c()}));var u={element:function(){return t},visible:function(){return i(t)},show:function(e){return!1!==n.onShow(u)&&function(e,n){return document.body.appendChild(e),setTimeout((function(){requestAnimationFrame((function(){return e.classList.add(\"basicLightbox--visible\"),n()}))}),10),!0}(t,(function(){if(\"function\"==typeof e)return e(u)}))},close:c};return u}},{}]},{},[1])(1)}));"],"names":["$ae8c5afe9bdbf343$var$asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","Object","defineProperty","module","exports","default","fn","self","this","args","arguments","apply","err","undefined","$21b983287c82ebd3$var$runtime","Op","prototype","hasOwn","hasOwnProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err1","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","type","call","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","value1","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","next1","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","object","key1","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","$e557ccdd676b3aa3$export$3e19533e42ad8f83","document","querySelector","$e557ccdd676b3aa3$export$b05b9f8fa6b90f25","$e557ccdd676b3aa3$export$20f2b929a61cd28d","$e557ccdd676b3aa3$export$619da3f694dfe612","$e557ccdd676b3aa3$export$fcc0626890c55730","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","$eZ7d6","parcelRequire","$99642ea117db2b5a$var$_API_KEY","WeakMap","$99642ea117db2b5a$var$_BASE_URL","$99642ea117db2b5a$export$2c4e825dc9120f87","FILMAPI","$parcel$interopDefault","$ap4QV","searchQuery","page","max","$2TvXO","_callee","resp","$ke5Oc","get","concat","$l3laP","_this","_ctx","data","total_pages","results","$6JpON","Notify","failure","t0","message","console","log","id","instance","Constructor","receiver","privateMap","descriptor","$f53a4d69b6afe126$var$_classExtractFieldDescriptor","$f53a4d69b6afe126$var$_classApplyDescriptorGet","$f53a4d69b6afe126$var$_interopRequireDefault","__esModule","action","has","$793000d113708ea6$var$_checkPrivateRedeclaration","set","privateCollection","$079e67eb86c7e3d6$var$_classExtractFieldDescriptor","$079e67eb86c7e3d6$var$_classApplyDescriptorSet","$079e67eb86c7e3d6$var$_interopRequireDefault","$32d4be7ebc0a0795$var$_defineProperties","target","props","protoProps","staticProps","Axios","AxiosError","CanceledError","isCancel","CancelToken","VERSION","all","Cancel","isAxiosError","spread","toFormData","AxiosHeaders","HttpStatusCode","formToJSON","mergeConfig","$c4C4W","$eb999ef253053d6e$var$axios","$eb999ef253053d6e$var$createInstance","defaultConfig","$9jbh3","$lGmLA","request","extend","allOwnKeys","instanceConfig","$knWMA","$c74ni","$dW1zJ","$77MZz","$lXDKh","$kLR29","$12Kat","$5TB86","promises","$9BdDr","$kv87N","$gHHim","thing","$gipWz","isHTMLForm","FormData","$5siR6","$eb999ef253053d6e$export$2e2bcd8739ae039","cache","$huWaY","$8ca3655f37d9652c$var$toString","toString","$8ca3655f37d9652c$var$getPrototypeOf","$8ca3655f37d9652c$var$kindOf","str","toLowerCase","$8ca3655f37d9652c$var$kindOfTest","$8ca3655f37d9652c$var$typeOfTest","$8ca3655f37d9652c$var$isArray","Array","isArray","$8ca3655f37d9652c$var$isUndefined","$8ca3655f37d9652c$var$isArrayBuffer","$8ca3655f37d9652c$var$isString","$8ca3655f37d9652c$var$isFunction","$8ca3655f37d9652c$var$isNumber","$8ca3655f37d9652c$var$isObject","$8ca3655f37d9652c$var$isPlainObject","$8ca3655f37d9652c$var$isDate","$8ca3655f37d9652c$var$isFile","$8ca3655f37d9652c$var$isBlob","$8ca3655f37d9652c$var$isFileList","$8ca3655f37d9652c$var$isURLSearchParams","$8ca3655f37d9652c$var$forEach","l","ref","_allOwnKeys","getOwnPropertyNames","len","$8ca3655f37d9652c$var$findKey","_key","$8ca3655f37d9652c$var$_global","window","$parcel$global","$8ca3655f37d9652c$var$isContextDefined","TypedArray","hasOwnProperty1","$8ca3655f37d9652c$var$isTypedArray","Uint8Array","$8ca3655f37d9652c$var$isHTMLForm","$8ca3655f37d9652c$var$hasOwnProperty","prop","$8ca3655f37d9652c$var$isRegExp","$8ca3655f37d9652c$var$reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","defineProperties","$8ca3655f37d9652c$var$ALPHA","$8ca3655f37d9652c$var$DIGIT","$8ca3655f37d9652c$var$ALPHABET","DIGIT","ALPHA","ALPHA_DIGIT","toUpperCase","$8ca3655f37d9652c$export$2e2bcd8739ae039","isArrayBuffer","isBuffer","isFormData","pattern","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isBoolean","isObject","isPlainObject","isUndefined","isDate","isFile","isBlob","isRegExp","isFunction","isStream","pipe","isURLSearchParams","isTypedArray","isFileList","merge","$8ca3655f37d9652c$var$merge","caseless","assignValue","targetKey","a","b","thisArg","trim","replace","stripBOM","content","charCodeAt","inherits","superConstructor","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","kindOf","kindOfTest","endsWith","searchString","position","String","lastIndex","indexOf","toArray","arr","forEachEntry","pair","matchAll","regExp","matches","exec","hasOwnProp","reduceDescriptors","freezeMethods","toObjectSet","arrayOrString","delimiter","split","toCamelCase","m","p1","p2","noop","toFiniteNumber","defaultValue","Number","isFinite","findKey","global","isContextDefined","ALPHABET","generateString","size","alphabet","Math","random","isSpecCompliantForm","append","toJSONObject","stack","visit","source","reducedValue","$fc8f2e2c969d032f$export$2e2bcd8739ae039","$ckB89","$6c6ea2375c06af66$var$validators","$9SeBc","validators","$6c6ea2375c06af66$var$Axios","defaults","interceptors","$JRZh2","response","configOrUrl","config","url","contextHeaders","transitional","paramsSerializer","headers","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","clarifyTimeoutError","encode","function","serialize","common","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","promise","responseInterceptorChain","chain","$k04r0","bind","newConfig","onFulfilled","onRejected","fullPath","$gYMA1","baseURL","$6d5Pb","params","generateHTTPMethod","isForm","$6c6ea2375c06af66$export$2e2bcd8739ae039","$4858799f155a4706$var$encode","encodeURIComponent","$4858799f155a4706$export$2e2bcd8739ae039","options","serializedParams","_encode","serializeFn","$8zJup","hashmarkIndex","$63e4e0dff2b7ef1a$var$encode","charMap","match","$63e4e0dff2b7ef1a$var$AxiosURLSearchParams","_pairs","$63e4e0dff2b7ef1a$var$prototype","encoder","map","join","$63e4e0dff2b7ef1a$export$2e2bcd8739ae039","$0c29ca57d54f85e9$var$isVisitable","$0c29ca57d54f85e9$var$removeBrackets","$0c29ca57d54f85e9$var$renderKey","path","dots","token","$0c29ca57d54f85e9$var$predicates","test","$0c29ca57d54f85e9$export$2e2bcd8739ae039","formData","$beknR","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","$0c29ca57d54f85e9$require$Buffer","from","JSON","stringify","some","$0c29ca57d54f85e9$var$isFlatArray","el","index","exposedHelpers","isVisitable","build","$44aee3fe793a4c74$var$AxiosError","code","captureStackTrace","toJSON","description","number","fileName","lineNumber","columnNumber","status","$44aee3fe793a4c74$var$prototype","$44aee3fe793a4c74$var$descriptors","customProps","axiosError","cause","$44aee3fe793a4c74$export$2e2bcd8739ae039","$82d0d0537dc0bac3$export$2e2bcd8739ae039","$24f87a6f86a8996f$export$a143d493d941bafc","$24f87a6f86a8996f$export$f99ded8fe4b79145","$7SURw","$24f87a6f86a8996f$var$customInspectSymbol","$24f87a6f86a8996f$var$Buffer","$24f87a6f86a8996f$var$K_MAX_LENGTH","$24f87a6f86a8996f$var$createBuffer","RangeError","buf","encodingOrOffset","$24f87a6f86a8996f$var$allocUnsafe","$24f87a6f86a8996f$var$from","string","encoding","isEncoding","$24f87a6f86a8996f$var$byteLength","actual","write","$24f87a6f86a8996f$var$fromString","arrayView","$24f87a6f86a8996f$var$isInstance","copy","$24f87a6f86a8996f$var$fromArrayBuffer","byteOffset","byteLength","$24f87a6f86a8996f$var$fromArrayLike","$24f87a6f86a8996f$var$fromArrayView","SharedArrayBuffer","valueOf","$24f87a6f86a8996f$var$checked","$24f87a6f86a8996f$var$numberIsNaN","$24f87a6f86a8996f$var$fromObject","toPrimitive","$24f87a6f86a8996f$var$assertSize","array","mustMatch","loweredCase","$24f87a6f86a8996f$var$utf8ToBytes","$24f87a6f86a8996f$var$base64ToBytes","$24f87a6f86a8996f$var$slowToString","start","end","$24f87a6f86a8996f$var$hexSlice","$24f87a6f86a8996f$var$utf8Slice","$24f87a6f86a8996f$var$asciiSlice","$24f87a6f86a8996f$var$latin1Slice","$24f87a6f86a8996f$var$base64Slice","$24f87a6f86a8996f$var$utf16leSlice","$24f87a6f86a8996f$var$swap","n","$24f87a6f86a8996f$var$bidirectionalIndexOf","dir","$24f87a6f86a8996f$var$arrayIndexOf","lastIndexOf","i1","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","$24f87a6f86a8996f$var$hexWrite","offset","remaining","strLen","parsed","parseInt","substr","$24f87a6f86a8996f$var$utf8Write","$24f87a6f86a8996f$var$blitBuffer","$24f87a6f86a8996f$var$asciiWrite","byteArray","$24f87a6f86a8996f$var$asciiToBytes","$24f87a6f86a8996f$var$base64Write","$24f87a6f86a8996f$var$ucs2Write","units","c","hi","lo","$24f87a6f86a8996f$var$utf16leToBytes","$5d11t","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$24f87a6f86a8996f$var$MAX_ARGUMENTS_LENGTH","fromCharCode","$24f87a6f86a8996f$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","$24f87a6f86a8996f$var$typedArraySupport","poolSize","alloc","fill","$24f87a6f86a8996f$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","_arr","ret","out","$24f87a6f86a8996f$var$hexSliceLookupTable","bytes","$24f87a6f86a8996f$var$checkOffset","ext","$24f87a6f86a8996f$var$checkInt","$24f87a6f86a8996f$var$wrtBigUInt64LE","$24f87a6f86a8996f$var$checkIntBI","BigInt","$24f87a6f86a8996f$var$wrtBigUInt64BE","$24f87a6f86a8996f$var$checkIEEE754","$24f87a6f86a8996f$var$writeFloat","littleEndian","noAssert","$7rddL","$24f87a6f86a8996f$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$24f87a6f86a8996f$var$defineBigIntMethod","$24f87a6f86a8996f$var$validateNumber","first","last","$24f87a6f86a8996f$var$boundsError","pow","readBigUInt64BE","readIntLE","byteLength3","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","limit","sub","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$24f87a6f86a8996f$var$errors","$24f87a6f86a8996f$var$E","sym","getMessage","Base1","Base","NodeError","$24f87a6f86a8996f$var$addNumericalSeparator","byteLength10","range","ERR_OUT_OF_RANGE","byteLength9","$24f87a6f86a8996f$var$checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","$24f87a6f86a8996f$var$INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","$24f87a6f86a8996f$var$base64clean","src","dst","table","i16","$24f87a6f86a8996f$var$BufferBigIntNotDefined","ReferenceError","subClass","superClass","$ea999e54d63b9fed$var$_setPrototypeOf","$c3d80abbfd70d12c$var$setPrototypeOf","o1","o","p","Derived","hasNativeReflectConstruct","$855b36f50a6c6de1$var$_isNativeReflectConstruct","Super","$855b36f50a6c6de1$var$_getPrototypeOf","NewTarget","Reflect","construct","$855b36f50a6c6de1$var$_possibleConstructorReturn","$855b36f50a6c6de1$var$_interopRequireDefault","sham","Proxy","Boolean","$ad63cc2a3a81f6ca$var$getPrototypeOf","$0d57ba155beab3c9$var$_typeOf","$0d57ba155beab3c9$var$_assertThisInitialized","$0d57ba155beab3c9$var$_interopRequireDefault","$3caef5c332c7293f$export$d622b2ad8d90c771","$3caef5c332c7293f$export$6100ba28696e12de","b64","tmp","lens","$3caef5c332c7293f$var$getLens","validLen","placeHoldersLen","$3caef5c332c7293f$var$Arr","$3caef5c332c7293f$var$_byteLength","curByte","len2","$3caef5c332c7293f$var$revLookup","uint8","len3","extraBytes","parts","maxChunkLength","i3","$3caef5c332c7293f$var$encodeChunk","$3caef5c332c7293f$var$lookup","$3caef5c332c7293f$var$code","$3caef5c332c7293f$var$i","$3caef5c332c7293f$var$len","len1","num","output","i2","$56a54f6ebabce67d$export$aafa59e2e03f2942","$56a54f6ebabce67d$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","LN2","$089e14d5c08cea15$export$2e2bcd8739ae039","InterceptorManager","handlers","h","$jrAxF","$03c1ec60679d4a92$var$throwIfCancellationRequested","cancelToken","throwIfRequested","signal","aborted","$03c1ec60679d4a92$export$2e2bcd8739ae039","transformRequest","setContentType","$fA43c","getAdapter","adapter","transformResponse","reason","$e27ce2658796d30f$export$2e2bcd8739ae039","fns","normalize","$8d19883a18ea96be$var$DEFAULT_CONTENT_TYPE","$8d19883a18ea96be$var$defaults","$gWbUy","contentType","getContentType","hasJSONContentType","isObjectPayload","$4ue3z","formSerializer","_FormData","env","rawValue","parser","parse","$8d19883a18ea96be$var$stringifySafely","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","$d0XKg","classes","validateStatus","Accept","$8d19883a18ea96be$export$2e2bcd8739ae039","$c54b4d6d29e2eb6b$export$2e2bcd8739ae039","$3444de215011fd2b$export$2e2bcd8739ae039","URLSearchParams","helpers","isNode","product","$i5Hs4","$97999e9cdfd9bdaf$var$isStandardBrowserEnv","navigator","$97999e9cdfd9bdaf$var$isStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","$97999e9cdfd9bdaf$export$2e2bcd8739ae039","isBrowser","$aIGDF","isStandardBrowserEnv","isStandardBrowserWebWorkerEnv","protocols","$d2ba66411c13cc9b$export$2e2bcd8739ae039","$7cdf1698dc68a071$export$2e2bcd8739ae039","$bdd273a6ec9f935e$export$2e2bcd8739ae039","buildPath","isNumericKey","isLast","$bdd273a6ec9f935e$var$arrayToObject","entries","$bdd273a6ec9f935e$var$parsePropPath","$c2923f037e2bae4f$var$$internals","$c2923f037e2bae4f$var$normalizeHeader","header","$c2923f037e2bae4f$var$normalizeValue","$c2923f037e2bae4f$var$matchHeaderValue","$c2923f037e2bae4f$var$_iterator","$c2923f037e2bae4f$var$_toStringTag","$c2923f037e2bae4f$var$AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","$1nUSP","tokens","tokensRE","$c2923f037e2bae4f$var$parseTokens","matcher","deleted","deleteHeader","format","normalized","w","char","$c2923f037e2bae4f$var$formatHeader","_len","targets","_constructor","$jiX0X","asStrings","param","_param","computed","accessors","defineAccessor","accessorName","arg1","arg2","arg3","$c2923f037e2bae4f$var$buildAccessors","accessor","$c2923f037e2bae4f$export$2e2bcd8739ae039","$6294f48b50226dd0$var$_arrayWithHoles","$6294f48b50226dd0$var$_iterableToArray","$6294f48b50226dd0$var$_unsupportedIterableToArray","$6294f48b50226dd0$var$_nonIterableRest","$6294f48b50226dd0$var$_interopRequireDefault","minLen","$bf515072141bb8c7$var$_arrayLikeToArray","arr2","$e0dd79cfaab42d97$var$_arrayWithoutHoles","$e0dd79cfaab42d97$var$_iterableToArray","$e0dd79cfaab42d97$var$_unsupportedIterableToArray","$e0dd79cfaab42d97$var$_nonIterableSpread","$e0dd79cfaab42d97$var$_interopRequireDefault","$988c96d167472226$var$_arrayLikeToArray","$102410410d0dc09d$var$ignoreDuplicateOf","$102410410d0dc09d$export$2e2bcd8739ae039","rawHeaders","line","substring","$ffcdf0443516cf49$export$2e2bcd8739ae039","__CANCEL__","$a251e9fa67c89486$var$CanceledError","ERR_CANCELED","$a251e9fa67c89486$export$2e2bcd8739ae039","$b57d5c296e05dd0f$var$knownAdapters","http","xhr","$btSY7","$b57d5c296e05dd0f$export$2e2bcd8739ae039","adapters","nameOrAdapter","$85bd0ac91b9e9771$var$progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","$dSDGE","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","$85bd0ac91b9e9771$export$2e2bcd8739ae039","XMLHttpRequest","onCanceled","requestData","requestHeaders","unsubscribe","removeEventListener","auth","username","password","unescape","btoa","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","$j97bH","open","onreadystatechange","readyState","responseURL","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","withCredentials","$9jFfm","$jFG8L","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","protocol","$4ULKu","ERR_BAD_REQUEST","send","$df046ee58fb378eb$export$2e2bcd8739ae039","$e52288d5ced91a0f$export$2e2bcd8739ae039","expires","domain","secure","cookie","Date","toGMTString","RegExp","decodeURIComponent","remove","now","$7xjuH","$c5c7eeec01fb8b89$export$2e2bcd8739ae039","requestedURL","$ftRZn","$57cabc98a428ac0d$export$2e2bcd8739ae039","$b453718e09262365$export$2e2bcd8739ae039","relativeURL","$6c85e22328488296$export$2e2bcd8739ae039","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","host","search","hash","hostname","port","pathname","location","requestURL","$39416e5131ec2dd8$export$2e2bcd8739ae039","$a1af1a7f806b22ba$export$2e2bcd8739ae039","samplesCount","firstSampleTS","timestamps","head","tail","chunkLength","startedAt","bytesCount","passed","round","$ed738da9502ca495$var$headersToObject","$ed738da9502ca495$export$2e2bcd8739ae039","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","$73047b42f9e782d3$var$validators","$73047b42f9e782d3$var$deprecatedWarnings","validator","version","formatMessage","opt","opts","ERR_DEPRECATED","warn","$73047b42f9e782d3$export$2e2bcd8739ae039","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","$f1f155cc89389bcb$export$a4ad2735b021c132","$52ff30ac6ac58fe8$export$2e2bcd8739ae039","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","$6fd2256c627864a1$export$2e2bcd8739ae039","callback","$eecd01492f51a517$export$2e2bcd8739ae039","payload","$8sKqN","$3f8e319a46440ea5$var$HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","$3f8e319a46440ea5$export$2e2bcd8739ae039","t","t1","e1","a1","n1","r1","s1","l1","m1","wrapID","overlayID","width","distance","opacity","borderRadius","rtl","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","warning","c1","backgroundColor","backOverlayClickToClose","svgSize","titleFontSize","titleMaxLength","messageFontSize","buttonFontSize","buttonMaxLength","svgColor","titleColor","messageColor","buttonBackground","buttonColor","f1","d1","buttonsFontSize","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","x1","g1","customSvgUrl","customSvgCode","messageID","b1","u1","querySelectorLimit","y1","k1","h1","getElementById","innerHTML","appendChild","v","_$t","a2","N","textContent","innerText","W1","I1","R1","A1","M","B","D1","T1","F1","r","G","init","f","toLocaleLowerCase","style","zIndex","left","top","right","bottom","margin","classList","add","maxHeight","display","flexWrap","flexDirection","justifyContent","alignItems","pointerEvents","height","animationDuration","body","g","color","u","insertBefore","firstChild","k","C","z","childElementCount","clearTimeout","S","parentNode","removeChild","W","I","R","querySelectorAll","A","E1","j1","Report","C1","z1","S1","L1","_$e","_$a","O1","H1","Confirm","padding","ceil","L","focus","setSelectionRange","_$i","preventDefault","keyCode","dispatchEvent","Event","stopPropagation","returnValue","cancelBubble","_$n","P1","U1","Loading","X1","innerWidth","q1","Q","Y","e2","isPrototypeOf","NodeList","Block","X","tagName","D","T","F","E","q","O","getComputedStyle","getPropertyValue","H","P","V","offsetHeight","getAttribute","Y1","K","$","J","createRange","selectNode","Z","createContextualFragment","_","tt","et","it","show","ask","prompt","standard","hourglass","circle","arrows","pulse","custom","notiflix","change","getElementsByTagName","V1","Notiflix","amd","$e3975c65ac1978f6$export$e98cbe51299acd52","movies","movieListEl","movie","genresList","genre_ids","$e3975c65ac1978f6$var$parseGenres","genres","genre","imgUrl","poster_path","date","release_date","getFullYear","original_title","vote_average","toFixed","genresIds","genresInfo","$jGMOa","genreInfo","genresLists","find","ganreInfo","$e3975c65ac1978f6$export$22fa394f3ba39578","activePage","totalPages","_newArr","_newArr1","_newArr2","filteredArr","newArr","includeThreeRight","includeLeftDots","includeRightDots","$e3975c65ac1978f6$export$825408fbca4f2040","paginationArr","filmBoxRef1","_Math","_Math1","paginationUlRef","insertAdjacentHTML","numbersArr","firstNumber","lastNumber","updatedPageName","$e3975c65ac1978f6$var$checkCurrentPage","evt","navListRef","children","li","firstElementChild","contains","element","pageValue","trimedValue","searchQueryCheck","films","$dauUa","API","getSearchQuery","fetchPopularMovies","fetchKeyword","filmBoxRef","getMax","setPage","incrementPage","decrementPage","getPage","$e3975c65ac1978f6$var$listClickHandlerMain","dataset","$aNvF6","storage","getMaxWatch","setPageWatch","getTwentyFromWatch","incrementPageWatch","decrementPageWatch","getPageWatch","$e3975c65ac1978f6$var$listClickHandlerWatch","getMaxQueue","setPageQueue","getTwentyFromQueue","incrementPageQueue","decrementPageQueue","getPageQueue","$e3975c65ac1978f6$var$listClickHandlerQueue","$7dc70a60b14b9a4a$export$ddcffe0146c8f882","$7dc70a60b14b9a4a$var$_WATCH_KEY","$7dc70a60b14b9a4a$var$_QUEUE_KEY","$7dc70a60b14b9a4a$var$_database","$7dc70a60b14b9a4a$var$FilmsLocalStorage","FilmsLocalStorage","account","app","snapshotWatch","snapshotQueue","filmsArrWatch","filmsArrQueue","pageWatch","pageQueue","signIn","localStorage","getItem","uid","$MjY8E","initializeApp","firebaseConfig","$eA2L7","getDatabase","maxWatch","maxQueue","snapshot","filmsArr","to","film","$7dc70a60b14b9a4a$export$2e2bcd8739ae039","resetConstructor","container","PlatformLoggerServiceImpl","$4mzug","getProviders","provider","$0913f93b5b3c9bac$var$isVersionServiceProvider","$0913f93b5b3c9bac$var$_obj","$0913f93b5b3c9bac$var$logger","$kZfxc","Logger","$0913f93b5b3c9bac$export$9f30fa0c10967f7f","$0913f93b5b3c9bac$var$PLATFORM_LOG_STRING","$ikNsj","$0913f93b5b3c9bac$var$name$o","Map","component","debug","addOrOverwriteComponent","componentName","_didIteratorError","_iteratorError","$0913f93b5b3c9bac$export$fa5244b94c62d36a","$0913f93b5b3c9bac$export$fa0d6da0f5838f50","name1","getProvider","getImmediate","optional","heartbeatController","triggerHeartbeat","$0913f93b5b3c9bac$export$48d18de2ff1c45a5","name2","clearInstance","instanceIdentifier","$0913f93b5b3c9bac$export$3685d89b9c3cdfaf","$0913f93b5b3c9bac$var$ERROR_FACTORY","$2xDiJ","ErrorFactory","$0913f93b5b3c9bac$var$ERRORS","FirebaseAppImpl","_isDeleted","automaticDataCollectionEnabled","_automaticDataCollectionEnabled","checkDestroyed","_options","_config","_container","setLogLevelImpl","appName","name3","$6ExWU","ComponentContainer","_step","_iterator","$0913f93b5b3c9bac$export$9566bce3835c0f28","_iteratorNormalCompletion","return","newApp","$0913f93b5b3c9bac$export$f9962582c9e66d99","name5","$0913f93b5b3c9bac$export$b4e3c36c855b14b5","$0913f93b5b3c9bac$export$c55cfd413944906d","name6","delete","Component","library","$0913f93b5b3c9bac$var$STORE_NAME","$ajgRO","openDB","db","oldVersion","createObjectStore","idbGetError","transaction","objectStore","$0913f93b5b3c9bac$var$computeKey","$0913f93b5b3c9bac$var$_writeHeartbeatsToIndexedDB","heartbeatObject","FirebaseError","_storage","agent","platformLogger","getPlatformInfoString","$0913f93b5b3c9bac$var$getUTCDateString","_heartbeatsCache","hbTimestamp","singleDateHeartbeat","overwrite","heartbeatsToSend","unsentEntries","headerString","instanceFactory","multipleInstances","onInstanceCreated","Provider","identifier","instancesDeferred","normalizedIdentifier","deferred","Deferred","isInitialized","shouldAutoInitialize","_a","getOrInitializeService","instancesOptions","instances","services","service","INTERNAL","_delete","$4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME","normalizeInstanceIdentifier","isComponentSet","instanceDeferred","normalizedDeferredIdentifier","existingCallbacks","onInitCallbacks","Set","existingInstance","callbacks","invokeOnInitCallbacks","$1d9d263a787f8021$export$588c7fdda06fbb0a","assertion","$1d9d263a787f8021$export$a39cad550e7ab28a","$1d9d263a787f8021$var$stringToByteArray$1","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","byteToCharMapWebSafe_","byteToCharMap_","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","decodeString","stringToByteArray","c2","c22","c31","$1d9d263a787f8021$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charToByteMap_","byte4","ENCODED_VALS","ENCODED_VALS_WEBSAFE","utf8Bytes","$1d9d263a787f8021$export$c62426fdd000a97e","$1d9d263a787f8021$export$b3b2de96497acc47","$1d9d263a787f8021$export$6c40052bed430212","$1d9d263a787f8021$export$54e9fb29908872fa","getTime","$1d9d263a787f8021$var$getDefaultsFromGlobal","$1d9d263a787f8021$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$1d9d263a787f8021$export$212bb2fc580a90a8","$1d9d263a787f8021$var$getDefaultsFromEnvVariable","decoded","$1d9d263a787f8021$var$getDefaultsFromCookie","productName","$1d9d263a787f8021$export$a3febcf1f14a3a0c","$1d9d263a787f8021$export$9c11895284c8adad","separatorIndex","$1d9d263a787f8021$export$3dfb6827a9f89756","$1d9d263a787f8021$export$5539a1a3afe87d6","$1d9d263a787f8021$export$85f6557964517f1a","project","user_id","firebase","sign_in_provider","identities","$1d9d263a787f8021$export$4b5284a3025a455","$1d9d263a787f8021$export$872f8323f01d7ae0","$1d9d263a787f8021$export$c36915b22ce77c19","$1d9d263a787f8021$export$8ee0fc9ee280b4ee","forceEnvironment","process","$1d9d263a787f8021$export$4e09c449d6c407f7","$1d9d263a787f8021$export$caa8774a9107a58e","runtime","chrome","browser","$1d9d263a787f8021$export$f7a1e23e542d38e3","$1d9d263a787f8021$export$7e7b1a9668aaed8","ua","indexedDB","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","Error1","$k8LMu","$brQQZ","customData","_super","$i5Bs3","$1d9d263a787f8021$export$3fa6e1b18a3b2d40","errors","fullCode","template","$1d9d263a787f8021$var$replaceTemplate","fullMessage","serviceName","$1d9d263a787f8021$var$PATTERN","$1d9d263a787f8021$export$c5a53ce6a17cf18d","signature","claims","$1d9d263a787f8021$export$2f872c0f2117be69","$1d9d263a787f8021$export$2344b14b097df817","$1d9d263a787f8021$export$871de8747c9eaa88","contextObj","$1d9d263a787f8021$export$9cb4719e2e525b7a","aKeys","bKeys","aProp","bProp","$1d9d263a787f8021$var$isObject","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","$1d9d263a787f8021$export$ac4103b836844853","querystringParams","_step2","_loop","arrayVal","Class","$d2b5beb4f05da365$var$wrapNativeSuper","$d2b5beb4f05da365$var$_construct","$d2b5beb4f05da365$var$_interopRequireDefault","$d2b5beb4f05da365$var$_isNativeFunction","$d2b5beb4f05da365$var$_getPrototypeOf","$d2b5beb4f05da365$var$_setPrototypeOf","Class1","_cache","Wrapper","Parent","$5fca967b7da388be$var$construct","$5fca967b7da388be$var$_setPrototypeOf","$5fca967b7da388be$var$isNativeReflectConstruct","Parent1","args1","$4acf49f6c3e67aec$var$cachedSetTimeout","$4acf49f6c3e67aec$var$cachedClearTimeout","$4acf49f6c3e67aec$var$process","$4acf49f6c3e67aec$var$defaultSetTimout","$4acf49f6c3e67aec$var$defaultClearTimeout","$4acf49f6c3e67aec$var$runTimeout","fun","$4acf49f6c3e67aec$var$currentQueue","$4acf49f6c3e67aec$var$queue","$4acf49f6c3e67aec$var$draining","$4acf49f6c3e67aec$var$queueIndex","$4acf49f6c3e67aec$var$cleanUpNextTick","$4acf49f6c3e67aec$var$drainQueue","run","marker","$4acf49f6c3e67aec$var$runClearTimeout","$4acf49f6c3e67aec$var$Item","$4acf49f6c3e67aec$var$noop","nextTick","title","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","$f4758df7279d6c6a$export$243e62d78d3b544d","LogLevel1","$f4758df7279d6c6a$var$instances","DEBUG","VERBOSE","INFO","WARN","ERROR","logType","logLevel","$f4758df7279d6c6a$var$ConsoleMethod","_console","_logLevel","$f4758df7279d6c6a$var$defaultLogLevel","$f4758df7279d6c6a$var$defaultLogHandler","_userLogHandler","$f4758df7279d6c6a$var$levelStringToEnum","_logHandler","$7818c326be87ea84$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","openPromise","$kKOTz","newVersion","$7818c326be87ea84$var$readMethods","$7818c326be87ea84$var$writeMethods","$7818c326be87ea84$var$cachedMethods","$7818c326be87ea84$var$getMethod","IDBDatabase","targetFuncName","useIndex","isWrite","IDBIndex","IDBObjectStore","storeName","_target","tx","_$target","_args","store","shift","oldTraps","$6yUTD","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","$4c720d7d5f83aa21$var$_defineProperty","$f1bf9542bc9ee5ed$var$idbProxyableTypes","$f1bf9542bc9ee5ed$var$cursorAdvanceMethods","$f1bf9542bc9ee5ed$var$cursorRequestMap","$f1bf9542bc9ee5ed$var$transactionDoneMap","$f1bf9542bc9ee5ed$var$transactionStoreNamesMap","$f1bf9542bc9ee5ed$var$transformCache","$f1bf9542bc9ee5ed$export$407448d2b89b1813","$f1bf9542bc9ee5ed$var$idbProxyTraps","IDBTransaction","objectStoreNames","$f1bf9542bc9ee5ed$export$efccba1c4a2ef57b","$f1bf9542bc9ee5ed$export$43caf9889c228507","$f1bf9542bc9ee5ed$var$wrapFunction","func","IDBCursor","advance","continue","continuePrimaryKey","$f1bf9542bc9ee5ed$export$3b14a55fb2447963","storeNames","_func","sort","$f1bf9542bc9ee5ed$var$transformCachableValue","unlisten","DOMException","$f1bf9542bc9ee5ed$var$cacheDonePromiseForTransaction","IDBRequest","newValue","$a9d69158b154a93b$var$SDK_VERSION","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","$a9d69158b154a93b$var$MemoryStorage","MemoryStorage","cache_","isInMemoryStorage","$a9d69158b154a93b$var$createStoragefor","domStorageName","domStorage","$a9d69158b154a93b$var$DOMStorageWrapper","$a9d69158b154a93b$var$PersistentStorage","$a9d69158b154a93b$var$SessionStorage","sha11","digest","base64","sha1Bytes","varArgs","$a9d69158b154a93b$var$buildLogMessage_","$a9d69158b154a93b$var$logger","$a9d69158b154a93b$var$enableLogging$1","logger_","persistent","assert","$a9d69158b154a93b$var$logClient","LogLevel","$a9d69158b154a93b$var$log","$a9d69158b154a93b$var$firstLog_","$a9d69158b154a93b$var$logWrapper","prefix","$a9d69158b154a93b$var$error","$a9d69158b154a93b$var$fatal","$a9d69158b154a93b$var$isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","$a9d69158b154a93b$var$MIN_NAME","$a9d69158b154a93b$var$MAX_NAME","$a9d69158b154a93b$var$nameCompare","bAsInt","$a9d69158b154a93b$var$stringCompare","$a9d69158b154a93b$var$ObjectToUniqueKey","segsize","ln","bias","hexByte","time","Deno","unrefTimer","appName_","appCheckProvider","AppCheckTokenProvider","forceRefresh","appCheck","getToken","_this1","addTokenListener","$a9d69158b154a93b$var$warn","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","_this2","addAuthTokenListener","removeAuthTokenListener","errorMessage","$a9d69158b154a93b$var$EmulatorTokenProvider","EmulatorTokenProvider","accessToken","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","RepoInfo","_host","internalHost","_domain","newHost","isCacheableHost","query2","repoInfo","connURL","$a9d69158b154a93b$var$LONG_POLLING","isCustomHost","pairs","StatsCollection","amount","counters_","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","responseNum","onClose","requestNum","toProcess","$a9d69158b154a93b$var$exceptionGuard","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","BrowserPollConnection","bytesSent","$a9d69158b154a93b$var$statsManagerGetCollection","_this4","curSegmentNum","onDisconnect_","onDisconnect1","myPacketOrderer","$a9d69158b154a93b$var$PacketReceiver","onMessage","isClosed_","onClosed_","isNodeSdk","called","wrappedFn","attachEvent","_this3","command","incrementIncomingBytes_","scriptTagHolder","connectTimeoutTimer_","everConnected_","$a9d69158b154a93b$var$FIREBASE_LONGPOLL_START_PARAM","sendNewPolls","closeAfter","handleResponse","pN","urlParams","$a9d69158b154a93b$var$PROTOCOL_VERSION","connectURL","urlFn","log_","addTag","startLongPoll","addDisconnectPingFrame","myDisconnFrame","shutdown_","dataStr","stats_","incrementCounter","base64data","base64Encode","dataSegs","$a9d69158b154a93b$var$splitStringBySize","$a9d69158b154a93b$var$MAX_URL_DATA_SIZE","enqueueSegment","pw","bytesReceived","forceAllow_","forceDisallow_","FirebaseIFrameScriptHolder","commandCB","onMessageCB","onDisconnect2","currentSerial","uniqueCallbackIdentifier","myIFrame","createIFrame_","script","iframeContents","doc","alive","onDisconnect3","onDisconnect","myPW","newRequest_","outstandingRequests","pendingSegs","theURL","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","serial","doNewRequest","keepaliveTimeout","loadCB","_this5","newScript","onload","rstate","iframe","contentWindow","contentDocument","$a9d69158b154a93b$var$WebSocketImpl","MozWebSocket","WebSocket","connectionURL_","nodeAdmin","WebSocketConnection","onDisconnect4","device","$6qd2L","platform","proxy","origin","mySock","onopen","onclose","handleIncomingFrame","frames","totalFrames","fullMess","jsonMess","jsonEval","frameCount","handleNewFrameCount_","mess","appendFrame_","remainingData","extractFrameCount_","resetKeepAlive","sendString_","keepaliveTimer","clearInterval","setInterval","isOldAndroid","oldAndroidMatch","parseFloat","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","isWebSocketsAvailable","isSkipPollConnection","transports_","$a9d69158b154a93b$var$WebSocketConnection","ALL_TRANSPORTS","globalTransportInitialized_","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","Connection","state_","conn_","conn","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","isHealthy_","healthyTimeoutMS","healthyTimeout_","$a9d69158b154a93b$var$setTimeoutNonBlocking","markConnectionHealthy","everConnected","onConnectionLost_","secondaryConn_","rx_","onPrimaryMessageReceived_","dataMsg","sendData_","tx_","controlData","cmd","secondaryResponsesRequired_","upgradeIfSecondaryHealthy_","parsedData","layer","$a9d69158b154a93b$var$requireKey","onSecondaryControl_","pendingDataMessages","proceedWithUpgrade_","tryCleanupConnection","onControl_","onDataMessage_","handshakePayload","onConnectionShutdown_","onPrimaryResponse_","sendPingOnPrimaryIfNecessary_","sessionId","handshake","onConnectionEstablished_","timestamp","version2","transportManager_","upgradeTransport","startUpgrade_","onDisconnect5","closeConnections_","start_","ServerActions","pathString","onComplete","stats","allowedEvents_","EventEmitter","eventType","listeners_","validateEventType_","eventData","getInitialEvent","OnlineMonitor","online_","isMobileCordova","trigger","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","Path","begin","pieces","childPathObj","$a9d69158b154a93b$var$Path","$a9d69158b154a93b$var$newRelativePath","outerPath","innerPath","outer","inner","$a9d69158b154a93b$var$pathPopFront","other","$a9d69158b154a93b$var$pathGetLength","ValidationPath","errorPrefix_","byteLength_","parts_","stringLength","validationPath","$a9d69158b154a93b$var$validationPathToErrorString","VisibilityMonitor","visibilityChange","hidden","visible_","visible","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","$a9d69158b154a93b$var$RECONNECT_MIN_DELAY","realtime_","$a9d69158b154a93b$var$OnlineMonitor","getInstance","onOnline_","onResponse","curReqNum","requestNumber_","connected_","requestCBHash_","initConnection_","_path","query4","currentHashFn","tag","queryId","listens","listenSpec","sendListen_","get1","outstandingGets_","sendRequest","outstandingGetCount_","query5","_queryIdentifier","req","_queryObject","hashFn","warnOnListenWarnings_","reduceReconnectDelayIfAdminCredential_","credential","tryAppCheck","authMethod","isValidFormat","onAuthRevoked_","invalidAppCheckTokenCount_","onAppCheckRevoked_","query6","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectRequestQueue_","putInternal","outstandingPuts_","outstandingPutCount_","queued","errorReason","reqNum","onDataPush_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","establishConnectionTimer_","establishConnection_","scheduleConnect_","reconnectDelay_","maxReconnectDelay_","online","cancelSentTransactions_","shouldReconnect_","lastConnectionAttemptTime_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onDisconnect6","onRealtimeDisconnect_","nextConnectionId_","canceled","sendRequestFn","closeFn","forceTokenRefresh_","ref1","connection","$a9d69158b154a93b$var$Connection","t2","interruptReasons_","delta","put","query7","removeListen_","listen","normalizedPathString","map1","statusCode","explanation","invalidAuthTokenCount_","notifyForInvalidToken","tryAuth","queries","setMaxNode","MAX_NODE","sendGet_","clientName","isReactNative","reportStats","isEmpty","warnings","safeGet","indexSpec","query8","_queryParams","getIndex","node","NamedNode","Index","oldNode","newNode","oldWrapped","$a9d69158b154a93b$var$NamedNode","newWrapped","MIN","KeyIndex","assertionError","$a9d69158b154a93b$var$KeyIndex","startKey","comparator","isReverse_","SortedMapIterator","cmp","nodeStack_","resultGenerator_","LLRBNode","RED","$a9d69158b154a93b$var$SortedMap","EMPTY_NODE","count","inorderTraversal","reverseTraversal","min_","maxKey","insert","fixUp_","smallest","isRed_","rotateRight_","moveRedRight_","removeMin_","colorFlip_","rotateLeft_","nl","nr","blackDepth","check_","BLACK","LLRBEmptyNode","$a9d69158b154a93b$var$LLRBNode","comparator_","SortedMap","root_","rightParent","minKey","setPriorityMaxNode","resultGenerator","$a9d69158b154a93b$var$SortedMapIterator","$a9d69158b154a93b$var$NAME_ONLY_COMPARATOR","$a9d69158b154a93b$var$NAME_COMPARATOR","$a9d69158b154a93b$var$LLRBEmptyNode","priority","$a9d69158b154a93b$var$doubleToIEEE754String","isLeafNode","priorityNode","$a9d69158b154a93b$var$MAX_NODE$2","getPriority","value_","priorityNode_","newPriorityNode","LeafNode","childName","__childrenNodeConstructor","childNode","newChildNode","front","$a9d69158b154a93b$var$pathGetFront","updateImmediateChild","updateChild","exportFormat","getValue","lazyHash_","toHash","$a9d69158b154a93b$var$priorityHashText","compareToLeafNode_","otherLeaf","otherIndex","VALUE_TYPE_ORDER","otherLeafType","thisIndex","thisLeafType","PriorityIndex","aPriority","bPriority","indexCmp","$a9d69158b154a93b$var$LeafNode","$a9d69158b154a93b$var$MAX_NODE$1","$a9d69158b154a93b$var$PriorityIndex","Base12Num","bits","bits_","current_","childList","keyFn","mapSortFn","low","high","namedNode","middle","chunkSize","buildBalancedTree","attachPennant","pennant","base12","isOne","nextBitIsOne","chunkSize1","buildPennant","$a9d69158b154a93b$var$Base12Num","root1","indexes_","indexSet_","IndexMap","indexKey","sortedMap","indexDefinition","sawIndexedValue","existingChildren","getIterator","Wrap","getNext","indexName","newIndexSet","newIndexes","indexedChildren","$a9d69158b154a93b$var$fallbackObject","$a9d69158b154a93b$var$buildChildSet","getCompare","existingSnap","newChildren","$a9d69158b154a93b$var$PRIORITY_INDEX","$a9d69158b154a93b$var$_defaultIndexMap","ChildrenNode","children_","indexMap_","$a9d69158b154a93b$var$validatePriorityNode","$a9d69158b154a93b$var$EMPTY_NODE","child2","getImmediateChild","getChild","updatePriority","newIndexMap","removeFromIndexes","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","forEachChild","INTEGER_REGEXP_","$a9d69158b154a93b$var$sha1","idx","predecessor","getPredecessorKey","resolveIndex_","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","startPost","peek","maxPost","endPost","getReverseIteratorFrom","$a9d69158b154a93b$var$KEY_INDEX","hasIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","$a9d69158b154a93b$var$IndexMap","Default","$a9d69158b154a93b$var$MAX_NODE","ChildrenNode1","MaxNode","$a9d69158b154a93b$var$ChildrenNode","__EMPTY_NODE","$a9d69158b154a93b$var$nodeFromJSON","json","jsonLeaf","childData","childrenHavePriority","hinzeJsonObj","$a9d69158b154a93b$var$each","child3","childSet","sortedChildSet","PathIndex","indexPath_","snap","indexValue","valueNode","$a9d69158b154a93b$var$pathSlice","$a9d69158b154a93b$var$ValueIndex","ValueIndex","compareTo","name7","$a9d69158b154a93b$var$VALUE_INDEX","$a9d69158b154a93b$var$changeValue","snapshotNode","$a9d69158b154a93b$var$changeChildAdded","$a9d69158b154a93b$var$changeChildRemoved","$a9d69158b154a93b$var$changeChildChanged","oldSnap","index_","IndexedFilter","newChild","affectedPath","optChangeAccumulator","oldChild","hasChild","trackChildChange","withIndex","newSnap","indexedFilter_","$a9d69158b154a93b$var$IndexedFilter","RangedFilter","getStartPost_","endPost_","getEndPost_","startPost_","isWithinStart","startIsInclusive_","getStartPost","isWithinEnd","endIsInclusive_","getEndPost","filtered","updateFullNode","makePost","getIndexStartValue","startName","minPost","hasEnd","LimitedFilter","withinDirectionalStart","reverse_","withinEndPost","withinStartPost","withinDirectionalEnd","compareRes","rangedFilter_","$a9d69158b154a93b$var$RangedFilter","limit_","getLimit","isViewFromLeft","startAfterSet_","endBeforeSet_","numChildren","getIndexedFilter","fullLimitUpdateChild_","isIndexed","hasNext","iterator1","getReverseIterator","count1","childKey","childSnap","changeAccumulator","newChildNamedNode","windowBoundary","oldEventCache","getFirstChild","getLastChild","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","startSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","limitSet_","loadsAllData","copy1","queryParams","orderBy","$a9d69158b154a93b$var$PathIndex","qs","startParam","endParam","$a9d69158b154a93b$var$queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","query9","listenId","getListenId_","thisListen","queryStringParameters","$a9d69158b154a93b$var$queryParamsToRestQueryStringParameters","restRequest_","query10","query11","_this7","querystring","query12","isDefault","$a9d69158b154a93b$var$ServerActions","$a9d69158b154a93b$var$SnapshotHolder","SnapshotHolder","rootNode_","$a9d69158b154a93b$var$newSparseSnapshotTree","$a9d69158b154a93b$var$pathIsEmpty","sparseSnapshotTree","prefixPath","tree","$a9d69158b154a93b$var$OperationType","OperationType1","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","$a9d69158b154a93b$var$StatsListener","reportStats_","reportedStats","haveStatsToReport","$a9d69158b154a93b$var$emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","childTree","subtree","$a9d69158b154a93b$var$newEmptyPath","ListenComplete","OVERWRITE","Overwrite","Merge","MERGE","$a9d69158b154a93b$var$CacheNode","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isCompleteForChild","EventGenerator","query_","eventGenerator","events","changes","registrations","eventCache","aWrapped","bWrapped","$a9d69158b154a93b$var$eventGeneratorCompareChanges","filteredChanges","materializedChange","prevName","getPredecessorChildName","$a9d69158b154a93b$var$eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","$a9d69158b154a93b$var$newViewCache","serverCache","$a9d69158b154a93b$var$viewCacheUpdateEventSnap","viewCache","eventSnap","$a9d69158b154a93b$var$viewCacheUpdateServerSnap","serverSnap","$a9d69158b154a93b$var$viewCacheGetCompleteEventSnap","getNode","$a9d69158b154a93b$var$viewCacheGetCompleteServerSnap","$a9d69158b154a93b$var$EmptyChildren","$a9d69158b154a93b$var$ImmutableTree","ImmutableTree","relativePath","predicate","child5","childExistingPathAndValue","findRootMostMatchingPathAndValue","$a9d69158b154a93b$var$pathChild","toSet","child7","child8","newTree","fold_","pathSoFar","accum","pathToFollow","currentRelativePath","foreachOnPath_","foreach_","childPath","$a9d69158b154a93b$var$CompoundWrite","CompoundWrite","writeTree_","$a9d69158b154a93b$var$compoundWriteAddWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree1","setTree","$a9d69158b154a93b$var$compoundWriteAddWrites","updates","newWrite","$a9d69158b154a93b$var$compoundWriteRemoveWrite","empty","newWriteTree2","$a9d69158b154a93b$var$compoundWriteHasCompleteWrite","$a9d69158b154a93b$var$compoundWriteGetCompleteNode","$a9d69158b154a93b$var$compoundWriteGetCompleteChildren","$a9d69158b154a93b$var$compoundWriteChildCompoundWrite","shadowingNode","errorPrefixFxn","$a9d69158b154a93b$var$compoundWriteApply","writeTree","priorityWrite","$a9d69158b154a93b$var$applySubtreeWrite","$a9d69158b154a93b$var$writeTreeChildWrites","$a9d69158b154a93b$var$newWriteTreeRef","errorPrefix","allWrites","writeId","$a9d69158b154a93b$var$writeTreeRemoveWrite","findIndex","removedWriteWasVisible","writeToRemove","removedWriteOverlapsWithOtherWrites","currentWrite","$a9d69158b154a93b$var$writeTreeRecordContainsPath_","$a9d69158b154a93b$var$pathContains","visibleWrites","$a9d69158b154a93b$var$writeTreeLayerTree_","$a9d69158b154a93b$var$writeTreeDefaultFilter_","lastWriteId","$a9d69158b154a93b$var$writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","child10","deepNode","$a9d69158b154a93b$var$writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","$a9d69158b154a93b$var$compoundWriteIsEmpty","$a9d69158b154a93b$var$writeTreeRefCalcCompleteEventCache","writeTreeRef","$a9d69158b154a93b$var$writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","$a9d69158b154a93b$var$writeTreeCalcCompleteEventChildren","$a9d69158b154a93b$var$writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","$a9d69158b154a93b$var$writeTreeRefShadowingWrite","$a9d69158b154a93b$var$writeTreeShadowingWrite","$a9d69158b154a93b$var$writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","$a9d69158b154a93b$var$writeTreeCalcIndexedSlice","$a9d69158b154a93b$var$writeTreeRefCalcCompleteChild","existingServerCache","$a9d69158b154a93b$var$writeTreeCalcCompleteChild","$a9d69158b154a93b$var$writeTreeRefChild","$a9d69158b154a93b$var$ChildChangeAccumulator","ChildChangeAccumulator","changeMap","oldChange","oldType","$a9d69158b154a93b$var$NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","child","$a9d69158b154a93b$var$WriteTreeCompleteChildSource","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","child11","$a9d69158b154a93b$var$viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","newViewCache1","filterServerNode","accumulator","fromUser","$a9d69158b154a93b$var$viewProcessorApplyUserOverwrite","fromServer","tagged","isFiltered","$a9d69158b154a93b$var$viewProcessorApplyServerOverwrite","$a9d69158b154a93b$var$viewProcessorCacheHasChild","curViewCache","foreach","$a9d69158b154a93b$var$viewProcessorApplyUserMerge","$a9d69158b154a93b$var$viewProcessorApplyServerMerge","ackUserWrite","serverChildren","$a9d69158b154a93b$var$viewProcessorRevertUserWrite","ackPath","changedChildren","name8","serverCachePath","mergePath","isCompleteForPath","changedChildren1","$a9d69158b154a93b$var$viewProcessorAckUserWrite","LISTEN_COMPLETE","oldServerNode","$a9d69158b154a93b$var$viewProcessorGenerateEventCacheAfterServerEvent","newViewCache5","$a9d69158b154a93b$var$viewProcessorListenComplete","getChanges","newViewCache2","isLeafOrEmpty","oldCompleteSnap","changePath","completeEventChildren","completeNode","oldEventNode","oldEventSnap","updatedPriority","newEventChild","childChangePath","eventChildUpdate","filtersNodes","changedSnap","newServerCache","serverFilter","oldServerSnap","newServerNode","newViewCache3","newViewCache4","getCompleteChild","$a9d69158b154a93b$var$pathGetBack","$a9d69158b154a93b$var$pathParent","$a9d69158b154a93b$var$viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","$a9d69158b154a93b$var$View","View","initialViewCache","hasLimit","$a9d69158b154a93b$var$LimitedFilter","initialServerCache","initialEventCache","indexFilter","eventGenerator_","$a9d69158b154a93b$var$EventGenerator","view","$a9d69158b154a93b$var$viewIsEmpty","eventRegistrations_","$a9d69158b154a93b$var$viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","existing","hasAnyCallback","processor_","moves","eventRegistrations","syncPoint","optCompleteServerCache","views","$a9d69158b154a93b$var$viewApplyOperation","view1","$a9d69158b154a93b$var$syncPointGetView","query13","serverCacheComplete","eventCacheComplete","query14","initialChanges","query15","$a9d69158b154a93b$var$syncPointHasCompleteView","viewQueryId","query","removed","view2","$a9d69158b154a93b$var$referenceConstructor$1","_repo","$a9d69158b154a93b$var$syncPointGetCompleteServerCache","$a9d69158b154a93b$var$viewGetCompleteServerCache","query16","$a9d69158b154a93b$var$syncPointGetCompleteView","$a9d69158b154a93b$var$syncPointViewExistsForQuery","query17","$a9d69158b154a93b$var$syncPointViewForQuery","SyncTree","listenProvider_","pendingWriteTree_","$a9d69158b154a93b$var$syncTreeApplyUserOverwrite","syncTree","newData","$a9d69158b154a93b$var$syncTreeApplyOperationToSyncPoints_","$a9d69158b154a93b$var$Overwrite","$a9d69158b154a93b$var$syncTreeAckUserWrite","$a9d69158b154a93b$var$writeTreeGetWrite","$a9d69158b154a93b$var$AckUserWrite","$a9d69158b154a93b$var$syncTreeApplyServerOverwrite","$a9d69158b154a93b$var$syncTreeRemoveEventRegistration","query18","skipListenerDedup","maybeSyncPoint","syncPointTree_","removedAndEvents","$a9d69158b154a93b$var$syncPointRemoveEventRegistration","$a9d69158b154a93b$var$syncPointIsEmpty","removingDefault","query19","covered","findOnPath","parentSyncPoint","newViews","$a9d69158b154a93b$var$syncTreeCollectDistinctViewsForSubTree_","$a9d69158b154a93b$var$syncTreeCreateListenerForView_","defaultTag","stopListening","$a9d69158b154a93b$var$syncTreeQueryForListening_","queryToRemove","$a9d69158b154a93b$var$syncTreeApplyTaggedQueryOverwrite","$a9d69158b154a93b$var$syncTreeQueryKeyForTag_","queryKey","$a9d69158b154a93b$var$syncTreeApplyTaggedOperation_","queryPath","query20","foreachOnPath","pathToSyncPoint","sp","foundAncestorDefaultView","$a9d69158b154a93b$var$SyncPoint","foreachChild","childSyncPoint","$a9d69158b154a93b$var$syncTreeMakeQueryKey_","queryToTagMap","tagToQueryMap","$a9d69158b154a93b$var$syncPointAddEventRegistration","skipSetupListener","$a9d69158b154a93b$var$syncTreeCalcCompleteEventCache","serverCache1","$a9d69158b154a93b$var$syncTreeGetServerValue","query21","serverCacheNode","$a9d69158b154a93b$var$viewGetCompleteNode","childWritesCache","$a9d69158b154a93b$var$syncTreeApplyOperationHelper_","childOperation","childServerCache","$a9d69158b154a93b$var$syncPointApplyOperation","syncPointTree","operationForChild","$a9d69158b154a93b$var$syncTreeTagForQuery","query22","$a9d69158b154a93b$var$syncTreeParseQueryKey_","$a9d69158b154a93b$var$ListenComplete","$a9d69158b154a93b$var$newOperationSourceServerTaggedQuery","$a9d69158b154a93b$var$syncTreeApplyTaggedListenComplete","$a9d69158b154a93b$var$syncTreeApplyListenComplete","query1","$a9d69158b154a93b$var$errorForServerCode","query23","query24","splitIndex","maybeChildSyncPoint","$a9d69158b154a93b$var$referenceConstructor","query25","$a9d69158b154a93b$var$syncTreeRemoveTags_","removedQueryKey","removedQuery","removedQueryTag","$a9d69158b154a93b$var$syncTreeGetNextQueryTag_","query26","view3","startListening","childMap","childQueries","queriesToStop","queryToStop","ExistingValueProvider","syncTree_","DeferredValueProvider","path_","existingVal","serverValues","$a9d69158b154a93b$var$resolveComplexDeferredValue","$a9d69158b154a93b$var$resolveScalarDeferredValue","op","existingNode","$a9d69158b154a93b$var$DeferredValueProvider","$a9d69158b154a93b$var$resolveDeferredLeafValue","rawPri","leafNode","childrenNode","$a9d69158b154a93b$var$resolveDeferredValue","name9","parent","childCount","Tree","$a9d69158b154a93b$var$treeSubTree","pathObj","child13","$a9d69158b154a93b$var$Tree","$a9d69158b154a93b$var$treeGetValue","$a9d69158b154a93b$var$treeSetValue","$a9d69158b154a93b$var$treeUpdateParents","$a9d69158b154a93b$var$treeHasChildren","includeSelf","childrenFirst","child15","$a9d69158b154a93b$var$treeGetPath","child16","childEmpty","$a9d69158b154a93b$var$treeIsEmpty","childExists","$a9d69158b154a93b$var$INVALID_KEY_REGEX_","$a9d69158b154a93b$var$INVALID_PATH_REGEX_","$a9d69158b154a93b$var$MAX_LEAF_SIZE_","$a9d69158b154a93b$var$isValidKey","$a9d69158b154a93b$var$isValidPathString","$a9d69158b154a93b$var$validateFirebaseDataArg","fnName","$a9d69158b154a93b$var$ValidationPath","errorPrefix1","hasDotValue","hasActualChild","child1","$a9d69158b154a93b$var$validationPathPop","$a9d69158b154a93b$export$8637b026ace8abb1","argumentName","creatorFunction","changeTree","fromObject","$a9d69158b154a93b$var$Merge","$ca5094ce9605b30c$export$af9d0a1d3cb53fa6","ownerDocument","e3","n2","_$t1","e4","HTMLElement","cloneNode","closable","onShow","e5","parentElement","e6","requestAnimationFrame"],"version":3,"file":"index.fef237e9.js.map"}